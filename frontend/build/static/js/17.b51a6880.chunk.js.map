{"version":3,"sources":["images/new_flow_images/arrow_big.svg","images/new_flow_images/weight_sensor.svg","images/new_flow_images/actuator.svg","images/new_flow_images/analytics.svg","images/new_flow_images/application.svg","pages/manageAppDeployment/manageAppDeployment.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/esm/Box/Box.js"],"names":["ManageAppDeployment","props","componentDidMount","deploy","deployStats","deployEndPoints","applicationUeList","setState","callUnderProgress","urlConnected","analyzeApplication","getDeployStats","getEndPoints","getApplicationUEList","deployStateTimeout","setInterval","intiateCall","state","thisView","deployStatsToken","cancel","axios","CancelToken","source","all","apiService","token","then","res","catch","console","log","deployInputsToken","applicationUeListToken","onchangeInput","event","target","name","value","connectApplication","url","trim","notify","show","toaster","duration","error","analyseApplication","resetState","manageDeploySelectOptions","label","manageInputSelectOptions","manageInputSecondSelectOptions","this","clearInterval","history","className","Grid","container","spacing","item","lg","md","xs","length","Box","defaultValue","options","type","onChange","placeholder","sm","Button","variant","color","onClick","Widget","title","upperTitle","bodyclassName","disableWidgetMenu","ResponsiveContainer","width","height","LineChart","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","hide","YAxis","Tooltip","Legend","verticalAlign","align","wrapperStyle","Line","stroke","fill","alignItems","justifyContent","style","gap","map","eachInput","inputIndex","src","weightSensorIcon","alt","selectedApplicationUeList","updateDeploy","rightArrowIcon","applicationIcon","eachOutput","outputIndex","analyticsIcon","setTimeout","push","actuatorIcon","display","Component","connect","config","siteCoordinator","dispatch","confg","withRouter","_excluded","extendSxProp","finalSx","inSx","sx","result","systemProps","otherProps","Object","keys","forEach","prop","propToStyleFunction","splitProps","_objectWithoutPropertiesLoose","Array","isArray","isPlainObject","_extends","defaultTheme","defaultClassName","generateClassName","styleFunctionSx","defaultStyleFunctionSx","BoxRoot","styled","shouldForwardProp","React","inProps","ref","theme","useTheme","_extendSxProp","component","other","_jsx","as","clsx","createBox","createTheme","ClassNameGenerator","generate"],"mappings":"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","file":"static/js/17.b51a6880.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arrow_big.875ab020.svg\";","export default __webpack_public_path__ + \"static/media/weight_sensor.df275578.svg\";","export default __webpack_public_path__ + \"static/media/actuator.11217b82.svg\";","export default __webpack_public_path__ + \"static/media/analytics.b30ada62.svg\";","export default __webpack_public_path__ + \"static/media/application.34b55dc8.svg\";","import React, { Component } from 'react';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport './manageAppDeployment.scss';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { notify } from 'react-notify-toast';\nimport { NavLink } from \"react-router-dom\";\nimport {\n    Grid,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    FormControl,\n    MenuItem,\n    TextField\n} from \"@material-ui/core\";\n\nimport {\n    ResponsiveContainer,\n    LineChart,\n    Line,\n    YAxis,\n    XAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    RadialBarChart,\n    RadialBar\n} from \"recharts\";\n\n\nimport Select from 'react-select'\n\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\n\nimport * as Icons from \"@material-ui/icons\";\n\nimport Widget from \"../../components/Widget\";\n\nimport rightArrowIcon from \"../../images/new_flow_images/arrow_big.svg\";\nimport weightSensorIcon from \"../../images/new_flow_images/weight_sensor.svg\";\n\n\nimport actuatorIcon from \"../../images/new_flow_images/actuator.svg\";\nimport analyticsIcon from \"../../images/new_flow_images/analytics.svg\";\nimport applicationIcon from \"../../images/new_flow_images/application.svg\";\n\nimport apiService from '../../services/apiService.js';\nimport { updateDeploy } from '../../store/siteCoordinator/siteCoordinator.actions';\nimport { withRouter } from 'react-router-dom'\n\n\nclass ManageAppDeployment extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"Cloud\",\n            manageDeploySelectOptions: [\n                { value: 'cloud', label: 'Cloud' },\n                { value: 'internal', label: 'Internal' },\n                { value: 'external', label: 'External' }\n            ],\n            manageInputSelectOptions: [\n                { value: 'device21', label: 'Device21' },\n                { value: 'device22', label: 'Device22' },\n                { value: 'device23', label: 'Device23' }\n            ],\n            manageInputSecondSelectOptions: [\n                { value: 'device17', label: 'Device17' },\n                { value: 'device18', label: 'Device18' },\n                { value: 'device19', label: 'Device19' }\n            ],\n            callUnderProgress: false,\n            deployEndPoints: {},\n            url: 'https://agri-vision.webflow.io/', urlConnected: false, analyzeApplication: false,\n            applicationUeList: []\n        }\n    }\n\n    componentDidMount = () => {\n        const { deployStats, deployEndPoints, applicationUeList } = this.props.deploy\n        if (!deployStats || !deployEndPoints || !applicationUeList) {\n            this.getDeployStats();\n            this.getEndPoints();\n            this.getApplicationUEList();\n\n\n\n        } else {\n            this.setState({ deployStats });\n            this.setState({ deployEndPoints });\n            this.setState({ callUnderProgress: false });\n            this.setState({ applicationUeList });\n            this.setState({ urlConnected: true });\n            this.setState({ analyzeApplication: true });\n\n\n\n        }\n\n\n        this.deployStateTimeout = setInterval(this.intiateCall, 5000);\n    }\n\n    intiateCall = () => {\n        if (!this.state.callUnderProgress) {\n            this.getDeployStats();\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.deployStatsToken)\n            this.deployStatsToken.cancel();\n        if (this.deployInputsToken)\n            this.deployInputsToken.cancel();\n        if (this.applicationUeListToken)\n            this.applicationUeListToken.cancel();\n        clearInterval(this.deployStateTimeout);\n    }\n\n    getDeployStats = () => {\n\n        var thisView = this;\n        if (this.deployStatsToken)\n            this.deployStatsToken.cancel();\n        this.deployStatsToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getDeployStats(this.deployStatsToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n\n                    let deployStats = (res[0][\"data\"] && res[0][\"data\"]) ? res[0][\"data\"] : [];\n                    thisView.setState({ deployStats });\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n                thisView.setState({ callUnderProgress: false });\n\n            });\n\n    }\n\n    getEndPoints = () => {\n\n        var thisView = this;\n        if (this.deployInputsToken)\n            this.deployInputsToken.cancel();\n        this.deployInputsToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getEndPoints(this.deployInputsToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n\n                    let deployEndPoints = (res[0][\"data\"] && res[0][\"data\"]) ? res[0][\"data\"] : [];\n                    thisView.setState({ deployEndPoints });\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n                thisView.setState({ callUnderProgress: false });\n\n            });\n\n    }\n\n    getApplicationUEList = () => {\n\n        var thisView = this;\n        if (this.applicationUeListToken)\n            this.applicationUeListToken.cancel();\n        this.applicationUeListToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getApplicationUEList(this.applicationUeListToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n\n                    let applicationUeList = (res[0][\"data\"] && res[0][\"data\"]) ? res[0][\"data\"] : [];\n                    thisView.setState({ applicationUeList });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n                thisView.setState({ callUnderProgress: false });\n\n            });\n\n    }\n\n    onchangeInput = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    connectApplication = () => {\n\n        if (!this.state.url || this.state.url.trim() === '') {\n            notify.show(\"Please Enter URL\", \"custom\", this.props.toaster.duration, this.props.toaster.error);\n        } else {\n            this.setState({ urlConnected: true });\n        }\n\n    }\n\n    analyseApplication = () => {\n        this.setState({ analyzeApplication: true });\n    }\n\n    resetState = () => {\n\n        this.setState({ urlConnected: false });\n    }\n\n    render() {\n\n        const { deployStats, manageDeploySelectOptions, manageInputSelectOptions, manageInputSecondSelectOptions,\n            deployEndPoints, url, urlConnected, analyzeApplication, applicationUeList } = this.state;\n        const { history } = this.props\n        return (\n            <div className=\"monitoring-network-deploy-block\">\n\n                <Grid container spacing={4}>\n                    <Grid item lg={6} md={6} xs={12} className=\"fgm-inner-grid\">\n                        <div className=\"mnd-first-section\">\n                            <div className=\"mls-bar-header\">Application Deployment</div>\n                            <div className=\"choose-an-option-below-box\">\n                                {\n                                    urlConnected &&\n                                    <div className=\"choose-an-option-below-title-box\">\n                                        <div className=\"choose-an-option-bullet-icon\"></div>\n                                        {\n                                            deployEndPoints && deployEndPoints.length > 0 && deployEndPoints[0] && deployEndPoints[0][\"name\"] &&\n                                            <div className=\"choose-an-option-below-title\">{deployEndPoints[0][\"name\"]}</div>\n                                        }\n                                    </div>\n                                }\n                            </div>\n                        </div>\n\n                        <div className=\"application-host-block\">\n                            <Grid container spacing={2}>\n                                <Grid item lg={5} md={6} xs={6} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                    <div className=\"application-host-form\">\n                                        <span>Application hosted on</span>\n                                    </div>\n                                </Grid>\n                                <Grid item lg={7} md={6} xs={6} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                    <Box>\n                                        <div className=\"mds-left-section\">\n                                            <Select defaultValue={{ label: \"Cloud\", value: 0 }} options={manageDeploySelectOptions} />\n                                        </div>\n                                    </Box>\n                                </Grid>\n\n                                <Grid item lg={5} md={6} xs={6} className=\"fgm-inner-grid devices-deploy-custom-column2\">\n                                    <div className=\"application-host-form\">\n                                        <span>URL</span>\n                                    </div>\n                                </Grid>\n                                <Grid item lg={7} md={6} xs={6} className=\"fgm-inner-grid devices-deploy-custom-column2\">\n                                    <div className=\"mb-3\">\n                                        <input type=\"text\" name=\"url\" value={url} onChange={this.onchangeInput} className=\"form-control custom-\" placeholder=\"\" />\n                                    </div>\n                                </Grid>\n\n                                <Grid item lg={5} md={6} xs={6} className=\"fgm-inner-grid\">\n                                    <div className=\"application-host-form\">\n                                    </div>\n                                </Grid>\n\n                                <Grid item lg={7} md={6} sm={12} xs={12} className=\"fgm-inner-grid devices-deploy-custom-column3\">\n\n                                    <Button\n                                        className=\"connect-button\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        type=\"submit\"\n                                        onClick={this.connectApplication}\n                                    >\n                                        Connect\n                                    </Button>\n\n                                </Grid>\n\n                            </Grid>\n                        </div>\n                    </Grid>\n\n                    {\n                        analyzeApplication &&\n                        <Grid item lg={6} md={6} xs={12} className=\"fgd-form\">\n                            <div className=\"mnd-second-section\">\n                                <div className=\"mls-bar-header\">The activity of {deployEndPoints && deployEndPoints.length > 0 && deployEndPoints[0] && deployEndPoints[0][\"name\"] ? deployEndPoints[0][\"name\"] : \"\"} Application</div>\n                            </div>\n                            <div className=\"mnd-chart-block\">\n                                <Widget\n                                    title=\"\"\n                                    upperTitle\n                                    bodyclassName={''}\n                                    className={''}\n                                    disableWidgetMenu={true}\n                                >\n                                    {\n                                        (deployStats && deployStats.length > 0) &&\n                                        <ResponsiveContainer width=\"100%\" height={250}>\n                                            <LineChart\n                                                width={500}\n                                                height={200}\n                                                data={deployStats ? deployStats : []}\n                                                margin={{\n                                                    top: 30,\n                                                    right: 10,\n                                                    left: 10,\n                                                    bottom: 0,\n                                                }}\n                                            >\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"x\" type=\"category\" hide={true} />\n                                                <YAxis dataKey=\"Packet Loss\" hide={true} />\n                                                <Tooltip />\n                                                <Legend verticalAlign=\"top\" align=\"right\" wrapperStyle={{ top: 5 }} />\n                                                <Line type=\"monotone\" dataKey=\"Latency\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                                <Line type=\"monotone\" dataKey=\"Packet Loss\" stroke=\"#4789E1\" fill=\"#4789E1\" />\n                                            </LineChart>\n                                        </ResponsiveContainer>\n                                    }\n                                </Widget>\n                            </div>\n                        </Grid>\n                    }\n\n                </Grid>\n\n\n                <br />\n\n                {\n                    urlConnected &&\n                    <div className=\"deploy-input-section\">\n                        <Grid container spacing={4} alignItems=\"center\" justifyContent='space-between' style={{ gap: '12px' }} className=\"deploy-input-wrapper\">\n                            <Grid item lg={3} md={3} sm={12} xs={12} className=\"fgm-inner-grid each-deploy-input-output-block\">\n                                <div className=\"each-deploy-input-output-section\">\n                                    <div className=\"each-deploy-input-output-title\">Inputs</div>\n                                    {\n                                        deployEndPoints && deployEndPoints.length > 0 && deployEndPoints[0] && deployEndPoints[0][\"details\"] &&\n                                        deployEndPoints[0][\"details\"] && deployEndPoints[0][\"details\"][\"inputs\"] &&\n                                        deployEndPoints[0][\"details\"][\"inputs\"].length > 0 &&\n                                        deployEndPoints[0][\"details\"][\"inputs\"].map((eachInput, inputIndex) => {\n                                            return (\n                                                <div className=\"each-deploy-input-output-main\" key={inputIndex}>\n                                                    <Grid container spacing={2} className=\"each-deploy-input-output-grid\">\n                                                        <Grid item lg={2} md={12} xs={2}>\n                                                            <img src={weightSensorIcon} alt=\"weightSensorIcon\" className=\"weight-sensor-icon\" />\n                                                        </Grid>\n                                                        <Grid item lg={5} md={12} xs={5} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                                            <div className=\"application-host-form\">\n                                                                <span>{eachInput.name}</span>\n                                                            </div>\n                                                        </Grid>\n                                                        <Grid item lg={5} md={12} xs={5} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                                            <Box>\n                                                                <div className=\"mds-left-section\">\n                                                                    <Select defaultValue={this.props.deploy && this.props.deploy.selectedApplicationUeList ? this.props.deploy.selectedApplicationUeList : applicationUeList[0]} options={applicationUeList}\n                                                                        onChange={(value) => {\n\n                                                                            this.props.updateDeploy({\n                                                                                ...this.props.deploy,\n                                                                                selectedApplicationUeList: value\n                                                                            })\n                                                                        }\n                                                                        }\n                                                                    />\n                                                                </div>\n                                                            </Box>\n                                                        </Grid>\n                                                    </Grid>\n                                                </div>\n                                            )\n                                        })\n                                    }\n\n                                </div>\n                            </Grid>\n                            <img src={rightArrowIcon} alt=\"rightArrowIcon\" className=\"right-arrow-icon\" />\n                            <Grid item lg={3} md={3} sm={12} xs={12} className=\"fgm-inner-grid each-deploy-input-output-block\">\n                                <div className=\"each-deploy-input-output-section\">\n                                    <div className=\"each-deploy-input-output-title\">Application</div>\n                                    <div className=\"each-deploy-input-output-app-title\">\n                                        {\n                                            (deployEndPoints && deployEndPoints.length > 0 && deployEndPoints[0] && deployEndPoints[0][\"name\"]) ?\n                                                deployEndPoints[0][\"name\"] : \"\"\n                                        }\n                                    </div>\n\n                                    <div className=\"each-deploy-input-output-app-icon\">\n                                        <img src={applicationIcon} alt=\"applicationIcon\" className=\"applicationIcon\" />\n                                    </div>\n\n                                    <div className=\"each-deploy-input-output-app-analyse\">\n                                        <span onClick={this.analyseApplication}>Analyse</span>\n                                    </div>\n\n                                </div>\n                            </Grid>\n                            <img src={rightArrowIcon} alt=\"rightArrowIcon\" className=\"right-arrow-icon\" />\n                            <Grid item lg={3} md={3} sm={12} xs={12} className=\"fgm-inner-grid each-deploy-input-output-block\" >\n                                <div className=\"each-deploy-input-output-section\">\n                                    <div className=\"each-deploy-input-output-title\">Outputs</div>\n\n                                    {\n                                        deployEndPoints && deployEndPoints.length > 0 && deployEndPoints[0] && deployEndPoints[0][\"details\"] &&\n                                        deployEndPoints[0][\"details\"] && deployEndPoints[0][\"details\"][\"outputs\"] &&\n                                        deployEndPoints[0][\"details\"][\"outputs\"].length > 0 &&\n                                        deployEndPoints[0][\"details\"][\"outputs\"].map((eachOutput, outputIndex) => {\n\n                                            if (eachOutput.type === \"link\") {\n                                                return (\n                                                    <div className=\"each-deploy-input-output-main\" key={outputIndex}>\n                                                        <Grid container spacing={2} className=\"each-deploy-input-output-grid\">\n                                                            <Grid item lg={2} md={3} xs={2}>\n                                                                <img src={analyticsIcon} alt=\"analyticsIcon\" className=\"weight-sensor-icon\" />\n                                                            </Grid>\n                                                            <Grid item lg={4} md={9} xs={4} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                                                <div className=\"application-host-form\">\n                                                                    <span>{eachOutput.name}</span>\n                                                                </div>\n                                                            </Grid>\n                                                            <Grid item lg={6} md={12} xs={6} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                                                <Box>\n                                                                    <div className=\"click-here-to-access-button\"\n                                                                        onClick={() => {\n                                                                            this.props.updateDeploy({})\n                                                                            setTimeout(this.resetState\n                                                                                , 15000);\n                                                                            history.push('/show')\n\n\n                                                                        }}\n                                                                    >\n\n                                                                        Click here to access\n                                                                    </div>\n                                                                </Box>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </div>\n                                                )\n                                            } else {\n                                                return (\n                                                    <div className=\"each-deploy-input-output-sub-section\" key={outputIndex}>\n                                                        <Grid container spacing={2} className=\"each-deploy-input-output-grid\">\n                                                            <Grid item lg={2} md={2} xs={2}>\n                                                                <img src={actuatorIcon} alt=\"actuatorIcon\" className=\"weight-sensor-icon\" />\n                                                            </Grid>\n                                                            <Grid item lg={4} md={4} xs={4} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                                                <div className=\"application-host-form\">\n                                                                    <span>{eachOutput.name}</span>\n                                                                </div>\n                                                            </Grid>\n                                                            <Grid item lg={6} md={6} xs={6} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                                                <Box>\n                                                                    <div className=\"mds-left-section\">\n                                                                        <Select defaultValue={applicationUeList[0]} options={applicationUeList}\n\n                                                                        />\n                                                                    </div>\n                                                                </Box>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </div>\n                                                )\n                                            }\n\n                                        })\n\n                                    }\n\n                                </div>\n                            </Grid>\n                            <img src={rightArrowIcon} alt=\"rightArrowIcon\" className=\"right-arrow-icon\" style={{ display: 'none' }} />\n                        </Grid>\n                    </div>\n                }\n\n                {\n                    urlConnected && analyzeApplication && !this.props.deploy.deployStats &&\n                    <Grid className='mndb-add-to-network'>\n\n                        <div onClick={() => {\n                            this.props.updateDeploy({\n                                ...this.props.deploy,\n                                deployEndPoints,\n                                applicationUeList,\n                                deployStats\n                            })\n                            history.push('/manage')\n                        }} className={\"mndb-add-to-network-text\"}>\n                            Add Application to Network\n                        </div>\n                    </Grid>\n                }\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    config: state.siteCoordinator.config,\n    toaster: state.siteCoordinator.toaster,\n    deploy: state.siteCoordinator.deploy\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    updateDeploy: (confg) => dispatch(updateDeploy(confg))\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ManageAppDeployment));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport { propToStyleFunction } from '../getThemeValue';\nconst splitProps = props => {\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  Object.keys(props).forEach(prop => {\n    if (propToStyleFunction[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n      sx: inSx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport defaultStyleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName,\n    styleFunctionSx = defaultStyleFunctionSx\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"sourceRoot":""}