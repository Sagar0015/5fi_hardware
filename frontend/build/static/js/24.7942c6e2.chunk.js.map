{"version":3,"sources":["images/new_flow_images/arrow.svg","images/new_flow_images/arrow_light_pink.svg","images/new_flow_images/radial_blue.svg","pages/manageNetwork/manageNetwork.js"],"names":["ChartJS","register","ArcElement","Tooltip","Legend","MonitorNetwork","props","intiateCall","state","callUnderProgress","suggestedActionUeCheck","setDefaultValues","thisView","Object","keys","defaultValues","map","eachKey","index","setState","operationType","ns_supi","editSubscriberData","ueId","toggleSubscriber","addSubsciberFormStatus","addSubscriberError","toggleSubscribersList","subscribersListStatus","getSubscribersList","handleChange","event","target","name","value","handleChangeOperationCode","ns_operation_code_type","addNewSubscriber","data","id","ns_id","supi","auth_method","ns_auth_method","k","ns_k","operation_code_type","operator_code_value","ns_operator_code_value","addSubscriber","console","log","modifySubscriber","addSubsciberToken","cancel","axios","CancelToken","source","all","apiService","token","then","res","catch","deleteSubscriber","subscriberData","deleteSubsciberToken","deleteingUeid","enableModifySubscriber","modifySubscriberToken","newUeId","getSubscribersToken","getSubscribers","subscribersList","suggestedActionTOken","suggestedActionUE","suggestedActionButton","suggestedActionUeSubmit","suggestedActionSubmitTOken","suggestedActionUESubmit","modifyUeid","chartData","chartHistory","chartLabel","color","datasets","label","backgroundColor","borderColor","borderWidth","timeout","this","setInterval","clearInterval","location","match","deploy","history","className","Grid","container","spacing","item","lg","md","xs","Widget","title","upperTitle","bodyclassName","disableWidgetMenu","fontBold","justifyContent","sm","src","ArrowBlue","alt","to","style","textDecoration","path","ArrowLightPink","deployEndPoints","length","eachChartHistory","Timeline","align","Item","radialBlueIcon","Dialog","open","DialogTitle","fontSize","onClick","DialogContent","type","spellCheck","onChange","onKeyDown","FormControl","Select","displayEmpty","inputProps","MenuItem","DialogActions","loadingIcon","Button","eachSub","Component","connect","config","siteCoordinator","toaster","dispatch","withRouter"],"mappings":"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","file":"static/js/24.7942c6e2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arrow.00209b3b.svg\";","export default __webpack_public_path__ + \"static/media/arrow_light_pink.39e482be.svg\";","export default __webpack_public_path__ + \"static/media/radial_blue.824c20ce.svg\";","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport './manageNetwork.scss';\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport {\n    Grid,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    FormControl,\n    Select,\n    MenuItem\n} from \"@material-ui/core\";\nimport * as Icons from \"@material-ui/icons\";\nimport { Timeline } from 'rsuite';\n\n\nimport Widget from \"../../components/Widget\";\n\n// import ArrowBlue from '../../images/home/arrow_blue.svg';\nimport ArrowBlue from '../../images/new_flow_images/arrow.svg';\nimport ArrowLightPink from '../../images/new_flow_images/arrow_light_pink.svg';\n\nimport loadingIcon from '../../images/home/loading.gif';\nimport radialBlueIcon from '../../images/new_flow_images/radial_blue.svg';\n\nimport apiService from '../../services/apiService';\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nclass MonitorNetwork extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addSubsciberFormStatus: false,\n            subscribersListStatus: false,\n            ns_id: '', ns_supi: '', ns_auth_method: '', ns_k: '', ns_operation_code_type: '', ns_operator_code_value: '',\n            addSubscriberError: '',\n            subscribersList: [],\n            callUnderProgress: false,\n            deleteingUeid: '',\n            modifyUeid: '',\n            operationType: 'add', editSubscriberData: null,\n            suggestedActionButton: null,\n            chartData: {\n                chartHistory: [\n                    { chartLabel: \"Uplink\", value: \"90.25 GB\", color: \"#4FAD58\" },\n                    { chartLabel: \"Downlink\", value: \"270.75 GB\", color: \"#A868A6\" }\n                ],\n                // labels: ['Downlink', 'Uplink'],\n                datasets: [\n                    {\n                        label: '# of Votes',\n                        data: [90.25, 270.75],\n                        backgroundColor: [\n                            '#4FAD58',\n                            '#A868A6'\n                        ],\n                        borderColor: [\n                            '#4FAD58',\n                            '#A868A6'\n                        ],\n                        borderWidth: 1\n                    },\n                ],\n\n            }\n        }\n\n        this.getSubscribersToken = null;\n        this.addSubsciberToken = null;\n        this.deleteSubsciberToken = null;\n        this.modifySubscriberToken = null;\n        this.suggestedActionTOken = null;\n        this.suggestedActionSubmitTOken = null;\n\n        this.timeout = null;\n\n        this.defaultValues = {\n            ns_id: 'ue1',\n            ns_supi: 'imsi-208930000000003',\n            ns_auth_method: '5G-AKA',\n            ns_k: '8baf473f2f8fd09487cccbd7097c6862',\n            ns_operation_code_type: 'opc',\n            ns_operator_code_value: '8e27b6af0e692e750f32667a3b14605d'\n\n        }\n\n    }\n\n    componentWillMount() {\n        this.setDefaultValues();\n        this.suggestedActionUeCheck();\n        this.timeout = setInterval(this.intiateCall, 5000);\n    }\n\n    intiateCall = () => {\n        if (!this.state.callUnderProgress) {\n            this.suggestedActionUeCheck();\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.suggestedActionTOken)\n            this.suggestedActionTOken.cancel();\n        clearInterval(this.timeout);\n    }\n\n    setDefaultValues = () => {\n        var thisView = this;\n        Object.keys(this.defaultValues).map((eachKey, index) => {\n            this.setState({ [eachKey]: thisView.defaultValues[eachKey] });\n        });\n        if (this.state.operationType === \"edit\") {\n            this.setState({ ns_supi: this.state.editSubscriberData.ueId });\n        }\n    }\n\n    toggleSubscriber = (operationType) => {\n        this.setState({ addSubsciberFormStatus: !this.state.addSubsciberFormStatus, operationType: operationType ? operationType : \"edit\" });\n        this.setDefaultValues();\n        this.setState({ addSubscriberError: '' });\n    }\n\n    toggleSubscribersList = () => {\n\n        if (!this.state.subscribersListStatus) {\n            this.getSubscribersList();\n        }\n        this.setState({ subscribersListStatus: !this.state.subscribersListStatus });\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleChangeOperationCode = (event) => {\n        this.setState({ ns_operation_code_type: event.target.value })\n    }\n\n    addNewSubscriber = () => {\n\n        const { ns_id, ns_supi, ns_auth_method, ns_k, ns_operation_code_type, ns_operator_code_value } = this.state;\n\n        let data = {\n            id: ns_id,\n            supi: ns_supi,\n            auth_method: ns_auth_method,\n            k: ns_k,\n            operation_code_type: ns_operation_code_type,\n            operator_code_value: ns_operator_code_value\n        }\n\n        if (data.id === '' || data.supi === '' || data.auth_method === '' || data.auth_method === ''\n            || data.k === '' || data.operation_code_type === '' || data.operator_code_value === '') {\n            this.setState({ addSubscriberError: 'Please fill all details' });\n        } else {\n            this.setState({ addSubscriberError: '' });\n\n            if (this.state.operationType === 'add') {\n                this.addSubscriber(data);\n            } else {\n                console.log(data);\n                this.modifySubscriber(data);\n            }\n\n        }\n    }\n\n    addSubscriber = (data) => {\n\n        var thisView = this;\n        if (this.addSubsciberToken)\n            this.addSubsciberToken.cancel();\n        this.addSubsciberToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.addSubscriber(this.addSubsciberToken.token, data)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ addSubscriberError: '' });\n                    thisView.setDefaultValues();\n                    thisView.toggleSubscriber();\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred add subscriber element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n    deleteSubscriber = (subscriberData) => {\n\n        var thisView = this;\n        if (this.deleteSubsciberToken)\n            this.deleteSubsciberToken.cancel();\n        this.deleteSubsciberToken = axios.CancelToken.source();\n\n        this.setState({ deleteingUeid: subscriberData.ueId });\n        axios.all([apiService.deleteSubscriber(this.deleteSubsciberToken.token, subscriberData.ueId)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ deleteingUeid: '' });\n                    thisView.getSubscribersList();\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred add subscriber element service');\n            });\n\n    }\n\n    enableModifySubscriber = (subscriberData) => {\n        this.setState({ operationType: \"edit\", editSubscriberData: subscriberData }, () => {\n            this.toggleSubscriber();\n        });\n        this.toggleSubscribersList();\n    }\n\n    modifySubscriber = (subscriberData) => {\n\n        var thisView = this;\n        if (this.modifySubscriberToken)\n            this.modifySubscriberToken.cancel();\n        this.modifySubscriberToken = axios.CancelToken.source();\n\n        console.log(subscriberData);\n        let data = {\n            ueId: this.state.editSubscriberData.ueId,\n            newUeId: subscriberData.supi\n        }\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.modifySubscriber(this.modifySubscriberToken.token, data)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ callUnderProgress: false })\n                    thisView.toggleSubscriber();\n                    thisView.toggleSubscribersList();\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred add subscriber element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n    getSubscribersList = () => {\n\n        var thisView = this;\n        if (this.getSubscribersToken)\n            this.getSubscribersToken.cancel();\n        this.getSubscribersToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getSubscribers(this.getSubscribersToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n                    if (res[0][\"status\"] && res[0][\"data\"]) {\n                        thisView.setState({ subscribersList: res[0][\"data\"] });\n                    }\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred add subscriber element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n    suggestedActionUeCheck = () => {\n        var thisView = this;\n        if (this.suggestedActionTOken)\n            this.suggestedActionTOken.cancel();\n        this.suggestedActionTOken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.suggestedActionUE(this.suggestedActionTOken.token)])\n            .then(function (res) {\n                if (res[0]) {\n                    if (res[0][\"data\"]) {\n                        thisView.setState({ suggestedActionButton: res[0][\"data\"] });\n                    } else {\n                        thisView.setState({ suggestedActionButton: null });\n                    }\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred add subscriber element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n    }\n\n    suggestedActionUeSubmit = () => {\n        var thisView = this;\n        if (this.suggestedActionSubmitTOken)\n            this.suggestedActionSubmitTOken.cancel();\n        this.suggestedActionSubmitTOken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.suggestedActionUESubmit(this.suggestedActionSubmitTOken.token)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred add subscriber element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n    }\n\n\n    render() {\n\n        const { addSubsciberFormStatus, subscribersListStatus,\n            ns_id, ns_supi, ns_auth_method, ns_k, ns_operation_code_type, ns_operator_code_value,\n            addSubscriberError, subscribersList, callUnderProgress, deleteingUeid, operationType,\n            editSubscriberData, suggestedActionButton, chartData } = this.state;\n\n        const { match, location, history } = this.props;\n        const { deploy } = this.props\n        console.log('location', location)\n        return (\n            <div className=\"five-g-manage-container\">\n                <Grid container spacing={4}>\n                    <Grid item lg={8} md={8} xs={12} className=\"fgm-inner-grid\">\n                        <Grid container spacing={4}>\n                            <Grid item md={6} xs={12} className=\"fgm-inner-grid\">\n                                <Widget\n                                    title=\"\"\n                                    upperTitle\n                                    bodyclassName={''}\n                                    className=\"test\"\n                                    disableWidgetMenu={true}\n                                    fontBold={true}\n                                >\n                                    <div className=\"manage-network-title\">\n                                        Manage Core\n                                    </div>\n                                    <div className=\"core-data\">\n                                        <Grid container className=\"cd-main\" justifyContent='flex-start' spacing={1}>\n                                            <Grid item xs={12} sm={4} className=\"cd-each\">\n                                                <div className=\"c100 p33 center cd-main-bar-block\">\n                                                    <span>33%</span>\n                                                    <div className=\"slice\">\n                                                        <div className=\"bar\">\n                                                        </div>\n                                                        <div className=\"fill\">\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <span>Manage Usage</span>\n                                            </Grid>\n                                            <Grid item xs={12} sm={4} className=\"cd-each\">\n                                                <div className=\"c100 p33 center cd-main-bar-block\">\n                                                    <span>33%</span>\n                                                    <div className=\"slice\">\n                                                        <div className=\"bar\">\n                                                        </div>\n                                                        <div className=\"fill\">\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <span>CPU Usage</span>\n                                            </Grid>\n                                            <Grid item xs={12} sm={4} className=\"cd-each\">\n                                                <div className=\"c100 p33 center cd-main-bar-block\">\n                                                    <span>33%</span>\n                                                    <div className=\"slice\">\n                                                        <div className=\"bar\">\n                                                        </div>\n                                                        <div className=\"fill\">\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <span>Edge Computer Usage</span>\n                                            </Grid>\n                                        </Grid>\n                                        <div className=\"manage-options\">\n                                            <img src={ArrowBlue} alt=\"arrow\" />\n                                            {/* onClick={() => { this.toggleSubscriber(\"add\") }} */}\n                                            <span>Add Extra Network Slice</span>\n                                        </div>\n                                        <div className=\"manage-options\">\n                                            <img src={ArrowBlue} alt=\"arrow\" />\n                                            <NavLink to='/device' style={{ textDecoration: 'none', color: '#366672' }}>\n                                                <span>Onboard Devices</span>\n                                            </NavLink>\n                                        </div>\n                                        <div className=\"manage-options\" >\n                                            {/* onClick={this.toggleSubscribersList} */}\n                                            <img src={ArrowBlue} alt=\"arrow\" />\n                                            <span>Modify/Delete Devices</span>\n                                        </div>\n                                    </div>\n\n                                </Widget>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <Widget\n                                    title=\"\"\n                                    upperTitle\n                                    bodyclassName={''}\n                                    className={''}\n                                    disableWidgetMenu={true}\n                                    fontBold={true}\n                                >\n                                    <div className=\"manage-network-title\">\n                                        Manage Access Points\n                                    </div>\n\n                                    <div className=\"ran-stats\">\n                                        <div className=\"rans-each\">\n                                            <span>200</span>\n                                            <span>Access Points</span>\n                                        </div>\n                                        <div className=\"rans-each\">\n                                            <span>1500</span>\n                                            <span>Devices</span>\n                                        </div>\n\n                                    </div>\n                                    <NavLink to={this.props.match.path + \"/\"} className=\"manage-access-points-options\">\n                                        <img src={ArrowLightPink} alt=\"arrow\" />\n                                        <span>Onboard APs</span>\n                                    </NavLink>\n                                    <NavLink to={this.props.match.path + \"/\"} className=\"manage-access-points-options\">\n                                        <img src={ArrowLightPink} alt=\"arrow\" />\n                                        <span>Monitor/configure APs</span>\n                                    </NavLink>\n                                    <NavLink to={this.props.match.path + \"/\"} className=\"manage-access-points-options\">\n                                        <img src={ArrowLightPink} alt=\"arrow\" />\n                                        <span>Coverage/QoS map</span>\n                                    </NavLink>\n                                    <NavLink to={this.props.match.path + \"/\"} className=\"manage-access-points-options\">\n                                        <img src={ArrowLightPink} alt=\"arrow\" />\n                                        <span>Channel usage map</span>\n                                    </NavLink>\n\n                                </Widget>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <Widget\n                                    // title=\"Manage RAN\"\n                                    upperTitle\n                                    bodyclassName={''}\n                                    className={''}\n                                    disableWidgetMenu={true}\n                                    fontBold={true}\n                                >\n                                    <div className=\"manage-network-title\">\n                                        Manage Applications\n                                    </div>\n                                    <br />\n                                    {deploy.deployEndPoints && deploy.deployEndPoints.length > 0 && deploy.deployEndPoints[0] && deploy.deployEndPoints[0][\"name\"] &&\n\n                                        <div className=\"choose-an-option-below-title-box\">{deploy.deployEndPoints[0][\"name\"]} Application has been deployed succesfully. </div>\n\n                                    }\n                                    <br />\n\n                                    <div className=\"manage-options-sub-block\">\n                                        <div className=\"map-sub-block-title\">Suggested Actions</div>\n                                        <NavLink to={this.props.match.path + \"/deployment\"} className=\"manage-options app-depolyment-active\">\n                                            <img src={ArrowBlue} alt=\"arrow\" />\n                                            <span>Deploy an Application</span>\n                                        </NavLink>\n                                        <NavLink to={this.props.match.path + \"/\"} className=\"manage-options app-depolyment-restore\">\n                                            <img src={ArrowBlue} alt=\"arrow\" />\n                                            <span> Restart Robot Navigation Application</span>\n                                        </NavLink>\n                                        {deploy.deployEndPoints && deploy.deployEndPoints.length > 0 && deploy.deployEndPoints[0] && deploy.deployEndPoints[0][\"name\"] &&\n                                            <NavLink to={this.props.match.path + '/deployment'} className=\"manage-options app-depolyment-restore\">\n                                                <img src={ArrowBlue} alt=\"arrow\" />\n                                                <span>{deploy.deployEndPoints[0][\"name\"]}</span>\n                                            </NavLink>\n                                        }\n\n                                    </div>\n\n                                </Widget>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <Widget\n                                    // title=\"Suggested Actions\"\n                                    upperTitle\n                                    bodyclassName={''}\n                                    className={''}\n                                    disableWidgetMenu={true}\n                                    fontBold={true}\n                                >\n                                    <div className=\"manage-network-title\">\n                                        Traffic\n                                    </div>\n\n                                    <Grid container spacing={4}>\n                                        <Grid item lg={7} md={7} xs={12} className=\"fgm-inner-grid\">\n                                            <div className=\"traffic-chart-history\">\n                                                {\n                                                    chartData && chartData['chartHistory'].map((eachChartHistory, index) => {\n\n                                                        return (\n                                                            <div className=\"traffic-chart-history-box\" key={index}>\n                                                                <div className=\"traffic-chart-history-value\" style={{ color: eachChartHistory.color }}>{eachChartHistory.value}</div>\n                                                                <div className=\"traffic-chart-history-label\" style={{ color: eachChartHistory.color }}>{eachChartHistory.chartLabel}</div>\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                            </div>\n                                        </Grid>\n                                        <Grid item lg={5} md={5} xs={12} className=\"fgm-inner-grid traffic-chart-section\">\n                                            <div className=\"traffic-chart-block\">\n                                                <Doughnut data={chartData} />\n                                            </div>\n                                        </Grid>\n                                    </Grid>\n\n                                    <br />\n                                    <br />\n\n                                    <div className=\"manage-options-sub-block\">\n                                        <div className=\"map-sub-block-title\">Suggested Actions</div>\n                                        <div className=\"manage-access-points-options\">\n                                            <img src={ArrowLightPink} alt=\"arrow\" />\n                                            <span>Add a new Access point at warehouse C</span>\n                                        </div>\n                                        <div className=\"manage-access-points-options\">\n                                            <img src={ArrowLightPink} alt=\"arrow\" />\n                                            <span>Malfunction in AP17, please update to latest firmware</span>\n                                        </div>\n                                    </div>\n\n                                </Widget>\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n                    <Grid item lg={4} md={4} xs={12} className=\"fgm-inner-grid\">\n                        <Grid item xs={12} className=\"fgd-form\">\n                            <div className=\"manage-network-title\">\n                                Management Timeline\n                            </div>\n                            <Timeline align={\"left\"}>\n                                <Timeline.Item>\n                                    <img src={radialBlueIcon} alt=\"radialBlueIcon\" className=\"radialBlueIcon\" />\n                                    <p>21 Mar 2022 11:38 hrs</p>\n                                    <p>Request additional AMF node for slice 2.</p>\n                                </Timeline.Item>\n                                <Timeline.Item>\n                                    <img src={radialBlueIcon} alt=\"radialBlueIcon\" className=\"radialBlueIcon\" />\n                                    <p>20 Mar 2022 12:30 hrs</p>\n                                    <p>Added a RAN node gNB at CA location.</p>\n                                    <p>Nagamanoj K.</p>\n                                </Timeline.Item>\n                                <Timeline.Item>\n                                    <img src={radialBlueIcon} alt=\"radialBlueIcon\" className=\"radialBlueIcon\" />\n                                    <p>19 Mar 2022 09:30 hrs</p>\n                                    <p>Major system upgrade installed.</p>\n                                </Timeline.Item>\n                                <Timeline.Item>\n                                    <img src={radialBlueIcon} alt=\"radialBlueIcon\" className=\"radialBlueIcon\" />\n                                    <p>17 Mar 2022 20:30 hrs</p>\n                                    <p>New AMF added to slice 3.</p>\n                                    <p>Pradgnya K.</p>\n                                </Timeline.Item>\n                                <Timeline.Item>\n                                    <img src={radialBlueIcon} alt=\"radialBlueIcon\" className=\"radialBlueIcon\" />\n                                    <p>14 Mar 2022 22:33 hrs</p>\n                                    <p>Additional capacity for SMF approved.</p>\n                                    <p>Sandeep M.</p>\n                                </Timeline.Item>\n                                <Timeline.Item>\n                                    <img src={radialBlueIcon} alt=\"radialBlueIcon\" className=\"radialBlueIcon\" />\n                                    <p>13 Mar 2022 06:20 hrs</p>\n                                    <p>New software upgrades available.</p>\n                                </Timeline.Item>\n                            </Timeline>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n\n                <Dialog open={addSubsciberFormStatus} id=\"add-subscriber-form\">\n                    <DialogTitle>\n                        {operationType === 'add' ? \"New Subscriber\" : `Edit Subscriber - ${editSubscriberData ? editSubscriberData.ueId : ''}`}\n                        <Icons.Close fontSize={\"small\"} className=\"adf-close-icon\" onClick={this.toggleSubscriber} />\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid className=\"asf-container\" container spacing={2}>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <div className=\"asf-each\">\n                                    <span>ID</span>\n                                    <input type=\"text\" spellCheck=\"false\" name=\"ns_id\"\n                                        value={ns_id} onChange={this.handleChange} onKeyDown={this.handleChange} />\n                                </div>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <div className=\"asf-each\">\n                                    <span>SUPI</span>\n                                    <input type=\"text\" name=\"ns_supi\" spellCheck=\"false\"\n                                        value={ns_supi} onChange={this.handleChange} onKeyDown={this.handleChange} />\n                                </div>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <div className=\"asf-each\">\n                                    <span>Authentication Method</span>\n                                    <input type=\"text\" name=\"ns_auth_method\" spellCheck=\"false\"\n                                        value={ns_auth_method} onChange={this.handleChange} onKeyDown={this.handleChange} />\n                                </div>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <div className=\"asf-each\">\n                                    <span>k</span>\n                                    <input type=\"text\" name=\"ns_k\" spellCheck=\"false\"\n                                        value={ns_k} onChange={this.handleChange} onKeyDown={this.handleChange} />\n                                </div>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <div className=\"asf-each ns_operation_codes\">\n                                    <span>Operator Code Type</span>\n                                    <FormControl className={\"\"}>\n                                        <Select\n                                            value={ns_operation_code_type}\n                                            onChange={this.handleChangeOperationCode}\n                                            displayEmpty\n                                            className={\"\"}\n                                            inputProps={{ 'aria-label': 'Without label' }}\n                                        >\n                                            <MenuItem value=\"\">Select Operation Code Type</MenuItem>\n                                            <MenuItem value={\"op\"}>OP</MenuItem>\n                                            <MenuItem value={\"opc\"}>OPC</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </div>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <div className=\"asf-each\">\n                                    <span>Operator Code Value</span>\n                                    <input type=\"text\" name=\"ns_operator_code_value\" spellCheck=\"false\"\n                                        value={ns_operator_code_value} onChange={this.handleChange} onKeyDown={this.handleChange} />\n                                </div>\n                            </Grid>\n                            {\n                                addSubscriberError && addSubscriberError !== '' &&\n                                <Grid item xs={12} className=\"fgd-form\">\n                                    <div className=\"asf-each ns-error\">\n                                        <span>{addSubscriberError}</span>\n                                    </div>\n                                </Grid>\n                            }\n                        </Grid>\n                    </DialogContent>\n                    <DialogActions>\n                        {\n                            callUnderProgress ?\n                                <img src={loadingIcon} className=\"call_under_progress_icon\" /> :\n                                <Button onClick={this.addNewSubscriber} color=\"primary\">\n                                    {operationType === 'add' ? \"Submit\" : \"Update\"}\n                                </Button>\n                        }\n\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog open={subscribersListStatus} id=\"subscriber-list\">\n                    <DialogTitle>\n                        Subscribers\n                        {\n                            callUnderProgress && <img src={loadingIcon} className=\"call_under_progress_icon\" />\n                        }\n                        <Icons.Close fontSize={\"small\"} className=\"sl-close-icon\" onClick={this.toggleSubscribersList} />\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid className=\"sl-container\" container spacing={2}>\n                            <Grid item xs={12} className=\"fgd-form\">\n                                {\n                                    subscribersList && subscribersList.length > 0 &&\n                                    subscribersList.map((eachSub, index) => {\n                                        return (\n                                            <div key={index} className=\"slc-each\">\n                                                <span>{index + 1}</span>\n                                                <span>{eachSub.ueId}</span>\n                                                <div className=\"slce-action\">\n                                                    <span className=\"slca-option\" onClick={() => { this.deleteSubscriber(eachSub) }}>\n                                                        {\n                                                            (deleteingUeid !== '' && deleteingUeid === eachSub.ueId) ?\n                                                                <img src={loadingIcon} className=\"call_under_progress_icon\" />\n                                                                : 'Delete'\n                                                        }\n                                                    </span>\n                                                </div>\n                                                <div className=\"slce-action\">\n                                                    <span className=\"slca-option\" onClick={() => { this.enableModifySubscriber(eachSub) }}>\n                                                        Modify\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <DialogActions>\n                        {/* <Button onClick={this.toggleSubscribersList} color=\"primary\">\n                            Submit\n                        </Button> */}\n                    </DialogActions>\n                </Dialog>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    config: state.siteCoordinator.config,\n    toaster: state.siteCoordinator.toaster,\n    deploy: state.siteCoordinator.deploy\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MonitorNetwork));"],"sourceRoot":""}