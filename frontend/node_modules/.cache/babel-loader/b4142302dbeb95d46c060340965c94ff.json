{"ast":null,"code":"import _isArray from \"lodash/isArray\";\nexport default function findNodesOfTree(data, check) {\n  var nextNodes = [];\n  var findNodes = function findNodes(nodes) {\n    if (nodes === void 0) {\n      nodes = [];\n    }\n    for (var i = 0; i < nodes.length; i += 1) {\n      if (_isArray(nodes[i].children)) {\n        findNodes(nodes[i].children);\n      }\n      if (check(nodes[i])) {\n        nextNodes.push(nodes[i]);\n      }\n    }\n  };\n  findNodes(data);\n  return nextNodes;\n}","map":{"version":3,"names":["_isArray","findNodesOfTree","data","check","nextNodes","findNodes","nodes","i","length","children","push"],"sources":["/Users/azminds/Documents/five-g/frontend/node_modules/rsuite/es/utils/findNodesOfTree.js"],"sourcesContent":["import _isArray from \"lodash/isArray\";\nexport default function findNodesOfTree(data, check) {\n  var nextNodes = [];\n\n  var findNodes = function findNodes(nodes) {\n    if (nodes === void 0) {\n      nodes = [];\n    }\n\n    for (var i = 0; i < nodes.length; i += 1) {\n      if (_isArray(nodes[i].children)) {\n        findNodes(nodes[i].children);\n      }\n\n      if (check(nodes[i])) {\n        nextNodes.push(nodes[i]);\n      }\n    }\n  };\n\n  findNodes(data);\n  return nextNodes;\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,eAAe,SAASC,eAAe,CAACC,IAAI,EAAEC,KAAK,EAAE;EACnD,IAAIC,SAAS,GAAG,EAAE;EAElB,IAAIC,SAAS,GAAG,SAASA,SAAS,CAACC,KAAK,EAAE;IACxC,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;MACpBA,KAAK,GAAG,EAAE;IACZ;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACxC,IAAIP,QAAQ,CAACM,KAAK,CAACC,CAAC,CAAC,CAACE,QAAQ,CAAC,EAAE;QAC/BJ,SAAS,CAACC,KAAK,CAACC,CAAC,CAAC,CAACE,QAAQ,CAAC;MAC9B;MAEA,IAAIN,KAAK,CAACG,KAAK,CAACC,CAAC,CAAC,CAAC,EAAE;QACnBH,SAAS,CAACM,IAAI,CAACJ,KAAK,CAACC,CAAC,CAAC,CAAC;MAC1B;IACF;EACF,CAAC;EAEDF,SAAS,CAACH,IAAI,CAAC;EACf,OAAOE,SAAS;AAClB"},"metadata":{},"sourceType":"module"}