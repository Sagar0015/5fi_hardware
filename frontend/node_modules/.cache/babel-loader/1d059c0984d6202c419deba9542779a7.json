{"ast":null,"code":"(function (a, b) {\n  if ('function' == typeof define && define.amd) define(['exports', 'prop-types'], b);else if ('undefined' != typeof exports) b(exports, require('prop-types'));else {\n    var c = {\n      exports: {}\n    };\n    b(c.exports, a.propTypes), a.types = c.exports;\n  }\n})(this, function (a, b) {\n  'use strict';\n\n  Object.defineProperty(a, '__esModule', {\n    value: !0\n  }), a.TerminalDefaultProps = a.TerminalContextTypes = a.TerminalPropTypes = a.descriptionsPropType = a.commandsPropType = void 0;\n  var c = function (a) {\n      return a && a.__esModule ? a : {\n        default: a\n      };\n    }(b),\n    d = a.commandsPropType = c.default.objectOf(c.default.oneOfType([c.default.func, c.default.shape({\n      options: c.default.arrayOf(c.default.shape({\n        name: c.default.string,\n        description: c.default.string,\n        defaultValue: c.default.any\n      })),\n      method: c.default.func\n    })])),\n    e = a.descriptionsPropType = c.default.objectOf(c.default.oneOfType([c.default.string, c.default.bool])),\n    f = a.TerminalPropTypes = {\n      startState: c.default.oneOf(['minimised', 'maximised', 'open', 'closed']),\n      showActions: c.default.bool,\n      hideTopBar: c.default.bool,\n      allowTabs: c.default.bool,\n      msg: c.default.string,\n      color: c.default.string,\n      style: c.default.object,\n      prompt: c.default.string,\n      barColor: c.default.string,\n      backgroundColor: c.default.string,\n      commands: d,\n      descriptions: e,\n      watchConsoleLogging: c.default.bool,\n      commandPassThrough: c.default.oneOfType([c.default.func, c.default.bool]),\n      promptSymbol: c.default.string,\n      plugins: c.default.arrayOf(c.default.oneOfType([c.default.func, c.default.shape({\n        class: c.default.func,\n        config: c.default.object\n      })])),\n      shortcuts: c.default.objectOf(c.default.objectOf(c.default.string)),\n      actionHandlers: c.default.shape({\n        handleClose: c.default.func,\n        handleMinimise: c.default.func,\n        handleMaximise: c.default.func\n      })\n    },\n    g = a.TerminalContextTypes = {\n      barShowing: c.default.bool,\n      tabsShowing: c.default.bool,\n      activeTab: c.default.string,\n      instances: c.default.array,\n      symbol: c.default.string,\n      show: c.default.bool,\n      minimise: c.default.bool,\n      maximise: c.default.bool,\n      closeWindow: c.default.func,\n      openWindow: c.default.func,\n      minimiseWindow: c.default.func,\n      unminimiseWindow: c.default.func,\n      maximiseWindow: c.default.func,\n      unmaximiseWindow: c.default.func,\n      toggleShow: c.default.func,\n      toggleMaximise: c.default.func,\n      toggleMinimize: c.default.func\n    },\n    h = a.TerminalDefaultProps = {\n      startState: 'open',\n      hideTopBar: !1,\n      allowTabs: !0,\n      showActions: !0,\n      msg: '',\n      color: 'green',\n      style: {},\n      prompt: 'green',\n      barColor: 'black',\n      backgroundColor: 'black',\n      commands: {},\n      descriptions: {},\n      watchConsoleLogging: !0,\n      commandPassThrough: !1,\n      promptSymbol: '>',\n      plugins: [],\n      shortcuts: {}\n    };\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;IAEaA,yBAAmBC,UAAUC,QAAV,CAAmBD,UAAUE,SAAV,CAAoB,CACrEF,UAAUG,IAD2D,EAErEH,UAAUI,KAAV,CAAgB;MACdC,SAASL,UAAUM,OAAV,CAAkBN,UAAUI,KAAV,CAAgB;QACzCG,MAAMP,UAAUQ,MADyB;QAEzCC,aAAaT,UAAUQ,MAFkB;QAGzCE,cAAcV,UAAUW;MAHiB,CAAhB,CAAlB,CADK;MAMdC,QAAQZ,UAAUG;IANJ,CAAhB,CAFqE,CAApB,CAAnB,C;IAYnBU,6BAAuBb,UAAUC,QAAV,CAAmBD,UAAUE,SAAV,CAAoB,CACzEF,UAAUQ,MAD+D,EAEzER,UAAUc,IAF+D,CAApB,CAAnB,C;IAKvBC,0BAAoB;MAC/BC,YAAYhB,UAAUiB,KAAV,8CADmB;MAE/BC,aAAalB,UAAUc,IAFQ;MAG/BK,YAAYnB,UAAUc,IAHS;MAI/BM,WAAWpB,UAAUc,IAJU;MAK/BO,KAAKrB,UAAUQ,MALgB;MAM/Bc,OAAOtB,UAAUQ,MANc;MAO/Be,OAAOvB,UAAUwB,MAPc;MAQ/BC,QAAQzB,UAAUQ,MARa;MAS/BkB,UAAU1B,UAAUQ,MATW;MAU/BmB,iBAAiB3B,UAAUQ,MAVI;MAW/BoB,WAX+B;MAY/BC,eAZ+B;MAa/BC,qBAAqB9B,UAAUc,IAbA;MAc/BiB,oBAAoB/B,UAAUE,SAAV,CAAoB,CACtCF,UAAUG,IAD4B,EAEtCH,UAAUc,IAF4B,CAApB,CAdW;MAkB/BkB,cAAchC,UAAUQ,MAlBO;MAmB/ByB,SAASjC,UAAUM,OAAV,CAAkBN,UAAUE,SAAV,CAAoB,CAC7CF,UAAUG,IADmC,EAE7CH,UAAUI,KAAV,CAAgB;QACd8B,OAAOlC,UAAUG,IADH;QAEdgC,QAAQnC,UAAUwB;MAFJ,CAAhB,CAF6C,CAApB,CAAlB,CAnBsB;MA0B/BY,WAAWpC,UAAUC,QAAV,CAAmBD,UAAUC,QAAV,CAAmBD,UAAUQ,MAA7B,CAAnB,CA1BoB;MA2B/B6B,gBAAgBrC,UAAUI,KAAV,CAAgB;QAC9BkC,aAAatC,UAAUG,IADO;QAE9BoC,gBAAgBvC,UAAUG,IAFI;QAG9BqC,gBAAgBxC,UAAUG;MAHI,CAAhB;IA3Be,C;IAkCpBsC,6BAAuB;MAClCC,YAAY1C,UAAUc,IADY;MAElC6B,aAAa3C,UAAUc,IAFW;MAGlC8B,WAAW5C,UAAUQ,MAHa;MAIlCqC,WAAW7C,UAAU8C,KAJa;MAKlCC,QAAQ/C,UAAUQ,MALgB;MAMlCwC,MAAMhD,UAAUc,IANkB;MAOlCmC,UAAUjD,UAAUc,IAPc;MAQlCoC,UAAUlD,UAAUc,IARc;MASlCqC,aAAanD,UAAUG,IATW;MAUlCiD,YAAYpD,UAAUG,IAVY;MAWlCkD,gBAAgBrD,UAAUG,IAXQ;MAYlCmD,kBAAkBtD,UAAUG,IAZM;MAalCoD,gBAAgBvD,UAAUG,IAbQ;MAclCqD,kBAAkBxD,UAAUG,IAdM;MAelCsD,YAAYzD,UAAUG,IAfY;MAgBlCuD,gBAAgB1D,UAAUG,IAhBQ;MAiBlCwD,gBAAgB3D,UAAUG;IAjBQ,C;IAoBvByD,6BAAuB;MAClC5C,YAAY,MADsB;MAElCG,cAFkC;MAGlCC,aAHkC;MAIlCF,eAJkC;MAKlCG,KAAK,EAL6B;MAMlCC,OAAO,OAN2B;MAOlCC,SAPkC;MAQlCE,QAAQ,OAR0B;MASlCC,UAAU,OATwB;MAUlCC,iBAAiB,OAViB;MAWlCC,YAXkC;MAYlCC,gBAZkC;MAalCC,uBAbkC;MAclCC,sBAdkC;MAelCC,cAAc,GAfoB;MAgBlCC,WAhBkC;MAiBlCG;IAjBkC,C","names":["d","c","objectOf","oneOfType","func","shape","options","arrayOf","name","string","description","defaultValue","any","method","e","bool","f","startState","oneOf","showActions","hideTopBar","allowTabs","msg","color","style","object","prompt","barColor","backgroundColor","commands","descriptions","watchConsoleLogging","commandPassThrough","promptSymbol","plugins","class","config","shortcuts","actionHandlers","handleClose","handleMinimise","handleMaximise","g","barShowing","tabsShowing","activeTab","instances","array","symbol","show","minimise","maximise","closeWindow","openWindow","minimiseWindow","unminimiseWindow","maximiseWindow","unmaximiseWindow","toggleShow","toggleMaximise","toggleMinimize","h"],"sources":["../../../src/js/components/types.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const commandsPropType = PropTypes.objectOf(PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.shape({\n    options: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      description: PropTypes.string,\n      defaultValue: PropTypes.any,\n    })),\n    method: PropTypes.func,\n  }),\n]));\n\nexport const descriptionsPropType = PropTypes.objectOf(PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.bool,\n]));\n\nexport const TerminalPropTypes = {\n  startState: PropTypes.oneOf(['minimised', 'maximised', 'open', 'closed']),\n  showActions: PropTypes.bool,\n  hideTopBar: PropTypes.bool,\n  allowTabs: PropTypes.bool,\n  msg: PropTypes.string,\n  color: PropTypes.string,\n  style: PropTypes.object, // eslint-disable-line\n  prompt: PropTypes.string,\n  barColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  commands: commandsPropType,\n  descriptions: descriptionsPropType,\n  watchConsoleLogging: PropTypes.bool,\n  commandPassThrough: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool,\n  ]),\n  promptSymbol: PropTypes.string,\n  plugins: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({\n      class: PropTypes.func,\n      config: PropTypes.object,\n    }),\n  ])),\n  shortcuts: PropTypes.objectOf(PropTypes.objectOf(PropTypes.string)),\n  actionHandlers: PropTypes.shape({\n    handleClose: PropTypes.func,\n    handleMinimise: PropTypes.func,\n    handleMaximise: PropTypes.func,\n  }),\n};\n\nexport const TerminalContextTypes = {\n  barShowing: PropTypes.bool,\n  tabsShowing: PropTypes.bool,\n  activeTab: PropTypes.string,\n  instances: PropTypes.array,\n  symbol: PropTypes.string,\n  show: PropTypes.bool,\n  minimise: PropTypes.bool,\n  maximise: PropTypes.bool,\n  closeWindow: PropTypes.func,\n  openWindow: PropTypes.func,\n  minimiseWindow: PropTypes.func,\n  unminimiseWindow: PropTypes.func,\n  maximiseWindow: PropTypes.func,\n  unmaximiseWindow: PropTypes.func,\n  toggleShow: PropTypes.func,\n  toggleMaximise: PropTypes.func,\n  toggleMinimize: PropTypes.func,\n};\n\nexport const TerminalDefaultProps = {\n  startState: 'open',\n  hideTopBar: false,\n  allowTabs: true,\n  showActions: true,\n  msg: '',\n  color: 'green',\n  style: {},\n  prompt: 'green',\n  barColor: 'black',\n  backgroundColor: 'black',\n  commands: {},\n  descriptions: {},\n  watchConsoleLogging: true,\n  commandPassThrough: false,\n  promptSymbol: '>',\n  plugins: [],\n  shortcuts: {},\n};\n"]},"metadata":{},"sourceType":"script"}