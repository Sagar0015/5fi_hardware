{"ast":null,"code":"import { takeLatest, call, put, all, select } from 'redux-saga/effects';\nimport { API, Auth } from 'aws-amplify';\nimport * as authActions from './auth.actions';\nimport * as AuthType from './auth.types';\nimport { notify } from 'react-notify-toast';\nexport function* loadUserAsync() {\n  try {\n    yield Auth.currentSession();\n    const {\n      username,\n      attributes\n    } = yield Auth.currentAuthenticatedUser();\n    const uid = attributes.sub;\n    const userData = {\n      username,\n      uid,\n      name: attributes.name,\n      email: attributes.email,\n      mode: attributes['custom:mode'],\n      role: attributes['custom:role']\n    };\n    yield put(authActions.loadUserSuccess(userData));\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.loadUserFail(err));\n  }\n}\nexport function* onSigninAsync({\n  payload: {\n    formData: {\n      email,\n      password,\n      clientMetadata\n    },\n    router\n  }\n}) {\n  try {\n    const {\n      username,\n      attributes\n    } = yield Auth.signIn(email.trim().toLowerCase(), password, clientMetadata);\n    const uid = attributes.sub;\n    yield put(authActions.signinSuccess({\n      username,\n      uid,\n      name: attributes.name,\n      email: attributes.email,\n      mode: attributes['custom:mode'],\n      role: attributes['custom:role']\n    }));\n    const {\n      toaster\n    } = yield select(state => state.siteCoordinator);\n    notify.show(\"User Signed In Successfully\", \"custom\", toaster.duration, toaster.success);\n\n    if (router) {\n      var _router$location, _router$location2, _router$location3, _router$location3$sta;\n\n      if (((_router$location = router.location) === null || _router$location === void 0 ? void 0 : _router$location.state) && ((_router$location2 = router.location) === null || _router$location2 === void 0 ? void 0 : _router$location2.state.from) && ((_router$location3 = router.location) === null || _router$location3 === void 0 ? void 0 : (_router$location3$sta = _router$location3.state) === null || _router$location3$sta === void 0 ? void 0 : _router$location3$sta.from.pathname)) {\n        var _router$location4, _router$location4$sta;\n\n        router.push((_router$location4 = router.location) === null || _router$location4 === void 0 ? void 0 : (_router$location4$sta = _router$location4.state) === null || _router$location4$sta === void 0 ? void 0 : _router$location4$sta.from.pathname);\n      } else {\n        router.push('/monitor');\n      }\n    }\n  } catch (err) {\n    console.error(err);\n    const {\n      toaster\n    } = yield select(state => state.siteCoordinator);\n    notify.show(err.message, \"custom\", toaster.duration, toaster.error);\n\n    if (err.code === 'UserNotConfirmedException') {\n      yield put(authActions.signinFail(err.message));\n    } else if (err.code === 'UserNotFoundException') {\n      yield put(authActions.signinFail(err.message));\n    } else if (err.code === 'UserLambdaValidationException') {\n      yield put(authActions.signinFail({\n        domain: err.message\n      }));\n    } else {\n      yield put(authActions.signinFail(err.message));\n    }\n  }\n}\nexport function* onSignupAsync({\n  payload: {\n    formData,\n    callback\n  }\n}) {\n  try {\n    const response = yield Auth.signUp({ ...formData,\n      autoSignIn: {\n        enabled: true\n      }\n    });\n\n    if (callback) {\n      yield call(callback, response);\n    }\n\n    yield put(authActions.signupSuccess(response));\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.signupFail(err.message));\n  }\n}\nexport function* onVerifyAsync({\n  payload: {\n    code,\n    callback\n  }\n}) {\n  try {\n    let email = localStorage.getItem(\"registerEmail\");\n    const response = yield Auth.confirmSignUp(email, code);\n\n    if (callback) {\n      yield call(callback, response);\n    }\n\n    yield put(authActions.verificationSuccess(response));\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.verificationFail(err.message));\n  }\n}\nexport function* signOutAsync({\n  payload: {\n    history\n  }\n}) {\n  try {\n    yield Auth.signOut();\n    history.push('/deploy');\n    const {\n      toaster\n    } = yield select(state => state.siteCoordinator);\n    notify.show(\"User Signed Out Successfully\", \"custom\", toaster.duration, toaster.success);\n    yield put(authActions.signoutSuccess());\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.signoutFail(err));\n  }\n}\nexport function* watchLoadUser() {\n  yield takeLatest(AuthType.LOAD_USER_START, loadUserAsync);\n}\nexport function* watchSignin() {\n  yield takeLatest(AuthType.SIGN_IN_START, onSigninAsync);\n}\nexport function* watchSignup() {\n  yield takeLatest(AuthType.SIGN_UP_START, onSignupAsync);\n}\nexport function* watchVerify() {\n  yield takeLatest(AuthType.VERIFICATION_START, onVerifyAsync);\n}\nexport function* watchSignout() {\n  yield takeLatest(AuthType.SIGN_OUT_START, signOutAsync);\n}\nexport function* authSagas() {\n  yield all([call(watchSignin), call(watchSignup), call(watchSignout), call(watchLoadUser), call(watchVerify)]);\n}","map":{"version":3,"sources":["/Users/azminds/Documents/five-g/frontend/src/store/auth/auth.sagas.js"],"names":["takeLatest","call","put","all","select","API","Auth","authActions","AuthType","notify","loadUserAsync","currentSession","username","attributes","currentAuthenticatedUser","uid","sub","userData","name","email","mode","role","loadUserSuccess","err","console","error","loadUserFail","onSigninAsync","payload","formData","password","clientMetadata","router","signIn","trim","toLowerCase","signinSuccess","toaster","state","siteCoordinator","show","duration","success","location","from","pathname","push","message","code","signinFail","domain","onSignupAsync","callback","response","signUp","autoSignIn","enabled","signupSuccess","signupFail","onVerifyAsync","localStorage","getItem","confirmSignUp","verificationSuccess","verificationFail","signOutAsync","history","signOut","signoutSuccess","signoutFail","watchLoadUser","LOAD_USER_START","watchSignin","SIGN_IN_START","watchSignup","SIGN_UP_START","watchVerify","VERIFICATION_START","watchSignout","SIGN_OUT_START","authSagas"],"mappings":"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","sourcesContent":["import { takeLatest, call, put, all, select } from 'redux-saga/effects';\nimport { API, Auth } from 'aws-amplify';\n\nimport * as authActions from './auth.actions';\nimport * as AuthType from './auth.types';\nimport { notify } from 'react-notify-toast';\n\nexport function* loadUserAsync() {\n  try {\n    yield Auth.currentSession();\n    const { username, attributes } = yield Auth.currentAuthenticatedUser();\n    const uid = attributes.sub;\n    const userData = {\n      username,\n      uid,\n      name: attributes.name,\n      email: attributes.email,\n      mode: attributes['custom:mode'],\n      role: attributes['custom:role']\n    };\n    yield put(authActions.loadUserSuccess(userData));\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.loadUserFail(err));\n  }\n}\n\nexport function* onSigninAsync({\n  payload: {\n    formData: { email, password, clientMetadata },\n    router\n  }\n}) {\n  try {\n    const { username, attributes } = yield Auth.signIn(\n      email.trim().toLowerCase(),\n      password,\n      clientMetadata\n    );\n    const uid = attributes.sub;\n    yield put(\n      authActions.signinSuccess({\n        username,\n        uid,\n        name: attributes.name,\n        email: attributes.email,\n        mode: attributes['custom:mode'],\n        role: attributes['custom:role']\n      })\n    );\n    const { toaster } = yield select(state => state.siteCoordinator);\n    notify.show(\"User Signed In Successfully\", \"custom\", toaster.duration, toaster.success)\n    if (router) {\n      if (router.location?.state && router.location?.state.from && router.location?.state?.from.pathname) {\n        router.push(router.location?.state?.from.pathname)\n\n      } else {\n        router.push('/monitor')\n\n      }\n\n    }\n  } catch (err) {\n    console.error(err);\n    const { toaster } = yield select(state => state.siteCoordinator);\n    notify.show(err.message, \"custom\", toaster.duration, toaster.error)\n    if (err.code === 'UserNotConfirmedException') {\n      yield put(authActions.signinFail(err.message));\n    } else if (err.code === 'UserNotFoundException') {\n      yield put(authActions.signinFail(err.message));\n    } else if (err.code === 'UserLambdaValidationException') {\n      yield put(authActions.signinFail({ domain: err.message }));\n    } else {\n      yield put(authActions.signinFail(err.message));\n\n    }\n  }\n}\n\nexport function* onSignupAsync({ payload: { formData, callback } }) {\n  try {\n    const response = yield Auth.signUp({\n      ...formData,\n      autoSignIn: {\n        enabled: true\n      }\n\n    })\n\n\n    if (callback) {\n      yield call(callback, response)\n    }\n\n    yield put(authActions.signupSuccess(response));\n\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.signupFail(err.message));\n  }\n}\n\nexport function* onVerifyAsync({ payload: { code, callback } }) {\n  try {\n    let email = localStorage.getItem(\"registerEmail\")\n    const response = yield Auth.confirmSignUp(email, code)\n\n    if (callback) {\n      yield call(callback, response)\n    }\n\n    yield put(authActions.verificationSuccess(response));\n\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.verificationFail(err.message));\n  }\n}\n\nexport function* signOutAsync({ payload: { history } }) {\n  try {\n    yield Auth.signOut();\n    history.push('/deploy')\n    const { toaster } = yield select(state => state.siteCoordinator);\n    notify.show(\"User Signed Out Successfully\", \"custom\", toaster.duration, toaster.success)\n    yield put(authActions.signoutSuccess());\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.signoutFail(err));\n  }\n}\n\nexport function* watchLoadUser() {\n  yield takeLatest(AuthType.LOAD_USER_START, loadUserAsync);\n}\n\nexport function* watchSignin() {\n  yield takeLatest(AuthType.SIGN_IN_START, onSigninAsync);\n}\n\nexport function* watchSignup() {\n  yield takeLatest(AuthType.SIGN_UP_START, onSignupAsync);\n}\n\n\nexport function* watchVerify() {\n  yield takeLatest(AuthType.VERIFICATION_START, onVerifyAsync);\n}\n\n\nexport function* watchSignout() {\n  yield takeLatest(AuthType.SIGN_OUT_START, signOutAsync);\n}\n\nexport function* authSagas() {\n  yield all([\n    call(watchSignin),\n    call(watchSignup),\n    call(watchSignout),\n    call(watchLoadUser),\n    call(watchVerify)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}