{"ast":null,"code":"import { takeLatest, call, put, all, select } from 'redux-saga/effects';\nimport { API, Auth } from 'aws-amplify';\nimport * as authActions from './auth.actions';\nimport * as AuthType from './auth.types';\nimport { notify } from 'react-notify-toast';\nexport function* loadUserAsync() {\n  try {\n    yield Auth.currentSession();\n    const {\n      username,\n      attributes\n    } = yield Auth.currentAuthenticatedUser();\n    const uid = attributes.sub;\n    const userData = {\n      username,\n      uid,\n      name: attributes.name,\n      email: attributes.email,\n      mode: attributes['custom:mode'],\n      role: attributes['custom:role']\n    };\n    yield put(authActions.loadUserSuccess(userData));\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.loadUserFail(err));\n  }\n}\nexport function onSigninAsync(_ref) {\n  let {\n    payload: {\n      formData: {\n        email,\n        password,\n        clientMetadata\n      },\n      router\n    }\n  } = _ref;\n  return function* () {\n    try {\n      const {\n        username,\n        attributes\n      } = yield Auth.signIn(email.trim().toLowerCase(), password, clientMetadata);\n      const uid = attributes.sub;\n      yield put(authActions.signinSuccess({\n        username,\n        uid,\n        name: attributes.name,\n        email: attributes.email,\n        mode: attributes['custom:mode'],\n        role: attributes['custom:role']\n      }));\n      const {\n        toaster\n      } = yield select(state => state.siteCoordinator);\n      notify.show(\"User Signed In Successfully\", \"custom\", toaster.duration, toaster.success);\n      if (router) {\n        var _router$location, _router$location2, _router$location3, _router$location3$sta;\n        if ((_router$location = router.location) !== null && _router$location !== void 0 && _router$location.state && (_router$location2 = router.location) !== null && _router$location2 !== void 0 && _router$location2.state.from && (_router$location3 = router.location) !== null && _router$location3 !== void 0 && (_router$location3$sta = _router$location3.state) !== null && _router$location3$sta !== void 0 && _router$location3$sta.from.pathname) {\n          var _router$location4, _router$location4$sta;\n          router.push((_router$location4 = router.location) === null || _router$location4 === void 0 ? void 0 : (_router$location4$sta = _router$location4.state) === null || _router$location4$sta === void 0 ? void 0 : _router$location4$sta.from.pathname);\n        } else {\n          router.push('/monitor');\n        }\n      }\n    } catch (err) {\n      console.error(err);\n      const {\n        toaster\n      } = yield select(state => state.siteCoordinator);\n      notify.show(err.message, \"custom\", toaster.duration, toaster.error);\n      if (err.code === 'UserNotConfirmedException') {\n        yield put(authActions.signinFail(err.message));\n      } else if (err.code === 'UserNotFoundException') {\n        yield put(authActions.signinFail(err.message));\n      } else if (err.code === 'UserLambdaValidationException') {\n        yield put(authActions.signinFail({\n          domain: err.message\n        }));\n      } else {\n        yield put(authActions.signinFail(err.message));\n      }\n    }\n  }();\n}\nexport function onSignupAsync(_ref2) {\n  let {\n    payload: {\n      formData,\n      callback\n    }\n  } = _ref2;\n  return function* () {\n    try {\n      const response = yield Auth.signUp({\n        ...formData,\n        autoSignIn: {\n          enabled: true\n        }\n      });\n      if (callback) {\n        yield call(callback, response);\n      }\n      yield put(authActions.signupSuccess(response));\n    } catch (err) {\n      console.error(err);\n      yield put(authActions.signupFail(err.message));\n    }\n  }();\n}\nexport function onVerifyAsync(_ref3) {\n  let {\n    payload: {\n      code,\n      callback\n    }\n  } = _ref3;\n  return function* () {\n    try {\n      let email = localStorage.getItem(\"registerEmail\");\n      const response = yield Auth.confirmSignUp(email, code);\n      if (callback) {\n        yield call(callback, response);\n      }\n      yield put(authActions.verificationSuccess(response));\n    } catch (err) {\n      console.error(err);\n      yield put(authActions.verificationFail(err.message));\n    }\n  }();\n}\nexport function signOutAsync(_ref4) {\n  let {\n    payload: {\n      history\n    }\n  } = _ref4;\n  return function* () {\n    try {\n      yield Auth.signOut();\n      history.push('/deploy');\n      const {\n        toaster\n      } = yield select(state => state.siteCoordinator);\n      notify.show(\"User Signed Out Successfully\", \"custom\", toaster.duration, toaster.success);\n      yield put(authActions.signoutSuccess());\n    } catch (err) {\n      console.error(err);\n      yield put(authActions.signoutFail(err));\n    }\n  }();\n}\nexport function* watchLoadUser() {\n  yield takeLatest(AuthType.LOAD_USER_START, loadUserAsync);\n}\nexport function* watchSignin() {\n  yield takeLatest(AuthType.SIGN_IN_START, onSigninAsync);\n}\nexport function* watchSignup() {\n  yield takeLatest(AuthType.SIGN_UP_START, onSignupAsync);\n}\nexport function* watchVerify() {\n  yield takeLatest(AuthType.VERIFICATION_START, onVerifyAsync);\n}\nexport function* watchSignout() {\n  yield takeLatest(AuthType.SIGN_OUT_START, signOutAsync);\n}\nexport function* authSagas() {\n  yield all([call(watchSignin), call(watchSignup), call(watchSignout), call(watchLoadUser), call(watchVerify)]);\n}","map":{"version":3,"names":["takeLatest","call","put","all","select","API","Auth","authActions","AuthType","notify","loadUserAsync","currentSession","username","attributes","currentAuthenticatedUser","uid","sub","userData","name","email","mode","role","loadUserSuccess","err","console","error","loadUserFail","onSigninAsync","payload","formData","password","clientMetadata","router","signIn","trim","toLowerCase","signinSuccess","toaster","state","siteCoordinator","show","duration","success","location","from","pathname","push","message","code","signinFail","domain","onSignupAsync","callback","response","signUp","autoSignIn","enabled","signupSuccess","signupFail","onVerifyAsync","localStorage","getItem","confirmSignUp","verificationSuccess","verificationFail","signOutAsync","history","signOut","signoutSuccess","signoutFail","watchLoadUser","LOAD_USER_START","watchSignin","SIGN_IN_START","watchSignup","SIGN_UP_START","watchVerify","VERIFICATION_START","watchSignout","SIGN_OUT_START","authSagas"],"sources":["/Users/azminds/Documents/five-g/frontend/src/store/auth/auth.sagas.js"],"sourcesContent":["import { takeLatest, call, put, all, select } from 'redux-saga/effects';\nimport { API, Auth } from 'aws-amplify';\n\nimport * as authActions from './auth.actions';\nimport * as AuthType from './auth.types';\nimport { notify } from 'react-notify-toast';\n\nexport function* loadUserAsync() {\n  try {\n    yield Auth.currentSession();\n    const { username, attributes } = yield Auth.currentAuthenticatedUser();\n    const uid = attributes.sub;\n    const userData = {\n      username,\n      uid,\n      name: attributes.name,\n      email: attributes.email,\n      mode: attributes['custom:mode'],\n      role: attributes['custom:role']\n    };\n    yield put(authActions.loadUserSuccess(userData));\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.loadUserFail(err));\n  }\n}\n\nexport function* onSigninAsync({\n  payload: {\n    formData: { email, password, clientMetadata },\n    router\n  }\n}) {\n  try {\n    const { username, attributes } = yield Auth.signIn(\n      email.trim().toLowerCase(),\n      password,\n      clientMetadata\n    );\n    const uid = attributes.sub;\n    yield put(\n      authActions.signinSuccess({\n        username,\n        uid,\n        name: attributes.name,\n        email: attributes.email,\n        mode: attributes['custom:mode'],\n        role: attributes['custom:role']\n      })\n    );\n    const { toaster } = yield select(state => state.siteCoordinator);\n    notify.show(\"User Signed In Successfully\", \"custom\", toaster.duration, toaster.success)\n    if (router) {\n      if (router.location?.state && router.location?.state.from && router.location?.state?.from.pathname) {\n        router.push(router.location?.state?.from.pathname)\n\n      } else {\n        router.push('/monitor')\n\n      }\n\n    }\n  } catch (err) {\n    console.error(err);\n    const { toaster } = yield select(state => state.siteCoordinator);\n    notify.show(err.message, \"custom\", toaster.duration, toaster.error)\n    if (err.code === 'UserNotConfirmedException') {\n      yield put(authActions.signinFail(err.message));\n    } else if (err.code === 'UserNotFoundException') {\n      yield put(authActions.signinFail(err.message));\n    } else if (err.code === 'UserLambdaValidationException') {\n      yield put(authActions.signinFail({ domain: err.message }));\n    } else {\n      yield put(authActions.signinFail(err.message));\n\n    }\n  }\n}\n\nexport function* onSignupAsync({ payload: { formData, callback } }) {\n  try {\n    const response = yield Auth.signUp({\n      ...formData,\n      autoSignIn: {\n        enabled: true\n      }\n\n    })\n\n\n    if (callback) {\n      yield call(callback, response)\n    }\n\n    yield put(authActions.signupSuccess(response));\n\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.signupFail(err.message));\n  }\n}\n\nexport function* onVerifyAsync({ payload: { code, callback } }) {\n  try {\n    let email = localStorage.getItem(\"registerEmail\")\n    const response = yield Auth.confirmSignUp(email, code)\n\n    if (callback) {\n      yield call(callback, response)\n    }\n\n    yield put(authActions.verificationSuccess(response));\n\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.verificationFail(err.message));\n  }\n}\n\nexport function* signOutAsync({ payload: { history } }) {\n  try {\n    yield Auth.signOut();\n    history.push('/deploy')\n    const { toaster } = yield select(state => state.siteCoordinator);\n    notify.show(\"User Signed Out Successfully\", \"custom\", toaster.duration, toaster.success)\n    yield put(authActions.signoutSuccess());\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.signoutFail(err));\n  }\n}\n\nexport function* watchLoadUser() {\n  yield takeLatest(AuthType.LOAD_USER_START, loadUserAsync);\n}\n\nexport function* watchSignin() {\n  yield takeLatest(AuthType.SIGN_IN_START, onSigninAsync);\n}\n\nexport function* watchSignup() {\n  yield takeLatest(AuthType.SIGN_UP_START, onSignupAsync);\n}\n\n\nexport function* watchVerify() {\n  yield takeLatest(AuthType.VERIFICATION_START, onVerifyAsync);\n}\n\n\nexport function* watchSignout() {\n  yield takeLatest(AuthType.SIGN_OUT_START, signOutAsync);\n}\n\nexport function* authSagas() {\n  yield all([\n    call(watchSignin),\n    call(watchSignup),\n    call(watchSignout),\n    call(watchLoadUser),\n    call(watchVerify)\n  ]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}