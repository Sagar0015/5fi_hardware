{"ast":null,"code":"var _jsxFileName = \"/Users/azminds/Documents/five-g/frontend/src/pages/loginForm/loginForm.js\",\n    _s = $RefreshSig$();\n\nimport { Box, InputAdornment, TextField, Typography } from '@material-ui/core';\nimport React from 'react';\nimport CustomButton from '../../components/common/Button/button';\nimport { Person as AccountIcon, VpnKey as Key } from '@material-ui/icons';\nimport './loginForm.scss';\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport apiServices from '../../services/apiService';\nimport { notify } from 'react-notify-toast';\nimport { connect, useDispatch } from 'react-redux';\nimport { Auth } from 'aws-amplify';\nimport * as authActions from '../../store/auth/auth.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  _s();\n\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [isLoading, setIsLoading] = React.useState(false);\n  const dispatch = useDispatch();\n\n  async function demoLoginUser(router, setIsLoading) {\n    setIsLoading(true);\n    dispatch(authActions.signinStart({\n      email,\n      password\n    }, props.history));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: 'form',\n    onSubmit: () => demoLoginUser(email, password, props.history, setIsLoading),\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"login-avatar\",\n      children: /*#__PURE__*/_jsxDEV(AccountIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text\",\n        className: \"form_title\",\n        children: \"User Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"filled-basic\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(AccountIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this),\n          disableUnderline: true,\n          placeholder: 'User ID',\n          className: 'form_textfield'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"filled-basic\",\n        className: \"form_textfield\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(Key, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this),\n          disableUnderline: true,\n          placeholder: 'Password'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        fullWidth: true,\n        type: 'submit',\n        onClick: () => {\n          demoLoginUser(props.history, setIsLoading);\n        },\n        disabled: isLoading,\n        buttonText: isLoading ? 'loading' : 'LOGIN'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"text\",\n      className: \"forgot_password\",\n      children: [\"Forgot \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 16\n      }, this), \"?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"e2vRspduA/V3stKWzjMChUOD23Y=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginForm;\n\nconst mapStateToProps = state => ({\n  config: state.siteCoordinator.config,\n  toaster: state.siteCoordinator.toaster,\n  deploy: state.siteCoordinator.deploy\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LoginForm));\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/azminds/Documents/five-g/frontend/src/pages/loginForm/loginForm.js"],"names":["Box","InputAdornment","TextField","Typography","React","CustomButton","Person","AccountIcon","VpnKey","Key","withRouter","axios","apiServices","notify","connect","useDispatch","Auth","authActions","LoginForm","props","email","setEmail","useState","password","setPassword","isLoading","setIsLoading","dispatch","demoLoginUser","router","signinStart","history","e","target","value","endAdornment","disableUnderline","placeholder","className","mapStateToProps","state","config","siteCoordinator","toaster","deploy","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { Box, InputAdornment, TextField, Typography } from '@material-ui/core'\nimport React from 'react'\nimport CustomButton from '../../components/common/Button/button'\nimport { Person as AccountIcon, VpnKey as Key } from '@material-ui/icons'\nimport './loginForm.scss'\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios'\nimport apiServices from '../../services/apiService'\nimport { notify } from 'react-notify-toast';\nimport { connect, useDispatch } from 'react-redux'\nimport { Auth } from 'aws-amplify'\nimport * as authActions from '../../store/auth/auth.actions'\n\n\n\nconst LoginForm = (props) => {\n\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [isLoading, setIsLoading] = React.useState(false);\n  const dispatch = useDispatch()\n\n  async function demoLoginUser(router, setIsLoading) {\n    setIsLoading(true);\n\n    dispatch(authActions.signinStart({ email, password }, props.history))\n\n\n\n  }\n\n  return (\n    <Box component={'form'} onSubmit={() => demoLoginUser(\n      email,\n      password,\n      props.history,\n      setIsLoading,\n    )\n    } className='login-container'>\n      <Box className='login-avatar'>\n        <AccountIcon />\n      </Box>\n      <div className='form'>\n        <Typography\n          color='text'\n          className='form_title'\n        >\n          User Log in\n        </Typography>\n        <TextField\n          fullWidth\n          id='filled-basic'\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position='start'>\n                <AccountIcon />\n              </InputAdornment>\n            ),\n            disableUnderline: true,\n            placeholder: 'User ID',\n            className: 'form_textfield'\n          }}\n        />\n        <TextField\n          fullWidth\n          id='filled-basic'\n          className='form_textfield'\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type='password'\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position='start'>\n                <Key />\n              </InputAdornment>\n            ),\n            disableUnderline: true,\n            placeholder: 'Password'\n          }}\n        />\n        <CustomButton fullWidth type={'submit'} onClick={() => {\n          demoLoginUser(\n\n            props.history,\n            setIsLoading,\n          )\n        }} disabled={isLoading} buttonText={isLoading ? 'loading' : 'LOGIN'} />\n      </div>\n      <Typography\n        color='text'\n        className='forgot_password'\n      >\n        Forgot <span>Password</span>?\n      </Typography>\n    </Box>\n  )\n}\n\nconst mapStateToProps = state => ({\n  config: state.siteCoordinator.config,\n  toaster: state.siteCoordinator.toaster,\n  deploy: state.siteCoordinator.deploy\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LoginForm));"]},"metadata":{},"sourceType":"module"}