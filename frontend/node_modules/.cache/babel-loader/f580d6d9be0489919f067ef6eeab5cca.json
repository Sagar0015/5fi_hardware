{"ast":null,"code":"(function (a, b) {\n  if ('function' == typeof define && define.amd) define(['exports'], b);else if ('undefined' != typeof exports) b(exports);else {\n    var c = {\n      exports: {}\n    };\n    b(c.exports), a.help = c.exports;\n  }\n})(this, function (a) {\n  'use strict';\n\n  Object.defineProperty(a, '__esModule', {\n    value: !0\n  }), a.default = function () {\n    var a = this.config.name,\n      b = function (a) {\n        return a.charAt(0).toUpperCase() + a.substr(1);\n      },\n      c = [],\n      d = {\n        options: !0,\n        examples: !0\n      };\n    for (var o in d) 0 < this.details[o].length || (d[o] = !1);\n    var e = d.options ? '[options] ' : '',\n      f = 'string' == typeof this.config.value ? ' ' + this.config.value : '';\n    for (var p in c.push(['', 'Usage: ' + this.printMainColor(a) + ' ' + this.printSubColor(e + f), '']), d) d[p] && (c.push(['', b(p) + ':', '', '']), 'examples' == p ? c.push(this.generateExamples()) : c.push(this.generateDetails(p)), c.push(['', '']));\n    var g = '',\n      h = !0,\n      i = !1,\n      j = void 0;\n    try {\n      for (var k, l, m = c[Symbol.iterator](); !(h = (k = m.next()).done); h = !0) l = k.value, g += l.join('\\n  ');\n    } catch (a) {\n      i = !0, j = a;\n    } finally {\n      try {\n        !h && m.return && m.return();\n      } finally {\n        if (i) throw j;\n      }\n    }\n    d.options || (g = 'No options available');\n    var n = this.config.usageFilter;\n    'function' == typeof n && (g = n(g) || g), console.log(g);\n  };\n});","map":{"version":3,"mappings":";;;;;;;;;;;;kBAAe,YAAY;IACzB,IAAMA,IAAO,KAAKC,MAAL,CAAYC,IAAzB;MACMC,IAAW;QAAA,OAAQH,EAAKI,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BL,EAAKM,MAAL,CAAY,CAAZ,CAAvC;MAAA,CADjB;MAGMC,MAHN;MAKMC,IAAS;QACbC,WADa;QAEbC;MAFa,CALf;IAUA,KAAK,IAAMC,CAAX,OACmC,CAA7B,QAAKC,OAAL,IAAoBC,MAD1B,KAKEL,SALF;IAQA,IAAMM,IAAeN,EAAOC,OAAP,GAAiB,YAAjB,GAAgC,EAArD;MACMM,IAAqC,QAA7B,WAAO,KAAKd,MAAL,CAAYe,KAAnB,SACN,KAAKf,MAAL,CAAYe,KADN,GAEV,EAHJ;IAWA,KAAK,IAAMC,CAAX,IANAV,EAAMW,IAAN,CAAW,CACT,EADS,cAEC,KAAKC,cAAL,GAFD,SAE8B,KAAKC,aAAL,CAAmBN,KAAnB,CAF9B,EAGT,EAHS,CAAX,CAMA,KACON,IADP,KAKED,EAAMW,IAAN,CAAW,CAAC,EAAD,EAAQf,IAAR,QAA4B,EAA5B,EAAgC,EAAhC,CAAX,CALF,EAOgB,UAAV,KAPN,GAQII,EAAMW,IAAN,CAAW,KAAKG,gBAAL,EAAX,CARJ,GAUId,EAAMW,IAAN,CAAW,KAAKI,eAAL,GAAX,CAVJ,EAaEf,EAAMW,IAAN,UAbF;IAgBA,IAAIK,IAAS,EAAb;MAAAC;MAAAC;MAAAC;IA9CyB;MAiDzB,0FACEH,KAAUI,EAAKC,IAAL,CAAU,MAAV,CAlDa;IAAA;MAAAH;IAAA;MAAA;QAAA;MAAA;QAAA;MAAA;IAAA;IAqDpBjB,EAAOC,OArDa,KAsDvBc,IAAS,sBAtDc;IAyDzB,IAAMM,IAAc,KAAK5B,MAAL,CAAY6B,WAAhC;IAG2B,UAAvB,YA5DqB,KA6DvBP,IAASM,SA7Dc,GAgEzBE,QAAQC,GAAR,GACD;EAAA,C","names":["a","config","name","b","charAt","toUpperCase","substr","c","d","options","examples","o","details","length","e","f","value","p","push","printMainColor","printSubColor","generateExamples","generateDetails","g","h","i","j","l","join","n","usageFilter","console","log"],"sources":["../../../src/js/args/help.js"],"sourcesContent":["export default function () {\n  const name = this.config.name;\n  const firstBig = word => word.charAt(0).toUpperCase() + word.substr(1);\n\n  const parts = [];\n\n  const groups = {\n    options: true,\n    examples: true,\n  };\n\n  for (const group in groups) {\n    if (this.details[group].length > 0) {\n      continue; // eslint-disable-line\n    }\n\n    groups[group] = false;\n  }\n\n  const optionHandle = groups.options ? '[options] ' : '';\n  const value = typeof this.config.value === 'string'\n    ? ` ${this.config.value}`\n    : '';\n\n  parts.push([\n    '',\n    `Usage: ${this.printMainColor(name)} ${this.printSubColor(optionHandle + value)}`,\n    '',\n  ]);\n\n  for (const group in groups) {\n    if (!groups[group]) {\n      continue; // eslint-disable-line\n    }\n\n    parts.push(['', `${firstBig(group)}:`, '', '']);\n\n    if (group === 'examples') {\n      parts.push(this.generateExamples());\n    } else {\n      parts.push(this.generateDetails(group));\n    }\n\n    parts.push(['', '']);\n  }\n\n  let output = '';\n\n  // And finally, merge and output them\n  for (const part of parts) {\n    output += part.join('\\n  ');\n  }\n\n  if (!groups.options) {\n    output = 'No options available';\n  }\n\n  const usageFilter = this.config.usageFilter;\n\n  // If filter is available, pass usage information through\n  if (typeof usageFilter === 'function') {\n    output = usageFilter(output) || output;\n  }\n\n  console.log(output); // eslint-disable-line\n}\n"]},"metadata":{},"sourceType":"script"}