{"ast":null,"code":"/*!\n * lang-map <https://github.com/jonschlinkert/lang-map>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\n// Lazy-load and cache extensions and languages\nfunction map() {\n  var cache = {};\n  if (!cache.extensions) cache.extensions = require('./lib/exts.json');\n  if (!cache.languages) cache.languages = require('./lib/lang.json');\n  return cache;\n}\n\n/**\n * Get the list of extensions mapped to the given `language`\n *\n * @param  {String} `language`\n * @return {Array}\n */\n\nmap.extensions = function extensions(lang) {\n  lang = normalize(lang);\n  var langs = map().languages;\n  var exts = map().extensions;\n  return exts[lang] || exts[langs[lang]] || [lang];\n};\n\n/**\n * Get the languages mapped to the given `ext`\n *\n * @param  {String} `ext`\n * @return {String}\n */\n\nmap.languages = function languages(ext) {\n  ext = normalize(ext);\n  var langs = map().languages;\n  var exts = map().extensions;\n  return langs[ext] || langs[exts[ext]] || [ext];\n};\n\n/**\n * Normalize the given language or extension\n */\n\nfunction normalize(str) {\n  if (str.charAt(0) === '.') {\n    str = str.slice(1);\n  }\n  return str.toLowerCase();\n}\n\n/**\n * Expose `langMap`\n */\n\nmodule.exports = map;","map":{"version":3,"names":["map","cache","extensions","require","languages","lang","normalize","langs","exts","ext","str","charAt","slice","toLowerCase","module","exports"],"sources":["/Users/azminds/Documents/five-g/frontend/node_modules/lang-map/index.js"],"sourcesContent":["/*!\n * lang-map <https://github.com/jonschlinkert/lang-map>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\n// Lazy-load and cache extensions and languages\nfunction map() {\n  var cache = {};\n  if (!cache.extensions) cache.extensions = require('./lib/exts.json');\n  if (!cache.languages) cache.languages = require('./lib/lang.json');\n  return cache;\n}\n\n/**\n * Get the list of extensions mapped to the given `language`\n *\n * @param  {String} `language`\n * @return {Array}\n */\n\nmap.extensions = function extensions(lang) {\n  lang = normalize(lang);\n  var langs = map().languages;\n  var exts = map().extensions;\n  return exts[lang] || exts[langs[lang]] || [lang];\n};\n\n/**\n * Get the languages mapped to the given `ext`\n *\n * @param  {String} `ext`\n * @return {String}\n */\n\nmap.languages = function languages(ext) {\n  ext = normalize(ext);\n  var langs = map().languages;\n  var exts = map().extensions;\n  return langs[ext] || langs[exts[ext]] || [ext];\n};\n\n/**\n * Normalize the given language or extension\n */\n\nfunction normalize(str) {\n  if (str.charAt(0) === '.') {\n    str = str.slice(1);\n  }\n  return str.toLowerCase();\n}\n\n/**\n * Expose `langMap`\n */\n\nmodule.exports = map;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA,SAASA,GAAG,GAAG;EACb,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,IAAI,CAACA,KAAK,CAACC,UAAU,EAAED,KAAK,CAACC,UAAU,GAAGC,OAAO,CAAC,iBAAiB,CAAC;EACpE,IAAI,CAACF,KAAK,CAACG,SAAS,EAAEH,KAAK,CAACG,SAAS,GAAGD,OAAO,CAAC,iBAAiB,CAAC;EAClE,OAAOF,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAD,GAAG,CAACE,UAAU,GAAG,SAASA,UAAU,CAACG,IAAI,EAAE;EACzCA,IAAI,GAAGC,SAAS,CAACD,IAAI,CAAC;EACtB,IAAIE,KAAK,GAAGP,GAAG,EAAE,CAACI,SAAS;EAC3B,IAAII,IAAI,GAAGR,GAAG,EAAE,CAACE,UAAU;EAC3B,OAAOM,IAAI,CAACH,IAAI,CAAC,IAAIG,IAAI,CAACD,KAAK,CAACF,IAAI,CAAC,CAAC,IAAI,CAACA,IAAI,CAAC;AAClD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAL,GAAG,CAACI,SAAS,GAAG,SAASA,SAAS,CAACK,GAAG,EAAE;EACtCA,GAAG,GAAGH,SAAS,CAACG,GAAG,CAAC;EACpB,IAAIF,KAAK,GAAGP,GAAG,EAAE,CAACI,SAAS;EAC3B,IAAII,IAAI,GAAGR,GAAG,EAAE,CAACE,UAAU;EAC3B,OAAOK,KAAK,CAACE,GAAG,CAAC,IAAIF,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAI,CAACA,GAAG,CAAC;AAChD,CAAC;;AAED;AACA;AACA;;AAEA,SAASH,SAAS,CAACI,GAAG,EAAE;EACtB,IAAIA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACzBD,GAAG,GAAGA,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC;EACpB;EACA,OAAOF,GAAG,CAACG,WAAW,EAAE;AAC1B;;AAEA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGf,GAAG"},"metadata":{},"sourceType":"script"}