{"ast":null,"code":"var _jsxFileName = \"/Users/azminds/Documents/five-g/frontend/src/pages/inspectManage/inspectManageNetwork.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport Widget from \"../../components/Widget\";\nimport \"./inspectManageNetwork.scss\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport loading_icon from '../../images/home/loading.gif';\nimport { Grid } from \"@material-ui/core\";\nimport Box from '@mui/material/Box';\nimport moment from 'moment';\nimport Terminal from \"terminal-in-react\";\nimport pseudoFileSystem from \"terminal-in-react-pseudo-file-system-plugin\";\nimport NodeEvalPlugin from 'terminal-in-react-node-eval-plugin'; // import uuid from \"uuid/v4\";\n\nimport { v4 as uuidv4 } from 'uuid';\nimport dots_icon from \"../../images/new_flow_images/dots.svg\";\nimport apiService from '../../services/apiService.js';\nimport { getAccordionDetailsUtilityClass } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileSystemPlugin = pseudoFileSystem();\nconst logsData = [// { id: uuidv4(), content: \"AMF\" },\n  // { id: uuidv4(), content: \"SMF\" },\n  // { id: uuidv4(), content: \"UPF1\" },\n  // { id: uuidv4(), content: \"UPF2\" },\n  // { id: uuidv4(), content: \"Device1\" },\n  // { id: uuidv4(), content: \"Device2\" },\n  // { id: uuidv4(), content: \"Device3\" },\n  // { id: uuidv4(), content: \"Device4\" },\n  // { id: uuidv4(), content: \"Device5\" },\n  // { id: uuidv4(), content: \"Device6\" }\n];\nconst columnsFromBackend = {\n  [\"id1\"]: {\n    name: \"Logs / Terminals / Packets\",\n    items: logsData\n  },\n  [\"id2\"]: {\n    name: \"tab section 1\",\n    items: []\n  },\n  [\"id3\"]: {\n    name: \"tab section 2\",\n    items: []\n  },\n  [\"id4\"]: {\n    name: \"tab section 3\",\n    items: []\n  },\n  [\"id5\"]: {\n    name: \"tab section 4\",\n    items: []\n  }\n};\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props; // console.log(\"children :\", children, \"value :\", value, \"index :\", index);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n} //create your forceUpdate hook\n\n\nfunction useForceUpdate() {\n  _s();\n\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => value + 1); // update state to force render\n  // An function that increment 👆🏻 the previous state like here \n  // is better than directly setting `value + 1`\n}\n\n_s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\nfunction DragAndDrapComponent() {\n  _s2();\n\n  const [columns, setColumns] = useState(columnsFromBackend);\n  const [callUnderProgress, setCallUnderProgress] = useState(false);\n  const [logsToken, setLogsToken] = useState(null);\n  const [inspectElementToken, setEnspectElementToken] = useState(null);\n  const [inspectList, setInspectList] = useState([]);\n  const [firstTabSectionValue, setFirstTabSectionChange] = useState(0); //{\"tab0\":0, \"tab1\": 0, \"tab2\": 0, \"tab3\": 0});\n\n  const [logsData, setLogsData] = useState({});\n  const [loadingList, setLoadingList] = useState({});\n  useEffect(() => {\n    getInspectList();\n  }, []);\n\n  const handleFirstSectionChange = (index, newValue) => {\n    // console.log(\"newValue :\", index, newValue);\n    // let tabValues = firstTabSectionValue;\n    // tabValues[\"tab\"+index] = newValue;\n    setFirstTabSectionChange(newValue);\n  };\n\n  const getInspectList = () => {\n    if (inspectElementToken) inspectElementToken.cancel();\n    let tokenData = axios.CancelToken.source();\n    setEnspectElementToken(tokenData);\n    setCallUnderProgress(true);\n    axios.all([apiService.getInspectList(tokenData.token)]).then(function (res) {\n      if (res[0]) {\n        let inspectList = res[0][\"data\"] && res[0][\"data\"] ? res[0][\"data\"] : [];\n        setInspectList(inspectList);\n        let columsData = columnsFromBackend;\n        columsData[\"id1\"][\"items\"] = inspectList;\n        setColumns(columsData);\n        setCallUnderProgress(false);\n      }\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred monitor service');\n      setCallUnderProgress(false);\n    });\n  };\n\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination\n    } = result;\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({ ...columns,\n        [source.droppableId]: { ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: { ...destColumn,\n          items: destItems\n        }\n      });\n      console.log(result);\n      getData(result.draggableId, destination.droppableId);\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({ ...columns,\n        [source.droppableId]: { ...column,\n          items: copiedItems\n        }\n      });\n    }\n  };\n\n  const updateLoading = (item, status) => {\n    console.log(item, status);\n    let loadingListNew = loadingList;\n    loadingListNew[item] = status;\n    setLoadingList(loadingListNew);\n  };\n\n  const getData = (item, type) => {\n    // if (logsToken)\n    //     logsToken.cancel();\n    // let logsTokenData = axios.CancelToken.source();\n    // setLogsToken(logsTokenData);\n    let dataType = \"logs\";\n\n    if (type === \"id3\") {\n      dataType = \"packets\";\n    } else if (type === \"id4\") {\n      dataType = \"terminals\";\n      return;\n    } else if (type === \"id5\") {\n      dataType = \"terminals\";\n      return;\n    }\n\n    setLoadingList({ ...loadingList,\n      [item]: true\n    });\n    setCallUnderProgress(true);\n    updateLoading(item, true);\n    axios.all([apiService.getLogsData(item, dataType)]).then(function (res) {\n      if (res[0]) {\n        let itemLogsData = res[0][\"data\"] && res[0][\"data\"] ? res[0][\"data\"] : [];\n        let logsDataNew = logsData;\n        logsDataNew[item] = itemLogsData;\n        setLogsData(logsDataNew);\n        setLoadingList({ ...loadingList,\n          [item]: false\n        });\n      }\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred monitor service');\n      setCallUnderProgress(false);\n      setLoadingList({ ...loadingList,\n        [item]: false\n      });\n    });\n  };\n\n  const blockTitle = index => {\n    switch (index) {\n      case 1:\n        return \"Logs\";\n        break;\n\n      case 2:\n        return \"Packets\";\n        break;\n\n      case 3:\n        return \"Terminals\";\n        break;\n\n      case 4:\n        return \"Terminals\";\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const forceUpdate = useForceUpdate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"five-g-inspect-container\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEnd(result, columns, setColumns),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 3,\n          md: 3,\n          xs: 12,\n          children: Object.entries(columns).map(([columnId, column], index) => {\n            // console.log(\"column : \", column);\n            return column[\"name\"] === \"Logs / Terminals / Packets\" && /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              className: \"inspect-left-sidebar-main\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 12,\n                xs: 12,\n                className: \"fgm-inner-grid inspect-left-sidebar-section\",\n                children: /*#__PURE__*/_jsxDEV(Widget // title=\"Logs / Terminals / Packets\"\n                , {\n                  upperTitle: true,\n                  bodyclassName: '',\n                  className: \"test\",\n                  disableWidgetMenu: true,\n                  fontBold: true,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"inspect-left-sidebar-block\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"inspect-left-bar-title\",\n                      children: column.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"droppable-main-section\",\n                      style: {\n                        margin: 8\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Droppable, {\n                        droppableId: columnId,\n                        children: (provided, snapshot) => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n                            ref: provided.innerRef,\n                            children: [column.items.map((item, index) => {\n                              return /*#__PURE__*/_jsxDEV(Draggable, {\n                                draggableId: item.id,\n                                index: index,\n                                children: (provided, snapshot) => {\n                                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"logs-list-section\",\n                                    ref: provided.innerRef,\n                                    ...provided.draggableProps,\n                                    ...provided.dragHandleProps,\n                                    style: {\n                                      backgroundColor: snapshot.isDragging ? \"#263B4A\" : \"#F0F2FC\",\n                                      color: snapshot.isDragging ? \"#fff\" : \"#2F2F2F\",\n                                      ...provided.draggableProps.style\n                                    },\n                                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                      className: \"logs-list-name\",\n                                      children: item.content\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 328,\n                                      columnNumber: 101\n                                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                      className: \"logs-list-drag-icon\",\n                                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                        src: dots_icon,\n                                        alt: \"dots_icon\",\n                                        className: \"dots_icon\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 329,\n                                        columnNumber: 139\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 329,\n                                      columnNumber: 101\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 314,\n                                    columnNumber: 97\n                                  }, this);\n                                }\n                              }, item.id, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 307,\n                                columnNumber: 85\n                              }, this);\n                            }), provided.placeholder]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 301,\n                            columnNumber: 73\n                          }, this);\n                        }\n                      }, columnId, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 57\n                    }, this)]\n                  }, columnId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 45\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 9,\n          md: 9,\n          xs: 12,\n          className: \"custom-right-grid-container\",\n          children: Object.entries(columns).map(([columnId, column], blockIndex) => {\n            // console.log(\"column : \", column);\n            return column[\"name\"] !== \"Logs / Terminals / Packets\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-right-grid\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 12,\n                  md: 12,\n                  xs: 12,\n                  className: \"fgm-inner-grid inspect-manage-right-container\",\n                  children: /*#__PURE__*/_jsxDEV(Widget, {\n                    upperTitle: true,\n                    bodyclassName: '',\n                    className: \"\",\n                    disableWidgetMenu: true,\n                    fontBold: true,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"inspect-right-bar-section\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"inspect-manage-main-section\",\n                          children: [/*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              width: '100%'\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                borderBottom: 1,\n                                borderColor: 'divider'\n                              },\n                              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                                value: firstTabSectionValue,\n                                onChange: handleFirstSectionChange,\n                                \"aria-label\": \"inspect manage tabs\",\n                                children: /*#__PURE__*/_jsxDEV(Tab, {\n                                  label: blockTitle(blockIndex),\n                                  ...a11yProps(0)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 382,\n                                  columnNumber: 77\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 381,\n                                columnNumber: 73\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 380,\n                              columnNumber: 69\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 379,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                            droppableId: columnId,\n                            children: (provided, snapshot) => {\n                              return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n                                ref: provided.innerRef,\n                                className: \"each-tab-section\",\n                                children: [column.items.map((item, index) => {\n                                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                                    draggableId: item.id,\n                                    index: index,\n                                    children: (provided, snapshot) => {\n                                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                                        ref: provided.innerRef,\n                                        ...provided.draggableProps,\n                                        ...provided.dragHandleProps,\n                                        className: \"each-droppable-item\",\n                                        style: {\n                                          backgroundColor: snapshot.isDragging ? \"#263B4A\" : \"#F0F2FC\",\n                                          color: snapshot.isDragging ? \"#FFF\" : \"#2F2F2F\",\n                                          ...provided.draggableProps.style\n                                        },\n                                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                          className: \"logs-list-name\",\n                                          children: item.content\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 429,\n                                          columnNumber: 105\n                                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                          className: \"logs-list-drag-icon\",\n                                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                            src: dots_icon,\n                                            alt: \"dots_icon\",\n                                            className: \"dots_icon\"\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 430,\n                                            columnNumber: 143\n                                          }, this)\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 430,\n                                          columnNumber: 105\n                                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                          className: \"lln-details\",\n                                          children: loadingList[item.id] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                                            className: \"llnd-loading\",\n                                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                              src: loading_icon\n                                            }, void 0, false, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 435,\n                                              columnNumber: 121\n                                            }, this)\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 434,\n                                            columnNumber: 117\n                                          }, this) : blockIndex === 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                                            className: \"fdg-packets-container\",\n                                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                              className: \"fdgpc-head\",\n                                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                                className: \"fdgpce-row\",\n                                                children: \"Number\"\n                                              }, void 0, false, {\n                                                fileName: _jsxFileName,\n                                                lineNumber: 440,\n                                                columnNumber: 133\n                                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                                className: \"fdgpce-row\",\n                                                children: \"Time\"\n                                              }, void 0, false, {\n                                                fileName: _jsxFileName,\n                                                lineNumber: 441,\n                                                columnNumber: 133\n                                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                                className: \"fdgpce-row\",\n                                                children: \"Source\"\n                                              }, void 0, false, {\n                                                fileName: _jsxFileName,\n                                                lineNumber: 442,\n                                                columnNumber: 133\n                                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                                className: \"fdgpce-row\",\n                                                children: \"Destination\"\n                                              }, void 0, false, {\n                                                fileName: _jsxFileName,\n                                                lineNumber: 443,\n                                                columnNumber: 133\n                                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                                className: \"fdgpce-row\",\n                                                children: \"Protocol\"\n                                              }, void 0, false, {\n                                                fileName: _jsxFileName,\n                                                lineNumber: 444,\n                                                columnNumber: 133\n                                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                                className: \"fdgpce-row\",\n                                                children: \"Details\"\n                                              }, void 0, false, {\n                                                fileName: _jsxFileName,\n                                                lineNumber: 445,\n                                                columnNumber: 133\n                                              }, this)]\n                                            }, void 0, true, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 439,\n                                              columnNumber: 129\n                                            }, this), logsData && logsData[item.id] && logsData[item.id].length > 0 && logsData[item.id].map((eachPacket, index) => {\n                                              return /*#__PURE__*/_jsxDEV(\"div\", {\n                                                className: \"fdgpc-each\",\n                                                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                                  className: \"fdgpce-row\",\n                                                  children: index + 1\n                                                }, void 0, false, {\n                                                  fileName: _jsxFileName,\n                                                  lineNumber: 453,\n                                                  columnNumber: 145\n                                                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                                  className: \"fdgpce-row\",\n                                                  children: eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"frame.time\"] && eachPacket._source.layers[\"frame.time\"][0] && eachPacket._source.layers[\"frame.time\"][0].includes(\"IST\") ? moment(eachPacket._source.layers[\"frame.time\"][0].split(\"IST\")[0]).format('MM-DD-YYYY hh:mm:ss') : moment(eachPacket._source.layers[\"frame.time\"][0]).format('MM-DD-YYYY hh:mm:ss')\n                                                }, void 0, false, {\n                                                  fileName: _jsxFileName,\n                                                  lineNumber: 454,\n                                                  columnNumber: 145\n                                                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                                  className: \"fdgpce-row\",\n                                                  children: eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"ip.src\"] && eachPacket._source.layers[\"ip.src\"][0]\n                                                }, void 0, false, {\n                                                  fileName: _jsxFileName,\n                                                  lineNumber: 463,\n                                                  columnNumber: 145\n                                                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                                  className: \"fdgpce-row\",\n                                                  children: eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"ip.src\"] && eachPacket._source.layers[\"ip.dst\"][0]\n                                                }, void 0, false, {\n                                                  fileName: _jsxFileName,\n                                                  lineNumber: 469,\n                                                  columnNumber: 145\n                                                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                                  className: \"fdgpce-row\",\n                                                  children: eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"_ws.col.Protocol\"] && eachPacket._source.layers[\"_ws.col.Protocol\"][0]\n                                                }, void 0, false, {\n                                                  fileName: _jsxFileName,\n                                                  lineNumber: 475,\n                                                  columnNumber: 145\n                                                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                                  className: \"fdgpce-row\",\n                                                  children: eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"_ws.col.Info\"] && eachPacket._source.layers[\"_ws.col.Info\"][0]\n                                                }, void 0, false, {\n                                                  fileName: _jsxFileName,\n                                                  lineNumber: 481,\n                                                  columnNumber: 145\n                                                }, this)]\n                                              }, index, true, {\n                                                fileName: _jsxFileName,\n                                                lineNumber: 451,\n                                                columnNumber: 141\n                                              }, this);\n                                            })]\n                                          }, void 0, true, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 438,\n                                            columnNumber: 125\n                                          }, this) : blockIndex === 3 || blockIndex === 4 ? /*#__PURE__*/_jsxDEV(Terminal, {\n                                            plugins: [FileSystemPlugin, {\n                                              class: NodeEvalPlugin,\n                                              config: {\n                                                filesystem: FileSystemPlugin.displayName\n                                              }\n                                            }]\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 496,\n                                            columnNumber: 129\n                                          }, this) : logsData && logsData[item.id] && logsData[item.id].length > 0 && logsData[item.id].map((eachLog, index) => {\n                                            return /*#__PURE__*/_jsxDEV(\"span\", {\n                                              children: eachLog\n                                            }, index, false, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 507,\n                                              columnNumber: 137\n                                            }, this);\n                                          })\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 431,\n                                          columnNumber: 105\n                                        }, this)]\n                                      }, void 0, true, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 415,\n                                        columnNumber: 101\n                                      }, this);\n                                    }\n                                  }, item.id, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 408,\n                                    columnNumber: 89\n                                  }, this);\n                                }), provided.placeholder]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 401,\n                                columnNumber: 77\n                              }, this);\n                            }\n                          }, columnId, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 398,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 377,\n                          columnNumber: 61\n                        }, this)\n                      }, columnId, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 373,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 41\n              }, this)\n            }, blockIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(DragAndDrapComponent, \"YL3V+aTzxgZTtDrfmwmbGkInvSQ=\", false, function () {\n  return [useForceUpdate];\n});\n\n_c2 = DragAndDrapComponent;\nexport default DragAndDrapComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"DragAndDrapComponent\");","map":{"version":3,"sources":["/Users/azminds/Documents/five-g/frontend/src/pages/inspectManage/inspectManageNetwork.js"],"names":["React","useState","useEffect","DragDropContext","Draggable","Droppable","Widget","axios","PropTypes","Tabs","Tab","Typography","loading_icon","Grid","Box","moment","Terminal","pseudoFileSystem","NodeEvalPlugin","v4","uuidv4","apiService","getAccordionDetailsUtilityClass","FileSystemPlugin","logsData","columnsFromBackend","name","items","TabPanel","props","children","value","index","other","p","propTypes","node","number","isRequired","a11yProps","id","useForceUpdate","setValue","DragAndDrapComponent","columns","setColumns","callUnderProgress","setCallUnderProgress","logsToken","setLogsToken","inspectElementToken","setEnspectElementToken","inspectList","setInspectList","firstTabSectionValue","setFirstTabSectionChange","setLogsData","loadingList","setLoadingList","getInspectList","handleFirstSectionChange","newValue","cancel","tokenData","CancelToken","source","all","token","then","res","columsData","catch","console","log","onDragEnd","result","destination","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","getData","draggableId","column","copiedItems","updateLoading","item","status","loadingListNew","type","dataType","getLogsData","itemLogsData","logsDataNew","blockTitle","forceUpdate","display","justifyContent","height","Object","entries","map","columnId","margin","provided","snapshot","droppableProps","innerRef","draggableProps","dragHandleProps","backgroundColor","isDragging","color","style","content","dots_icon","placeholder","blockIndex","width","borderBottom","borderColor","length","eachPacket","_source","layers","includes","split","format","class","config","filesystem","displayName","eachLog"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nimport Widget from \"../../components/Widget\";\nimport \"./inspectManageNetwork.scss\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\n\nimport loading_icon from '../../images/home/loading.gif';\n\nimport {\n    Grid\n} from \"@material-ui/core\";\nimport Box from '@mui/material/Box';\nimport moment from 'moment';\n\nimport Terminal from \"terminal-in-react\";\nimport pseudoFileSystem from \"terminal-in-react-pseudo-file-system-plugin\";\nimport NodeEvalPlugin from 'terminal-in-react-node-eval-plugin';\n\n// import uuid from \"uuid/v4\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport dots_icon from '../../images/new_flow_images/dots.svg';\nimport apiService from '../../services/apiService.js';\nimport { getAccordionDetailsUtilityClass } from \"@mui/material\";\n\nconst FileSystemPlugin = pseudoFileSystem();\n\nconst logsData = [\n    // { id: uuidv4(), content: \"AMF\" },\n    // { id: uuidv4(), content: \"SMF\" },\n    // { id: uuidv4(), content: \"UPF1\" },\n    // { id: uuidv4(), content: \"UPF2\" },\n    // { id: uuidv4(), content: \"Device1\" },\n    // { id: uuidv4(), content: \"Device2\" },\n    // { id: uuidv4(), content: \"Device3\" },\n    // { id: uuidv4(), content: \"Device4\" },\n    // { id: uuidv4(), content: \"Device5\" },\n    // { id: uuidv4(), content: \"Device6\" }\n]\n\nconst columnsFromBackend = {\n    [\"id1\"]: {\n        name: \"Logs / Terminals / Packets\",\n        items: logsData\n    },\n    [\"id2\"]: {\n        name: \"tab section 1\",\n        items: []\n    },\n    [\"id3\"]: {\n        name: \"tab section 2\",\n        items: []\n    },\n    [\"id4\"]: {\n        name: \"tab section 3\",\n        items: []\n    },\n    [\"id5\"]: {\n        name: \"tab section 4\",\n        items: []\n    }\n};\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    // console.log(\"children :\", children, \"value :\", value, \"index :\", index);\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\n//create your forceUpdate hook\nfunction useForceUpdate() {\n    const [value, setValue] = useState(0); // integer state\n    return () => setValue(value => value + 1); // update state to force render\n    // An function that increment 👆🏻 the previous state like here \n    // is better than directly setting `value + 1`\n}\n\nfunction DragAndDrapComponent() {\n    const [columns, setColumns] = useState(columnsFromBackend);\n    const [callUnderProgress, setCallUnderProgress] = useState(false);\n    const [logsToken, setLogsToken] = useState(null);\n    const [inspectElementToken, setEnspectElementToken] = useState(null);\n    const [inspectList, setInspectList] = useState([]);\n    const [firstTabSectionValue, setFirstTabSectionChange] = useState(0); //{\"tab0\":0, \"tab1\": 0, \"tab2\": 0, \"tab3\": 0});\n    const [logsData, setLogsData] = useState({});\n    const [loadingList, setLoadingList] = useState({});\n\n    useEffect(() => {\n        getInspectList();\n    }, []);\n\n    const handleFirstSectionChange = (index, newValue) => {\n        // console.log(\"newValue :\", index, newValue);\n        // let tabValues = firstTabSectionValue;\n        // tabValues[\"tab\"+index] = newValue;\n        setFirstTabSectionChange(newValue);\n    };\n\n    const getInspectList = () => {\n\n        if (inspectElementToken)\n            inspectElementToken.cancel();\n        let tokenData = axios.CancelToken.source();\n        setEnspectElementToken(tokenData);\n\n        setCallUnderProgress(true);\n        axios.all([apiService.getInspectList(tokenData.token)])\n            .then(function (res) {\n                if (res[0]) {\n\n                    let inspectList = (res[0][\"data\"] && res[0][\"data\"]) ? res[0][\"data\"] : [];\n                    setInspectList(inspectList);\n                    let columsData = columnsFromBackend;\n                    columsData[\"id1\"][\"items\"] = inspectList;\n                    setColumns(columsData);\n                    setCallUnderProgress(false);\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n                setCallUnderProgress(false);\n            });\n\n    }\n\n    const onDragEnd = (result, columns, setColumns) => {\n        if (!result.destination) return;\n        const { source, destination } = result;\n\n        if (source.droppableId !== destination.droppableId) {\n            const sourceColumn = columns[source.droppableId];\n            const destColumn = columns[destination.droppableId];\n            const sourceItems = [...sourceColumn.items];\n            const destItems = [...destColumn.items];\n            const [removed] = sourceItems.splice(source.index, 1);\n            destItems.splice(destination.index, 0, removed);\n            setColumns({\n                ...columns,\n                [source.droppableId]: {\n                    ...sourceColumn,\n                    items: sourceItems\n                },\n                [destination.droppableId]: {\n                    ...destColumn,\n                    items: destItems\n                }\n            });\n            console.log(result,);\n            getData(result.draggableId, destination.droppableId);\n        } else {\n            const column = columns[source.droppableId];\n            const copiedItems = [...column.items];\n            const [removed] = copiedItems.splice(source.index, 1);\n            copiedItems.splice(destination.index, 0, removed);\n            setColumns({\n                ...columns,\n                [source.droppableId]: {\n                    ...column,\n                    items: copiedItems\n                }\n            });\n        }\n    };\n\n    const updateLoading = (item, status) => {\n        console.log(item, status);\n        let loadingListNew = loadingList;\n        loadingListNew[item] = status;\n        setLoadingList(loadingListNew);\n    }\n\n    const getData = (item, type) => {\n\n        // if (logsToken)\n        //     logsToken.cancel();\n        // let logsTokenData = axios.CancelToken.source();\n        // setLogsToken(logsTokenData);\n\n        let dataType = \"logs\";\n        if (type === \"id3\") {\n            dataType = \"packets\";\n        } else if (type === \"id4\") {\n            dataType = \"terminals\";\n            return;\n        } else if (type === \"id5\") {\n            dataType = \"terminals\";\n            return;\n        }\n        setLoadingList({ ...loadingList, [item]: true });\n\n        setCallUnderProgress(true);\n        updateLoading(item, true);\n        axios.all([apiService.getLogsData(item, dataType)])\n            .then(function (res) {\n                if (res[0]) {\n                    let itemLogsData = (res[0][\"data\"] && res[0][\"data\"]) ? res[0][\"data\"] : [];\n                    let logsDataNew = logsData;\n                    logsDataNew[item] = itemLogsData\n                    setLogsData(logsDataNew);\n                    setLoadingList({ ...loadingList, [item]: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n                setCallUnderProgress(false);\n                setLoadingList({ ...loadingList, [item]: false });\n            });\n\n    }\n\n    const blockTitle = (index) => {\n        switch (index) {\n            case 1:\n                return \"Logs\"\n                break;\n            case 2:\n                return \"Packets\"\n                break;\n            case 3:\n                return \"Terminals\"\n                break;\n            case 4:\n                return \"Terminals\"\n                break;\n            default:\n                break;\n        }\n    }\n\n    const forceUpdate = useForceUpdate();\n\n    return (\n\n        <div className=\"five-g-inspect-container\" style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n            <DragDropContext\n                onDragEnd={result => onDragEnd(result, columns, setColumns)}\n            >\n\n\n                <Grid container spacing={2}>\n                    <Grid item lg={3} md={3} xs={12}>\n\n                        {\n                            Object.entries(columns).map(([columnId, column], index) => {\n                                // console.log(\"column : \", column);\n                                return (\n                                    column[\"name\"] === \"Logs / Terminals / Packets\" &&\n                                    (\n                                        <Grid container spacing={2} className=\"inspect-left-sidebar-main\" key={index}>\n                                            <Grid item md={12} xs={12} className=\"fgm-inner-grid inspect-left-sidebar-section\">\n                                                <Widget\n                                                    // title=\"Logs / Terminals / Packets\"\n                                                    upperTitle\n                                                    bodyclassName={''}\n                                                    className=\"test\"\n                                                    disableWidgetMenu={true}\n                                                    fontBold={true}\n                                                >\n                                                    <div className=\"inspect-left-sidebar-block\"\n                                                        key={columnId}\n                                                    >\n                                                        <div className=\"inspect-left-bar-title\">{column.name}</div>\n                                                        <div className=\"droppable-main-section\" style={{ margin: 8 }}>\n                                                            <Droppable droppableId={columnId} key={columnId}>\n                                                                {(provided, snapshot) => {\n                                                                    return (\n                                                                        <div\n                                                                            {...provided.droppableProps}\n                                                                            ref={provided.innerRef}\n                                                                        >\n                                                                            {column.items.map((item, index) => {\n                                                                                return (\n                                                                                    <Draggable\n                                                                                        key={item.id}\n                                                                                        draggableId={item.id}\n                                                                                        index={index}\n                                                                                    >\n                                                                                        {(provided, snapshot) => {\n                                                                                            return (\n                                                                                                <div className=\"logs-list-section\"\n                                                                                                    ref={provided.innerRef}\n                                                                                                    {...provided.draggableProps}\n                                                                                                    {...provided.dragHandleProps}\n                                                                                                    style={{\n                                                                                                        backgroundColor: snapshot.isDragging\n                                                                                                            ? \"#263B4A\"\n                                                                                                            : \"#F0F2FC\",\n                                                                                                        color: snapshot.isDragging\n                                                                                                            ? \"#fff\"\n                                                                                                            : \"#2F2F2F\",\n                                                                                                        ...provided.draggableProps.style\n                                                                                                    }}\n                                                                                                >\n                                                                                                    <span className=\"logs-list-name\">{item.content}</span>\n                                                                                                    <span className=\"logs-list-drag-icon\"><img src={dots_icon} alt=\"dots_icon\" className=\"dots_icon\" /></span>\n                                                                                                </div>\n                                                                                            );\n                                                                                        }}\n                                                                                    </Draggable>\n                                                                                );\n                                                                            })}\n                                                                            {provided.placeholder}\n                                                                        </div>\n                                                                    );\n                                                                }}\n                                                            </Droppable>\n                                                        </div>\n                                                    </div>\n                                                </Widget>\n\n                                            </Grid>\n                                        </Grid>\n                                    )\n\n                                );\n                            })}\n\n                    </Grid>\n\n                    <Grid item lg={9} md={9} xs={12} className=\"custom-right-grid-container\">\n                        {\n                            Object.entries(columns).map(([columnId, column], blockIndex) => {\n                                // console.log(\"column : \", column);\n                                return (\n\n                                    column[\"name\"] !== \"Logs / Terminals / Packets\" &&\n                                    <div className=\"custom-right-grid\" key={blockIndex}>\n                                        <Grid container spacing={2}>\n                                            <Grid item lg={12} md={12} xs={12} className=\"fgm-inner-grid inspect-manage-right-container\">\n                                                <Widget\n                                                    upperTitle\n                                                    bodyclassName={''}\n                                                    className=\"\"\n                                                    disableWidgetMenu={true}\n                                                    fontBold={true}\n                                                >\n\n                                                    <div className=\"inspect-right-bar-section\">\n                                                        <div\n                                                            key={columnId}\n                                                        >\n                                                            {/* <div className=\"inspect-left-bar-title\">{column.name}</div> */}\n                                                            <div className=\"inspect-manage-main-section\">\n\n                                                                <Box sx={{ width: '100%' }}>\n                                                                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                                                        <Tabs value={firstTabSectionValue} onChange={handleFirstSectionChange} aria-label=\"inspect manage tabs\">\n                                                                            <Tab label={blockTitle(blockIndex)} {...a11yProps(0)} />\n                                                                            {/* <Tab label=\"AMF Logs\" {...a11yProps(1)} />\n                                                                            <Tab label=\"UPF1 Logs\" {...a11yProps(2)} /> */}\n                                                                        </Tabs>\n                                                                    </Box>\n                                                                    {/* <TabPanel value={firstTabSectionValue} index={0}>\n                                                                        SMF Logs\n                                                                    </TabPanel>\n                                                                    <TabPanel value={firstTabSectionValue} index={1}>\n                                                                        AMF Logs\n                                                                    </TabPanel>\n                                                                    <TabPanel value={firstTabSectionValue} index={2}>\n                                                                        UPF1 Logs\n                                                                    </TabPanel> */}\n                                                                </Box>\n\n                                                                <Droppable droppableId={columnId} key={columnId}>\n                                                                    {(provided, snapshot) => {\n                                                                        return (\n                                                                            <div\n                                                                                {...provided.droppableProps}\n                                                                                ref={provided.innerRef}\n                                                                                className=\"each-tab-section\"\n                                                                            >\n                                                                                {column.items.map((item, index) => {\n                                                                                    return (\n                                                                                        <Draggable\n                                                                                            key={item.id}\n                                                                                            draggableId={item.id}\n                                                                                            index={index}\n                                                                                        >\n                                                                                            {(provided, snapshot) => {\n                                                                                                return (\n                                                                                                    <div\n                                                                                                        ref={provided.innerRef}\n                                                                                                        {...provided.draggableProps}\n                                                                                                        {...provided.dragHandleProps}\n                                                                                                        className=\"each-droppable-item\"\n                                                                                                        style={{\n                                                                                                            backgroundColor: snapshot.isDragging\n                                                                                                                ? \"#263B4A\"\n                                                                                                                : \"#F0F2FC\",\n                                                                                                            color: snapshot.isDragging ? \"#FFF\"\n                                                                                                                : \"#2F2F2F\",\n                                                                                                            ...provided.draggableProps.style\n                                                                                                        }}\n                                                                                                    >\n                                                                                                        <span className=\"logs-list-name\">{item.content}</span>\n                                                                                                        <span className=\"logs-list-drag-icon\"><img src={dots_icon} alt=\"dots_icon\" className=\"dots_icon\" /></span>\n                                                                                                        <div className=\"lln-details\">\n                                                                                                            {\n                                                                                                                loadingList[item.id] ?\n                                                                                                                    <div className=\"llnd-loading\">\n                                                                                                                        <img src={loading_icon} />\n                                                                                                                    </div> : (\n                                                                                                                        blockIndex === 2 ? (\n                                                                                                                            <div className=\"fdg-packets-container\">\n                                                                                                                                <div className=\"fdgpc-head\">\n                                                                                                                                    <div className=\"fdgpce-row\">Number</div>\n                                                                                                                                    <div className=\"fdgpce-row\">Time</div>\n                                                                                                                                    <div className=\"fdgpce-row\">Source</div>\n                                                                                                                                    <div className=\"fdgpce-row\">Destination</div>\n                                                                                                                                    <div className=\"fdgpce-row\">Protocol</div>\n                                                                                                                                    <div className=\"fdgpce-row\">Details</div>\n                                                                                                                                </div>\n                                                                                                                                {\n                                                                                                                                    logsData && logsData[item.id] && logsData[item.id].length > 0 &&\n                                                                                                                                    logsData[item.id].map((eachPacket, index) => {\n                                                                                                                                        return (\n                                                                                                                                            <div key={index} className=\"fdgpc-each\">\n\n                                                                                                                                                <div className=\"fdgpce-row\">{index + 1}</div>\n                                                                                                                                                <div className=\"fdgpce-row\">\n                                                                                                                                                    {\n                                                                                                                                                        eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"frame.time\"] && eachPacket._source.layers[\"frame.time\"][0] &&\n                                                                                                                                                            eachPacket._source.layers[\"frame.time\"][0].includes(\"IST\")\n                                                                                                                                                            ?\n                                                                                                                                                            moment(eachPacket._source.layers[\"frame.time\"][0].split(\"IST\")[0]).format('MM-DD-YYYY hh:mm:ss')\n                                                                                                                                                            : moment(eachPacket._source.layers[\"frame.time\"][0]).format('MM-DD-YYYY hh:mm:ss')\n                                                                                                                                                    }\n                                                                                                                                                </div>\n                                                                                                                                                <div className=\"fdgpce-row\">\n                                                                                                                                                    {\n                                                                                                                                                        eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"ip.src\"] &&\n                                                                                                                                                        eachPacket._source.layers[\"ip.src\"][0]\n                                                                                                                                                    }\n                                                                                                                                                </div>\n                                                                                                                                                <div className=\"fdgpce-row\">\n                                                                                                                                                    {\n                                                                                                                                                        eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"ip.src\"] &&\n                                                                                                                                                        eachPacket._source.layers[\"ip.dst\"][0]\n                                                                                                                                                    }\n                                                                                                                                                </div>\n                                                                                                                                                <div className=\"fdgpce-row\">\n                                                                                                                                                    {\n                                                                                                                                                        eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"_ws.col.Protocol\"] &&\n                                                                                                                                                        eachPacket._source.layers[\"_ws.col.Protocol\"][0]\n                                                                                                                                                    }\n                                                                                                                                                </div>\n                                                                                                                                                <div className=\"fdgpce-row\">\n                                                                                                                                                    {\n                                                                                                                                                        eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"_ws.col.Info\"] &&\n                                                                                                                                                        eachPacket._source.layers[\"_ws.col.Info\"][0]\n                                                                                                                                                    }\n                                                                                                                                                </div>\n                                                                                                                                            </div>\n                                                                                                                                        )\n                                                                                                                                    })\n                                                                                                                                }\n\n                                                                                                                            </div>\n                                                                                                                        ) : (\n\n                                                                                                                            (blockIndex === 3 || blockIndex === 4) ? (\n                                                                                                                                <Terminal\n                                                                                                                                    plugins={[FileSystemPlugin,\n                                                                                                                                        {\n                                                                                                                                            class: NodeEvalPlugin,\n                                                                                                                                            config: { filesystem: FileSystemPlugin.displayName }\n                                                                                                                                        }\n                                                                                                                                    ]} />\n                                                                                                                            ) : (\n                                                                                                                                logsData && logsData[item.id] && logsData[item.id].length > 0 &&\n                                                                                                                                logsData[item.id].map((eachLog, index) => {\n                                                                                                                                    return (\n                                                                                                                                        <span key={index}>{eachLog}</span>\n                                                                                                                                    )\n                                                                                                                                })\n                                                                                                                            )\n\n\n                                                                                                                        )\n\n                                                                                                                    )\n\n                                                                                                            }\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                );\n                                                                                            }}\n                                                                                        </Draggable>\n                                                                                    );\n                                                                                })}\n                                                                                {provided.placeholder}\n                                                                            </div>\n                                                                        );\n                                                                    }}\n                                                                </Droppable>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                </Widget>\n\n                                            </Grid>\n                                        </Grid>\n                                    </div>\n                                )\n\n                            })}\n                    </Grid>\n                </Grid>\n\n            </DragDropContext>\n        </div>\n    );\n}\n\nexport default DragAndDrapComponent;\n"]},"metadata":{},"sourceType":"module"}