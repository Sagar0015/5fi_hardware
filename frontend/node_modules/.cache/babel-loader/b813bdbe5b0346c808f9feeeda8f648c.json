{"ast":null,"code":"import * as React from 'react';\nimport isFunction from 'lodash/isFunction';\nimport get from 'lodash/get';\nimport ColumnGroup from '../ColumnGroup';\nimport HeaderCell from '../HeaderCell';\nimport isNullOrUndefined from './isNullOrUndefined';\nfunction cloneCell(Cell, props) {\n  return /*#__PURE__*/React.cloneElement(Cell, props);\n}\nfunction mergeCells(cells) {\n  var nextCells = [];\n  for (var i = 0; i < cells.length; i += 1) {\n    var _cells$i$props = cells[i].props,\n      width = _cells$i$props.width,\n      colSpan = _cells$i$props.colSpan,\n      groupCount = _cells$i$props.groupCount,\n      groupHeader = _cells$i$props.groupHeader,\n      isHeaderCell = _cells$i$props.isHeaderCell,\n      headerHeight = _cells$i$props.headerHeight,\n      verticalAlign = _cells$i$props.verticalAlign;\n    var groupChildren = [];\n    /**\n     * 为列头添加分组\n     */\n\n    if (groupCount && isHeaderCell) {\n      var nextWidth = width;\n      var left = 0;\n      for (var j = 0; j < groupCount; j += 1) {\n        var nextCell = cells[i + j];\n        var _nextCell$props = nextCell.props,\n          nextCellWidth = _nextCell$props.width,\n          sortable = _nextCell$props.sortable,\n          children = _nextCell$props.children,\n          dataKey = _nextCell$props.dataKey,\n          onSortColumn = _nextCell$props.onSortColumn,\n          sortColumn = _nextCell$props.sortColumn,\n          sortType = _nextCell$props.sortType;\n        if (j !== 0) {\n          nextWidth += nextCellWidth;\n          left += cells[i + j - 1].props.width;\n          cells[i + j] = cloneCell(nextCell, {\n            removed: true\n          });\n        }\n        groupChildren.push( /*#__PURE__*/React.createElement(HeaderCell, {\n          key: j,\n          left: left,\n          dataKey: dataKey,\n          width: nextCellWidth,\n          sortable: sortable,\n          sortColumn: sortColumn,\n          sortType: sortType,\n          onSortColumn: onSortColumn\n        }, children));\n      }\n      nextCells.push(cloneCell(cells[i], {\n        width: nextWidth,\n        children: /*#__PURE__*/React.createElement(ColumnGroup, {\n          width: nextWidth,\n          headerHeight: headerHeight,\n          header: groupHeader,\n          verticalAlign: verticalAlign\n        }, groupChildren)\n      }));\n      continue;\n    } else if (colSpan) {\n      /**\n       * 如果存在 colSpan 属性，就去找它的下一个 Cell,\n       * 看看值是否是 isNullOrUndefined，，如果为空这可以合并这个单元格\n       */\n      var _nextWidth = width;\n      for (var _j = 0; _j < colSpan; _j += 1) {\n        var _nextCell = cells[i + _j];\n        if (_nextCell) {\n          var _nextCell$props2 = _nextCell.props,\n            rowData = _nextCell$props2.rowData,\n            rowIndex = _nextCell$props2.rowIndex,\n            _children = _nextCell$props2.children,\n            colSpanWidth = _nextCell$props2.width,\n            _isHeaderCell = _nextCell$props2.isHeaderCell,\n            _dataKey = _nextCell$props2.dataKey;\n          var cellText = isFunction(_children) ? _children(rowData, rowIndex) : get(rowData, _dataKey);\n          if (rowData && isNullOrUndefined(cellText) || _isHeaderCell && isNullOrUndefined(_children)) {\n            _nextWidth += colSpanWidth;\n            cells[i + _j] = cloneCell(_nextCell, {\n              removed: true\n            });\n          }\n        }\n      }\n      nextCells.push(cloneCell(cells[i], {\n        width: _nextWidth,\n        'aria-colspan': colSpan && _nextWidth > width ? colSpan : undefined\n      }));\n      continue;\n    }\n    nextCells.push(cells[i]);\n  }\n  return nextCells;\n}\nexport default mergeCells;","map":{"version":3,"names":["React","isFunction","get","ColumnGroup","HeaderCell","isNullOrUndefined","cloneCell","Cell","props","cloneElement","mergeCells","cells","nextCells","i","length","_cells$i$props","width","colSpan","groupCount","groupHeader","isHeaderCell","headerHeight","verticalAlign","groupChildren","nextWidth","left","j","nextCell","_nextCell$props","nextCellWidth","sortable","children","dataKey","onSortColumn","sortColumn","sortType","removed","push","createElement","key","header","_nextWidth","_j","_nextCell","_nextCell$props2","rowData","rowIndex","_children","colSpanWidth","_isHeaderCell","_dataKey","cellText","undefined"],"sources":["/Users/azminds/Documents/five-g/frontend/node_modules/rsuite-table/es/utils/mergeCells.js"],"sourcesContent":["import * as React from 'react';\nimport isFunction from 'lodash/isFunction';\nimport get from 'lodash/get';\nimport ColumnGroup from '../ColumnGroup';\nimport HeaderCell from '../HeaderCell';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nfunction cloneCell(Cell, props) {\n  return /*#__PURE__*/React.cloneElement(Cell, props);\n}\n\nfunction mergeCells(cells) {\n  var nextCells = [];\n\n  for (var i = 0; i < cells.length; i += 1) {\n    var _cells$i$props = cells[i].props,\n        width = _cells$i$props.width,\n        colSpan = _cells$i$props.colSpan,\n        groupCount = _cells$i$props.groupCount,\n        groupHeader = _cells$i$props.groupHeader,\n        isHeaderCell = _cells$i$props.isHeaderCell,\n        headerHeight = _cells$i$props.headerHeight,\n        verticalAlign = _cells$i$props.verticalAlign;\n    var groupChildren = [];\n    /**\n     * 为列头添加分组\n     */\n\n    if (groupCount && isHeaderCell) {\n      var nextWidth = width;\n      var left = 0;\n\n      for (var j = 0; j < groupCount; j += 1) {\n        var nextCell = cells[i + j];\n        var _nextCell$props = nextCell.props,\n            nextCellWidth = _nextCell$props.width,\n            sortable = _nextCell$props.sortable,\n            children = _nextCell$props.children,\n            dataKey = _nextCell$props.dataKey,\n            onSortColumn = _nextCell$props.onSortColumn,\n            sortColumn = _nextCell$props.sortColumn,\n            sortType = _nextCell$props.sortType;\n\n        if (j !== 0) {\n          nextWidth += nextCellWidth;\n          left += cells[i + j - 1].props.width;\n          cells[i + j] = cloneCell(nextCell, {\n            removed: true\n          });\n        }\n\n        groupChildren.push( /*#__PURE__*/React.createElement(HeaderCell, {\n          key: j,\n          left: left,\n          dataKey: dataKey,\n          width: nextCellWidth,\n          sortable: sortable,\n          sortColumn: sortColumn,\n          sortType: sortType,\n          onSortColumn: onSortColumn\n        }, children));\n      }\n\n      nextCells.push(cloneCell(cells[i], {\n        width: nextWidth,\n        children: /*#__PURE__*/React.createElement(ColumnGroup, {\n          width: nextWidth,\n          headerHeight: headerHeight,\n          header: groupHeader,\n          verticalAlign: verticalAlign\n        }, groupChildren)\n      }));\n      continue;\n    } else if (colSpan) {\n      /**\n       * 如果存在 colSpan 属性，就去找它的下一个 Cell,\n       * 看看值是否是 isNullOrUndefined，，如果为空这可以合并这个单元格\n       */\n      var _nextWidth = width;\n\n      for (var _j = 0; _j < colSpan; _j += 1) {\n        var _nextCell = cells[i + _j];\n\n        if (_nextCell) {\n          var _nextCell$props2 = _nextCell.props,\n              rowData = _nextCell$props2.rowData,\n              rowIndex = _nextCell$props2.rowIndex,\n              _children = _nextCell$props2.children,\n              colSpanWidth = _nextCell$props2.width,\n              _isHeaderCell = _nextCell$props2.isHeaderCell,\n              _dataKey = _nextCell$props2.dataKey;\n          var cellText = isFunction(_children) ? _children(rowData, rowIndex) : get(rowData, _dataKey);\n\n          if (rowData && isNullOrUndefined(cellText) || _isHeaderCell && isNullOrUndefined(_children)) {\n            _nextWidth += colSpanWidth;\n            cells[i + _j] = cloneCell(_nextCell, {\n              removed: true\n            });\n          }\n        }\n      }\n\n      nextCells.push(cloneCell(cells[i], {\n        width: _nextWidth,\n        'aria-colspan': colSpan && _nextWidth > width ? colSpan : undefined\n      }));\n      continue;\n    }\n\n    nextCells.push(cells[i]);\n  }\n\n  return nextCells;\n}\n\nexport default mergeCells;"],"mappings":"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"},"metadata":{},"sourceType":"module"}