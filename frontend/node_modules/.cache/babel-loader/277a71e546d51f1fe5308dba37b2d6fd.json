{"ast":null,"code":"(function (global, factory) {\n  if ('function' == typeof define && define.amd) define(['exports', 'prop-types'], factory);else if ('undefined' != typeof exports) factory(exports, require('prop-types'));else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.propTypes), global.types = mod.exports;\n  }\n})(this, function (exports, _propTypes) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: !0\n  }), exports.TerminalDefaultProps = exports.TerminalContextTypes = exports.TerminalPropTypes = exports.descriptionsPropType = exports.commandsPropType = void 0;\n  var _propTypes2 = function (obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }(_propTypes),\n    commandsPropType = exports.commandsPropType = _propTypes2.default.objectOf(_propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.shape({\n      options: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n        name: _propTypes2.default.string,\n        description: _propTypes2.default.string,\n        defaultValue: _propTypes2.default.any\n      })),\n      method: _propTypes2.default.func\n    })])),\n    descriptionsPropType = exports.descriptionsPropType = _propTypes2.default.objectOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool])),\n    TerminalPropTypes = exports.TerminalPropTypes = {\n      startState: _propTypes2.default.oneOf(['minimised', 'maximised', 'open', 'closed']),\n      showActions: _propTypes2.default.bool,\n      hideTopBar: _propTypes2.default.bool,\n      allowTabs: _propTypes2.default.bool,\n      msg: _propTypes2.default.string,\n      closedTitle: _propTypes2.default.string,\n      closedMessage: _propTypes2.default.string,\n      color: _propTypes2.default.string,\n      style: _propTypes2.default.object,\n      prompt: _propTypes2.default.string,\n      barColor: _propTypes2.default.string,\n      outputColor: _propTypes2.default.string,\n      backgroundColor: _propTypes2.default.string,\n      commands: commandsPropType,\n      descriptions: descriptionsPropType,\n      watchConsoleLogging: _propTypes2.default.bool,\n      commandPassThrough: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.bool]),\n      promptSymbol: _propTypes2.default.string,\n      plugins: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.shape({\n        class: _propTypes2.default.func,\n        config: _propTypes2.default.object\n      })])),\n      shortcuts: _propTypes2.default.objectOf(_propTypes2.default.objectOf(_propTypes2.default.string)),\n      actionHandlers: _propTypes2.default.shape({\n        handleClose: _propTypes2.default.func,\n        handleMinimise: _propTypes2.default.func,\n        handleMaximise: _propTypes2.default.func\n      }),\n      afterChange: _propTypes2.default.func,\n      commandWasRun: _propTypes2.default.func\n    },\n    TerminalContextTypes = exports.TerminalContextTypes = {\n      barShowing: _propTypes2.default.bool,\n      tabsShowing: _propTypes2.default.bool,\n      activeTab: _propTypes2.default.string,\n      instances: _propTypes2.default.array,\n      show: _propTypes2.default.bool,\n      minimise: _propTypes2.default.bool,\n      maximise: _propTypes2.default.bool,\n      closeWindow: _propTypes2.default.func,\n      openWindow: _propTypes2.default.func,\n      minimiseWindow: _propTypes2.default.func,\n      unminimiseWindow: _propTypes2.default.func,\n      maximiseWindow: _propTypes2.default.func,\n      unmaximiseWindow: _propTypes2.default.func,\n      toggleShow: _propTypes2.default.func,\n      toggleMaximise: _propTypes2.default.func,\n      toggleMinimize: _propTypes2.default.func\n    },\n    TerminalDefaultProps = exports.TerminalDefaultProps = {\n      startState: 'open',\n      hideTopBar: !1,\n      allowTabs: !0,\n      showActions: !0,\n      msg: '',\n      closedTitle: 'OOPS! You closed the window.',\n      closedMessage: 'Click on the icon to reopen.',\n      color: 'green',\n      style: {},\n      prompt: 'green',\n      barColor: 'black',\n      backgroundColor: 'black',\n      commands: {},\n      descriptions: {},\n      watchConsoleLogging: !1,\n      commandPassThrough: !1,\n      promptSymbol: '>',\n      plugins: [],\n      shortcuts: {}\n    };\n});","map":{"version":3,"mappings":"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","names":["commandsPropType","_propTypes2","objectOf","oneOfType","func","shape","options","arrayOf","name","string","description","defaultValue","any","method","descriptionsPropType","bool","TerminalPropTypes","startState","oneOf","showActions","hideTopBar","allowTabs","msg","closedTitle","closedMessage","color","style","object","prompt","barColor","outputColor","backgroundColor","commands","descriptions","watchConsoleLogging","commandPassThrough","promptSymbol","plugins","class","config","shortcuts","actionHandlers","handleClose","handleMinimise","handleMaximise","afterChange","commandWasRun","TerminalContextTypes","barShowing","tabsShowing","activeTab","instances","array","show","minimise","maximise","closeWindow","openWindow","minimiseWindow","unminimiseWindow","maximiseWindow","unmaximiseWindow","toggleShow","toggleMaximise","toggleMinimize","TerminalDefaultProps"],"sources":["../../../src/js/components/types.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const commandsPropType = PropTypes.objectOf(PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.shape({\n    options: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      description: PropTypes.string,\n      defaultValue: PropTypes.any,\n    })),\n    method: PropTypes.func,\n  }),\n]));\n\nexport const descriptionsPropType = PropTypes.objectOf(PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.bool,\n]));\n\nexport const TerminalPropTypes = {\n  startState: PropTypes.oneOf(['minimised', 'maximised', 'open', 'closed']),\n  showActions: PropTypes.bool,\n  hideTopBar: PropTypes.bool,\n  allowTabs: PropTypes.bool,\n  msg: PropTypes.string,\n  closedTitle: PropTypes.string,\n  closedMessage: PropTypes.string,\n  color: PropTypes.string,\n  style: PropTypes.object, // eslint-disable-line\n  prompt: PropTypes.string,\n  barColor: PropTypes.string,\n  outputColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  commands: commandsPropType,\n  descriptions: descriptionsPropType,\n  watchConsoleLogging: PropTypes.bool,\n  commandPassThrough: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool,\n  ]),\n  promptSymbol: PropTypes.string,\n  plugins: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({\n      class: PropTypes.func,\n      config: PropTypes.object,\n    }),\n  ])),\n  shortcuts: PropTypes.objectOf(PropTypes.objectOf(PropTypes.string)),\n  actionHandlers: PropTypes.shape({\n    handleClose: PropTypes.func,\n    handleMinimise: PropTypes.func,\n    handleMaximise: PropTypes.func,\n  }),\n  afterChange: PropTypes.func,\n  commandWasRun: PropTypes.func,\n};\n\nexport const TerminalContextTypes = {\n  barShowing: PropTypes.bool,\n  tabsShowing: PropTypes.bool,\n  activeTab: PropTypes.string,\n  instances: PropTypes.array,\n  show: PropTypes.bool,\n  minimise: PropTypes.bool,\n  maximise: PropTypes.bool,\n  closeWindow: PropTypes.func,\n  openWindow: PropTypes.func,\n  minimiseWindow: PropTypes.func,\n  unminimiseWindow: PropTypes.func,\n  maximiseWindow: PropTypes.func,\n  unmaximiseWindow: PropTypes.func,\n  toggleShow: PropTypes.func,\n  toggleMaximise: PropTypes.func,\n  toggleMinimize: PropTypes.func,\n};\n\nexport const TerminalDefaultProps = {\n  startState: 'open',\n  hideTopBar: false,\n  allowTabs: true,\n  showActions: true,\n  msg: '',\n  closedTitle: 'OOPS! You closed the window.',\n  closedMessage: 'Click on the icon to reopen.',\n  color: 'green',\n  style: {},\n  prompt: 'green',\n  barColor: 'black',\n  backgroundColor: 'black',\n  commands: {},\n  descriptions: {},\n  watchConsoleLogging: false,\n  commandPassThrough: false,\n  promptSymbol: '>',\n  plugins: [],\n  shortcuts: {},\n};\n"]},"metadata":{},"sourceType":"script"}