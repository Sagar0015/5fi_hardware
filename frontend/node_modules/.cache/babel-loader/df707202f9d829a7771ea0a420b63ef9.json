{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport getOffsetParent from './getOffsetParent';\nimport getOffset from './getOffset';\nimport { getStyle } from '../style';\nimport scrollTop from './scrollTop';\nimport scrollLeft from './scrollLeft';\nimport nodeName from './nodeName';\nexport default (function (node, offsetParent) {\n  var parentOffset = {\n    top: 0,\n    left: 0\n  };\n  var offset = null; // Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n  // because it is its only offset parent\n\n  if (getStyle(node, 'position') === 'fixed') {\n    offset = node.getBoundingClientRect();\n  } else {\n    offsetParent = offsetParent || getOffsetParent(node);\n    offset = getOffset(node);\n    if (nodeName(offsetParent) !== 'html') {\n      var nextParentOffset = getOffset(offsetParent);\n      if (nextParentOffset) {\n        parentOffset.top = nextParentOffset.top;\n        parentOffset.left = nextParentOffset.left;\n      }\n    }\n    parentOffset.top += parseInt(getStyle(offsetParent, 'borderTopWidth'), 10) - scrollTop(offsetParent) || 0;\n    parentOffset.left += parseInt(getStyle(offsetParent, 'borderLeftWidth'), 10) - scrollLeft(offsetParent) || 0;\n  } // Subtract parent offsets and node margins\n\n  if (offset) {\n    return _extends({}, offset, {\n      top: offset.top - parentOffset.top - (parseInt(getStyle(node, 'marginTop'), 10) || 0),\n      left: offset.left - parentOffset.left - (parseInt(getStyle(node, 'marginLeft'), 10) || 0)\n    });\n  }\n  return null;\n});","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","getOffsetParent","getOffset","getStyle","scrollTop","scrollLeft","nodeName","node","offsetParent","parentOffset","top","left","offset","getBoundingClientRect","nextParentOffset","parseInt"],"sources":["/Users/azminds/Documents/five-g/frontend/node_modules/dom-lib/es/query/getPosition.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport getOffsetParent from './getOffsetParent';\nimport getOffset from './getOffset';\nimport { getStyle } from '../style';\nimport scrollTop from './scrollTop';\nimport scrollLeft from './scrollLeft';\nimport nodeName from './nodeName';\nexport default (function (node, offsetParent) {\n  var parentOffset = {\n    top: 0,\n    left: 0\n  };\n  var offset = null; // Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n  // because it is its only offset parent\n\n  if (getStyle(node, 'position') === 'fixed') {\n    offset = node.getBoundingClientRect();\n  } else {\n    offsetParent = offsetParent || getOffsetParent(node);\n    offset = getOffset(node);\n\n    if (nodeName(offsetParent) !== 'html') {\n      var nextParentOffset = getOffset(offsetParent);\n\n      if (nextParentOffset) {\n        parentOffset.top = nextParentOffset.top;\n        parentOffset.left = nextParentOffset.left;\n      }\n    }\n\n    parentOffset.top += parseInt(getStyle(offsetParent, 'borderTopWidth'), 10) - scrollTop(offsetParent) || 0;\n    parentOffset.left += parseInt(getStyle(offsetParent, 'borderLeftWidth'), 10) - scrollLeft(offsetParent) || 0;\n  } // Subtract parent offsets and node margins\n\n\n  if (offset) {\n    return _extends({}, offset, {\n      top: offset.top - parentOffset.top - (parseInt(getStyle(node, 'marginTop'), 10) || 0),\n      left: offset.left - parentOffset.left - (parseInt(getStyle(node, 'marginLeft'), 10) || 0)\n    });\n  }\n\n  return null;\n});"],"mappings":"AAAA,SAASA,QAAQ,GAAG;EAAEA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAAUC,MAAM,EAAE;IAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;MAAE,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;QAAE,IAAIN,MAAM,CAACQ,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;UAAEL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;QAAE;MAAE;IAAE;IAAE,OAAOL,MAAM;EAAE,CAAC;EAAE,OAAOH,QAAQ,CAACY,KAAK,CAAC,IAAI,EAAEP,SAAS,CAAC;AAAE;AAE5T,OAAOQ,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,QAAQ,QAAQ,UAAU;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,gBAAgB,UAAUC,IAAI,EAAEC,YAAY,EAAE;EAC5C,IAAIC,YAAY,GAAG;IACjBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE;EACR,CAAC;EACD,IAAIC,MAAM,GAAG,IAAI,CAAC,CAAC;EACnB;;EAEA,IAAIT,QAAQ,CAACI,IAAI,EAAE,UAAU,CAAC,KAAK,OAAO,EAAE;IAC1CK,MAAM,GAAGL,IAAI,CAACM,qBAAqB,EAAE;EACvC,CAAC,MAAM;IACLL,YAAY,GAAGA,YAAY,IAAIP,eAAe,CAACM,IAAI,CAAC;IACpDK,MAAM,GAAGV,SAAS,CAACK,IAAI,CAAC;IAExB,IAAID,QAAQ,CAACE,YAAY,CAAC,KAAK,MAAM,EAAE;MACrC,IAAIM,gBAAgB,GAAGZ,SAAS,CAACM,YAAY,CAAC;MAE9C,IAAIM,gBAAgB,EAAE;QACpBL,YAAY,CAACC,GAAG,GAAGI,gBAAgB,CAACJ,GAAG;QACvCD,YAAY,CAACE,IAAI,GAAGG,gBAAgB,CAACH,IAAI;MAC3C;IACF;IAEAF,YAAY,CAACC,GAAG,IAAIK,QAAQ,CAACZ,QAAQ,CAACK,YAAY,EAAE,gBAAgB,CAAC,EAAE,EAAE,CAAC,GAAGJ,SAAS,CAACI,YAAY,CAAC,IAAI,CAAC;IACzGC,YAAY,CAACE,IAAI,IAAII,QAAQ,CAACZ,QAAQ,CAACK,YAAY,EAAE,iBAAiB,CAAC,EAAE,EAAE,CAAC,GAAGH,UAAU,CAACG,YAAY,CAAC,IAAI,CAAC;EAC9G,CAAC,CAAC;;EAGF,IAAII,MAAM,EAAE;IACV,OAAOxB,QAAQ,CAAC,CAAC,CAAC,EAAEwB,MAAM,EAAE;MAC1BF,GAAG,EAAEE,MAAM,CAACF,GAAG,GAAGD,YAAY,CAACC,GAAG,IAAIK,QAAQ,CAACZ,QAAQ,CAACI,IAAI,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;MACrFI,IAAI,EAAEC,MAAM,CAACD,IAAI,GAAGF,YAAY,CAACE,IAAI,IAAII,QAAQ,CAACZ,QAAQ,CAACI,IAAI,EAAE,YAAY,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC;IAC1F,CAAC,CAAC;EACJ;EAEA,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module"}