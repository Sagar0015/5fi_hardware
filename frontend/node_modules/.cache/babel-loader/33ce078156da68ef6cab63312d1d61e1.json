{"ast":null,"code":"(function (global, factory) {\n  if ('function' == typeof define && define.amd) define(['exports', '../../args/index', '../../utils'], factory);else if ('undefined' != typeof exports) factory(exports, require('../../args/index'), require('../../utils'));else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.index, global.utils), global.terminalUtils = mod.exports;\n  }\n})(this, function (exports, _index, _utils) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: !0\n  }), exports.os = void 0, exports.pluginMap = function (plugins, eachHandler) {\n    return plugins.map(function (plugin) {\n      return 'function' == typeof plugin && (plugin = {\n        class: plugin,\n        config: void 0\n      }), plugin;\n    }).forEach(function (pluginObj) {\n      return eachHandler(pluginObj.class, pluginObj.config);\n    });\n  }, exports.uuidv4 = function () {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = 0 | 16 * Math.random(),\n        v = 'x' === c ? r : 8 | 3 & r;\n      return v.toString(16);\n    });\n  }, exports.getShortcuts = function (shortcuts, obj) {\n    return 'object' === ('undefined' == typeof obj ? 'undefined' : _typeof(obj)) && Object.keys(obj).forEach(function (key) {\n      var split = key.toLowerCase().replace(/\\s/g, '').split(',');\n      split.forEach(function (osName) {\n        osName === os && (shortcuts = _extends({}, shortcuts, obj[key]));\n      });\n    }), shortcuts;\n  }, exports.modCommands = function (commands) {\n    var newCommands = {};\n    return Object.keys(commands).forEach(function (name) {\n      var needsInstance = !1,\n        definition = commands[name],\n        method = definition,\n        parse = function (i) {\n          return i;\n        };\n      if ('undefined' != typeof definition) {\n        if ('object' === ('undefined' == typeof definition ? 'undefined' : _typeof(definition))) {\n          var cmd = new _index2.default();\n          if ('undefined' != typeof definition.options) try {\n            cmd.options(definition.options);\n          } catch (e) {\n            throw new Error('options for command wrong format');\n          }\n          parse = function (i) {\n            return cmd.parse(i, {\n              name: name,\n              help: !0,\n              version: !1\n            });\n          }, method = definition.method, needsInstance = definition.needsInstance || !1;\n        }\n        newCommands[name] = {\n          parse: parse,\n          method: method,\n          needsInstance: needsInstance\n        };\n      }\n    }), newCommands;\n  };\n  var _index2 = function (obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }(_index),\n    _extends = Object.assign || function (target) {\n      for (var source, i = 1; i < arguments.length; i++) for (var key in source = arguments[i], source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);\n      return target;\n    },\n    _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && 'function' == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n    },\n    os = exports.os = (0, _utils.getOs)();\n});","map":{"version":3,"mappings":";;;;;;;;;;;;mCAKgBA,S,GAAT,UAAmBC,OAAnB,EAA4BC,WAA5B,EAAyC;IAC9C,OAAOD,QAAQE,GAAR,CAAY,UAACC,MAAD,EAAY;MAO7B,OANsB,UAAlB,WAAOA,MAMX,KALEA,SAAS;QACPC,OAAOD,MADA;QAEPE;MAFO,CAKX,GAAOF,MACR;IAAA,CARM,EAQJG,OARI,CAQI;MAAA,OAAaL,YAAYM,UAAUH,KAAtB,EAA6BG,UAAUF,MAAvC,CAAb;IAAA,CARJ,CASR;EAAA,C,UAEeG,M,GAAT,YAAkB;IACvB,OAAO,uCAAuCC,OAAvC,CAA+C,OAA/C,EAAwD,UAACC,CAAD,EAAO;MACpE,IAAMC,IAAyB,CAArB,GAAgB,EAAhB,QAAKC,MAAL,EAAV;QACMC,IAAU,GAAN,SAAYF,CAAZ,GAAiB,SAD3B;MAEA,OAAOE,EAAEC,QAAF,CAAW,EAAX,CACR;IAAA,CAJM,CAKR;EAAA,C,UAEeC,Y,GAAT,UAAsBC,SAAtB,EAAiCC,GAAjC,EAAsC;IAc3C,OAbmB,QAAf,4BAAOA,GAAP,yBAAOA,GAAP,EAaJ,IAZEC,OAAOC,IAAP,CAAYF,GAAZ,EAAiBX,OAAjB,CAAyB,UAACc,GAAD,EAAS;MAChC,IAAMC,QAAQD,IAAIE,WAAJ,GAAkBb,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,EAAqCY,KAArC,CAA2C,GAA3C,CAAd;MACAA,MAAMf,OAAN,CAAc,UAACiB,MAAD,EAAY;QACpBA,WAAWC,EADS,KAEtBR,yBACKA,SADL,EAEKC,IAAIG,GAAJ,CAFL,CAFsB,CAOzB;MAAA,CAPD,CAQD;IAAA,CAVD,CAYF,EAAOJ,SACR;EAAA,C,UAEeS,W,GAAT,UAAqBC,QAArB,EAA+B;IACpC,IAAMC,cAAc,EAApB;IAmCA,OAjCAT,OAAOC,IAAP,CAAYO,QAAZ,EAAsBpB,OAAtB,CAA8B,UAACsB,IAAD,EAAU;MACtC,IAAIC,kBAAJ;QACMC,aAAaJ,SAASE,IAAT,CADnB;QAEIG,SAASD,UAFb;QAGIE,QAAQ;UAAA,OAAKC,CAAL;QAAA,CAHZ;MAIA,IAA0B,WAAtB,WAAOH,UAAX,EAAuC;QACrC,IAA0B,QAAtB,4BAAOA,UAAP,yBAAOA,UAAP,EAAJ,EAAoC;UAClC,IAAMI,MAAM,mBAAZ;UACA,IAAkC,WAA9B,WAAOJ,WAAWK,OAAtB,EACE,IAAI;YACFD,IAAIC,OAAJ,CAAYL,WAAWK,OAAvB,CACD;UAAA,CAAC,QAAOC,CAAP,EAAU;YACV,MAAM,IAAIC,KAAJ,CAAU,kCAAV,CACP;UAAA;UAEHL,QAAQ;YAAA,OACNE,IAAIF,KAAJ,CAAUC,CAAV,EAAa;cACXL,UADW;cAEXU,QAFW;cAGXC;YAHW,CAAb,CADM;UAAA,CAT0B,EAelCR,SAASD,WAAWC,MAfc,EAgBlCF,gBAAgBC,WAAWD,aAAX,MACjB;QAAA;QAEDF,YAAYC,IAAZ,IAAoB;UAClBI,YADkB;UAElBD,cAFkB;UAGlBF;QAHkB,CAKrB;MAAA;IACF,CA/BD,CAiCA,EAAOF,WACR;EAAA,C;;;;;;;;;;;;;;;IA5EYH,kBAAK,mB","names":["pluginMap","plugins","eachHandler","map","plugin","class","config","forEach","pluginObj","uuidv4","replace","c","r","random","v","toString","getShortcuts","shortcuts","obj","Object","keys","key","split","toLowerCase","osName","os","modCommands","commands","newCommands","name","needsInstance","definition","method","parse","i","cmd","options","e","Error","help","version"],"sources":["../../../../src/js/components/Terminal/terminal-utils.js"],"sourcesContent":["import Command from '../../args/index';\nimport { getOs } from '../../utils';\n\nexport const os = getOs();\n\nexport function pluginMap(plugins, eachHandler) {\n  return plugins.map((plugin) => {\n    if (typeof plugin === 'function') {\n      plugin = {\n        class: plugin,\n        config: undefined,\n      };\n    }\n    return plugin;\n  }).forEach(pluginObj => eachHandler(pluginObj.class, pluginObj.config));\n}\n\nexport function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0; // eslint-disable-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3 | 0x8); // eslint-disable-line\n    return v.toString(16);\n  });\n}\n\nexport function getShortcuts(shortcuts, obj) {\n  if (typeof obj === 'object') {\n    Object.keys(obj).forEach((key) => {\n      const split = key.toLowerCase().replace(/\\s/g, '').split(',');\n      split.forEach((osName) => {\n        if (osName === os) {\n          shortcuts = {\n            ...shortcuts,\n            ...obj[key],\n          };\n        }\n      });\n    });\n  }\n  return shortcuts;\n}\n\nexport function modCommands(commands) {\n  const newCommands = {};\n\n  Object.keys(commands).forEach((name) => {\n    let needsInstance = false;\n    const definition = commands[name];\n    let method = definition;\n    let parse = i => i;\n    if (typeof definition !== 'undefined') {\n      if (typeof definition === 'object') {\n        const cmd = new Command();\n        if (typeof definition.options !== 'undefined') {\n          try {\n            cmd.options(definition.options);\n          } catch (e) {\n            throw new Error('options for command wrong format');\n          }\n        }\n        parse = i =>\n          cmd.parse(i, {\n            name,\n            help: true,\n            version: false,\n          });\n        method = definition.method; // eslint-disable-line\n        needsInstance = definition.needsInstance || false;\n      }\n\n      newCommands[name] = {\n        parse,\n        method,\n        needsInstance,\n      };\n    }\n  });\n\n  return newCommands;\n}\n"]},"metadata":{},"sourceType":"script"}