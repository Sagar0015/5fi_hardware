{"ast":null,"code":"module.exports = function (hljs) {\n  var KEYWORDS = {\n    keyword: 'actor addressof and as be break class compile_error compile_intrinsic' + 'consume continue delegate digestof do else elseif embed end error' + 'for fun if ifdef in interface is isnt lambda let match new not object' + 'or primitive recover repeat return struct then trait try type until ' + 'use var where while with xor',\n    meta: 'iso val tag trn box ref',\n    literal: 'this false true'\n  };\n  var TRIPLE_QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"\"\"',\n    end: '\"\"\"',\n    relevance: 10\n  };\n  var QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"',\n    end: '\"',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  var SINGLE_QUOTE_CHAR_MODE = {\n    className: 'string',\n    begin: '\\'',\n    end: '\\'',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    relevance: 0\n  };\n  var TYPE_NAME = {\n    className: 'type',\n    begin: '\\\\b_?[A-Z][\\\\w]*',\n    relevance: 0\n  };\n  var PRIMED_NAME = {\n    begin: hljs.IDENT_RE + '\\'',\n    relevance: 0\n  };\n  var CLASS = {\n    className: 'class',\n    beginKeywords: 'class actor',\n    end: '$',\n    contains: [hljs.TITLE_MODE, hljs.C_LINE_COMMENT_MODE]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'new fun',\n    end: '=>',\n    contains: [hljs.TITLE_MODE, {\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [TYPE_NAME, PRIMED_NAME, hljs.C_NUMBER_MODE, hljs.C_BLOCK_COMMENT_MODE]\n    }, {\n      begin: /:/,\n      endsWithParent: true,\n      contains: [TYPE_NAME]\n    }, hljs.C_LINE_COMMENT_MODE]\n  };\n  return {\n    keywords: KEYWORDS,\n    contains: [CLASS, FUNCTION, TYPE_NAME, TRIPLE_QUOTE_STRING_MODE, QUOTE_STRING_MODE, SINGLE_QUOTE_CHAR_MODE, PRIMED_NAME, hljs.C_NUMBER_MODE, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n  };\n};","map":{"version":3,"names":["module","exports","hljs","KEYWORDS","keyword","meta","literal","TRIPLE_QUOTE_STRING_MODE","className","begin","end","relevance","QUOTE_STRING_MODE","contains","BACKSLASH_ESCAPE","SINGLE_QUOTE_CHAR_MODE","TYPE_NAME","PRIMED_NAME","IDENT_RE","CLASS","beginKeywords","TITLE_MODE","C_LINE_COMMENT_MODE","FUNCTION","C_NUMBER_MODE","C_BLOCK_COMMENT_MODE","endsWithParent","keywords"],"sources":["/Users/azminds/Documents/five-g/frontend/node_modules/terminal-in-react-pseudo-file-system-plugin/node_modules/highlight.js/lib/languages/pony.js"],"sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'actor addressof and as be break class compile_error compile_intrinsic' +\n      'consume continue delegate digestof do else elseif embed end error' +\n      'for fun if ifdef in interface is isnt lambda let match new not object' +\n      'or primitive recover repeat return struct then trait try type until ' +\n      'use var where while with xor',\n    meta:\n      'iso val tag trn box ref',\n    literal:\n      'this false true'\n  };\n\n  var TRIPLE_QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"\"\"', end: '\"\"\"',\n    relevance: 10\n  };\n\n  var QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n\n  var SINGLE_QUOTE_CHAR_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    relevance: 0\n  };\n\n  var TYPE_NAME = {\n    className: 'type',\n    begin: '\\\\b_?[A-Z][\\\\w]*',\n    relevance: 0\n  };\n\n  var PRIMED_NAME = {\n    begin: hljs.IDENT_RE + '\\'', relevance: 0\n  };\n\n  var CLASS = {\n    className: 'class',\n    beginKeywords: 'class actor', end: '$',\n    contains: [\n      hljs.TITLE_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  }\n\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'new fun', end: '=>',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        begin: /\\(/, end: /\\)/,\n        contains: [\n          TYPE_NAME,\n          PRIMED_NAME,\n          hljs.C_NUMBER_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        begin: /:/, endsWithParent: true,\n        contains: [TYPE_NAME]\n      },\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  }\n\n  return {\n    keywords: KEYWORDS,\n    contains: [\n      CLASS,\n      FUNCTION,\n      TYPE_NAME,\n      TRIPLE_QUOTE_STRING_MODE,\n      QUOTE_STRING_MODE,\n      SINGLE_QUOTE_CHAR_MODE,\n      PRIMED_NAME,\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B,IAAIC,QAAQ,GAAG;IACbC,OAAO,EACL,uEAAuE,GACvE,mEAAmE,GACnE,uEAAuE,GACvE,sEAAsE,GACtE,8BAA8B;IAChCC,IAAI,EACF,yBAAyB;IAC3BC,OAAO,EACL;EACJ,CAAC;EAED,IAAIC,wBAAwB,GAAG;IAC7BC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,KAAK;IAAEC,GAAG,EAAE,KAAK;IACxBC,SAAS,EAAE;EACb,CAAC;EAED,IAAIC,iBAAiB,GAAG;IACtBJ,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,GAAG;IAAEC,GAAG,EAAE,GAAG;IACpBG,QAAQ,EAAE,CAACX,IAAI,CAACY,gBAAgB;EAClC,CAAC;EAED,IAAIC,sBAAsB,GAAG;IAC3BP,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,IAAI;IAAEC,GAAG,EAAE,IAAI;IACtBG,QAAQ,EAAE,CAACX,IAAI,CAACY,gBAAgB,CAAC;IACjCH,SAAS,EAAE;EACb,CAAC;EAED,IAAIK,SAAS,GAAG;IACdR,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE,kBAAkB;IACzBE,SAAS,EAAE;EACb,CAAC;EAED,IAAIM,WAAW,GAAG;IAChBR,KAAK,EAAEP,IAAI,CAACgB,QAAQ,GAAG,IAAI;IAAEP,SAAS,EAAE;EAC1C,CAAC;EAED,IAAIQ,KAAK,GAAG;IACVX,SAAS,EAAE,OAAO;IAClBY,aAAa,EAAE,aAAa;IAAEV,GAAG,EAAE,GAAG;IACtCG,QAAQ,EAAE,CACRX,IAAI,CAACmB,UAAU,EACfnB,IAAI,CAACoB,mBAAmB;EAE5B,CAAC;EAED,IAAIC,QAAQ,GAAG;IACbf,SAAS,EAAE,UAAU;IACrBY,aAAa,EAAE,SAAS;IAAEV,GAAG,EAAE,IAAI;IACnCG,QAAQ,EAAE,CACRX,IAAI,CAACmB,UAAU,EACf;MACEZ,KAAK,EAAE,IAAI;MAAEC,GAAG,EAAE,IAAI;MACtBG,QAAQ,EAAE,CACRG,SAAS,EACTC,WAAW,EACXf,IAAI,CAACsB,aAAa,EAClBtB,IAAI,CAACuB,oBAAoB;IAE7B,CAAC,EACD;MACEhB,KAAK,EAAE,GAAG;MAAEiB,cAAc,EAAE,IAAI;MAChCb,QAAQ,EAAE,CAACG,SAAS;IACtB,CAAC,EACDd,IAAI,CAACoB,mBAAmB;EAE5B,CAAC;EAED,OAAO;IACLK,QAAQ,EAAExB,QAAQ;IAClBU,QAAQ,EAAE,CACRM,KAAK,EACLI,QAAQ,EACRP,SAAS,EACTT,wBAAwB,EACxBK,iBAAiB,EACjBG,sBAAsB,EACtBE,WAAW,EACXf,IAAI,CAACsB,aAAa,EAClBtB,IAAI,CAACoB,mBAAmB,EACxBpB,IAAI,CAACuB,oBAAoB;EAE7B,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}