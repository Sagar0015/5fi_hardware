{"ast":null,"code":"import qs from 'qs';\nimport axios from 'axios';\nimport storeProvider from '../store/storeProvider';\nvar apiServices = {\n  getMonitorHomeData: function (token) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/monitor/home\",\n      data: qs.stringify({\n        source: config.source\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  },\n  getElementDetails: function (token, containerId) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/monitor/element\",\n      data: qs.stringify({\n        source: config.source,\n        containerId: containerId\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  },\n  addSubscriber: function (token, data) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/manage/addsubscriber\",\n      data: qs.stringify({\n        source: config.source,\n        ...data\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  },\n  getSubscribers: function (token) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/manage/subscribers\",\n      data: qs.stringify({\n        source: config.source\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  },\n  deleteSubscriber: function (token, ueId) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/manage/delete_subscriber\",\n      data: qs.stringify({\n        source: config.source,\n        ueId\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  },\n  modifySubscriber: function (token, data) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/manage/modify_subscriber\",\n      data: qs.stringify({\n        source: config.source,\n        ...data\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  },\n  getAccessPoints: function (token) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/manage/access_points\",\n      data: qs.stringify({\n        source: config.source\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  },\n  getUEList: function (token, containerId) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/monitor/uelist\",\n      data: qs.stringify({\n        source: config.source,\n        containerId\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  },\n  prepareHandOver: function (token, data) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/monitor/prepare_handover\",\n      data: qs.stringify({\n        source: config.source,\n        ...data\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  },\n  getPathSwitchList: function (token) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/monitor/path_switch_list\",\n      data: qs.stringify({\n        source: config.source\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  },\n  submitPathSwitch: function (token, data) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/monitor/submit_path_switch\",\n      data: qs.stringify({\n        source: config.source,\n        ...data\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  },\n  buildADemo: function (token) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/manage/build_a_demo\",\n      data: qs.stringify({\n        source: config.source\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  },\n  suggestedActionUE: function (token) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/manage/suggested_actions_core\",\n      data: qs.stringify({\n        source: config.source\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  },\n  suggestedActionUESubmit: function (token) {\n    const config = storeProvider.getAppConfig();\n    return axios({\n      cancelToken: token,\n      cancelPreviousRequest: true,\n      method: 'post',\n      url: config.api + \"/api/manage/execute_sug_action\",\n      data: qs.stringify({\n        source: config.source\n      })\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (res) {\n      console.log(res);\n      console.log('An error occurred in get solr query service');\n    });\n  }\n};\nexport default apiServices;","map":{"version":3,"sources":["/Users/azminds/Documents/five-g/frontend/src/services/apiService.js"],"names":["qs","axios","storeProvider","apiServices","getMonitorHomeData","token","config","getAppConfig","cancelToken","cancelPreviousRequest","method","url","api","data","stringify","source","then","response","catch","res","console","log","getElementDetails","containerId","addSubscriber","getSubscribers","deleteSubscriber","ueId","modifySubscriber","getAccessPoints","getUEList","prepareHandOver","getPathSwitchList","submitPathSwitch","buildADemo","suggestedActionUE","suggestedActionUESubmit"],"mappings":"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","sourcesContent":["import qs from 'qs';\nimport axios from 'axios';\nimport storeProvider from '../store/storeProvider';\n\nvar apiServices = {\n\n    getMonitorHomeData: function(token) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/monitor/home\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getElementDetails: function(token, containerId) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/monitor/element\",\n            data: qs.stringify({\n                source: config.source,\n                containerId: containerId\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    addSubscriber: function(token, data) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/manage/addsubscriber\",\n            data: qs.stringify({\n                source: config.source,\n                ...data\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getSubscribers: function(token) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/manage/subscribers\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    deleteSubscriber: function(token, ueId) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/manage/delete_subscriber\",\n            data: qs.stringify({\n                source: config.source,\n                ueId\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    modifySubscriber: function(token, data) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/manage/modify_subscriber\",\n            data: qs.stringify({\n                source: config.source,\n                ...data\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getAccessPoints: function(token) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/manage/access_points\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getUEList: function(token, containerId) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/monitor/uelist\",\n            data: qs.stringify({\n                source: config.source,\n                containerId\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    prepareHandOver: function(token, data) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/monitor/prepare_handover\",\n            data: qs.stringify({\n                source: config.source,\n                ...data\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getPathSwitchList: function(token) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/monitor/path_switch_list\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    submitPathSwitch: function(token, data) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/monitor/submit_path_switch\",\n            data: qs.stringify({\n                source: config.source,\n                ...data\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    buildADemo: function(token) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/manage/build_a_demo\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    suggestedActionUE: function(token) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/manage/suggested_actions_core\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    suggestedActionUESubmit: function(token) {\n        \n        const config = storeProvider.getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: config.api+\"/api/manage/execute_sug_action\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function(response) {\n            \n            return response.data;\n\n        }).catch(function(res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n}\n\nexport default apiServices;"]},"metadata":{},"sourceType":"module"}