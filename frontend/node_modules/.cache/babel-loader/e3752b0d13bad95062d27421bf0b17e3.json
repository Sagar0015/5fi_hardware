{"ast":null,"code":"(function (global, factory) {\n  if ('function' == typeof define && define.amd) define(['exports', 'react', 'string-similarity', 'whatkey', 'lodash.isequal', 'styled-components', '../../utils', '../types', './terminal-utils', './styled-elements', '../Bar', '../Content/index', '../Tabs/index'], factory);else if ('undefined' != typeof exports) factory(exports, require('react'), require('string-similarity'), require('whatkey'), require('lodash.isequal'), require('styled-components'), require('../../utils'), require('../types'), require('./terminal-utils'), require('./styled-elements'), require('../Bar'), require('../Content/index'), require('../Tabs/index'));else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.React, global.stringSimilarity, global.whatkey, global.lodash, global.styledComponents, global.utils, global.types, global.terminalUtils, global.styledElements, global.Bar, global.index, global.index), global.index = mod.exports;\n  }\n})(this, function (exports, _react, _stringSimilarity, _whatkey2, _lodash, _styledComponents, _utils, _types, _terminalUtils, _styledElements, _Bar, _index, _index3) {\n  'use strict';\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n      return arr2;\n    }\n    return Array.from(arr);\n  }\n  function _defineProperty(obj, key, value) {\n    return key in obj ? Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : obj[key] = value, obj;\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError('Cannot call a class as a function');\n  }\n  function _possibleConstructorReturn(self, call) {\n    if (!self) throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    return call && ('object' == typeof call || 'function' == typeof call) ? call : self;\n  }\n  function _inherits(subClass, superClass) {\n    if ('function' != typeof superClass && null !== superClass) throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);\n  }\n  function compLogic(comp) {\n    switch (comp) {\n      case '>':\n        return function (a, b) {\n          return parseInt(a, 10) > parseInt(b, 10);\n        };\n      case '<':\n        return function (a, b) {\n          return parseInt(a, 10) < parseInt(b, 10);\n        };\n      case '>=':\n        return function (a, b) {\n          return parseInt(a, 10) >= parseInt(b, 10);\n        };\n      case '<=':\n        return function (a, b) {\n          return parseInt(a, 10) <= parseInt(b, 10);\n        };\n      case '!=':\n        return function (a, b) {\n          return a !== b;\n        };\n      case '=':\n      default:\n        return function (a, b) {\n          return a === b;\n        };\n    }\n  }\n  function putCursorAtEnd(el) {\n    if (document.activeElement !== el && el.focus(), el.setSelectionRange) {\n      var len = 2 * el.value.length;\n      setTimeout(function () {\n        el.setSelectionRange(len, len);\n      }, 1);\n    } else el.value = el.value;\n  }\n  Object.defineProperty(exports, '__esModule', {\n    value: !0\n  });\n  var _class,\n    _temp,\n    _react2 = _interopRequireDefault(_react),\n    _stringSimilarity2 = _interopRequireDefault(_stringSimilarity),\n    _whatkey3 = _interopRequireDefault(_whatkey2),\n    _lodash2 = _interopRequireDefault(_lodash),\n    _Bar2 = _interopRequireDefault(_Bar),\n    _index2 = _interopRequireDefault(_index),\n    _index4 = _interopRequireDefault(_index3),\n    _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && 'function' == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n    },\n    _extends = Object.assign || function (target) {\n      for (var source, i = 1; i < arguments.length; i++) for (var key in source = arguments[i], source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);\n      return target;\n    },\n    _createClass = function () {\n      function defineProperties(target, props) {\n        for (var descriptor, i = 0; i < props.length; i++) descriptor = props[i], descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 'value' in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);\n      }\n      return function (Constructor, protoProps, staticProps) {\n        return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;\n      };\n    }(),\n    Terminal = (_temp = _class = function (_Component) {\n      function Terminal(props) {\n        _classCallCheck(this, Terminal);\n        var _this = _possibleConstructorReturn(this, (Terminal.__proto__ || Object.getPrototypeOf(Terminal)).call(this, props));\n        return _this.componentWillMount = function () {\n          _this.loadPlugins(), _this.assembleCommands(), _this.setDescriptions(), _this.setShortcuts(), _this.createTab(!0);\n        }, _this.componentDidMount = function () {\n          _this.props.watchConsoleLogging && _this.watchConsoleLogging();\n        }, _this.createTab = function () {\n          var force = 0 < arguments.length && void 0 !== arguments[0] && arguments[0],\n            _this$props = _this.props,\n            allowTabs = _this$props.allowTabs,\n            promptSymbol = _this$props.promptSymbol;\n          if (force || allowTabs) {\n            var tabs = _this.state.tabs,\n              id = (0, _terminalUtils.uuidv4)();\n            tabs.push(_react2.default.createElement(_index2.default, {\n              key: id,\n              id: id,\n              prompt: promptSymbol,\n              handleChange: _this.handleChange,\n              handlerKeyPress: _this.handlerKeyPress,\n              register: function () {\n                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];\n                return _this.registerInstance.apply(_this, [id].concat(args));\n              }\n            })), _this.setState({\n              activeTab: id,\n              tabs: tabs\n            });\n          }\n        }, _this.removeTab = function (index) {\n          var tabs = _this.state.tabs;\n          tabs.splice(index, 1), _this.setState({\n            tabs: tabs\n          });\n        }, _this.getAppContent = function () {\n          var _this$state = _this.state,\n            show = _this$state.show,\n            minimise = _this$state.minimise;\n          return show ? minimise ? _this.getBar() : _this.getContent() : _this.getNote();\n        }, _this.getContent = function () {\n          var _this$props2 = _this.props,\n            color = _this$props2.color,\n            style = _this$props2.style,\n            showActions = _this$props2.showActions,\n            hideTopBar = _this$props2.hideTopBar,\n            allowTabs = _this$props2.allowTabs,\n            actionHandlers = _this$props2.actionHandlers,\n            _this$state2 = _this.state,\n            activeTab = _this$state2.activeTab,\n            tabs = _this$state2.tabs;\n          return _react2.default.createElement('div', {\n            style: _extends({}, {\n              height: '100%',\n              color: color || 'green',\n              animation: 'fadeIn 0.18s ease-in',\n              fontFamily: '\\'Inconsolata\\', monospace',\n              fontSize: '0.9em'\n            }, style)\n          }, !hideTopBar && _react2.default.createElement(_Bar2.default, _extends({\n            showActions: showActions\n          }, actionHandlers)), allowTabs && _react2.default.createElement(_index4.default, {\n            active: activeTab,\n            setActiveTab: _this.setActiveTab,\n            createTab: _this.createTab,\n            removeTab: _this.removeTab\n          }), tabs);\n        }, _this.getBar = function () {\n          var _this$props3 = _this.props,\n            style = _this$props3.style,\n            showActions = _this$props3.showActions,\n            actionHandlers = _this$props3.actionHandlers;\n          return _react2.default.createElement(_styledElements.ContainerWrapper, {\n            style: _extends({}, style)\n          }, _react2.default.createElement(_Bar2.default, _extends({\n            showActions: showActions\n          }, actionHandlers)));\n        }, _this.getNote = function () {\n          return _react2.default.createElement(_styledElements.Note, null, _react2.default.createElement('h1', null, _this.props.closedTitle), _react2.default.createElement('img', {\n            src: 'https://camo.githubusercontent.com/95ad3fffa11193f85dedbf14ca67e4c5c07182d0/687474703a2f2f69636f6e732e69636f6e617263686976652e636f6d2f69636f6e732f70616f6d656469612f736d616c6c2d6e2d666c61742f313032342f7465726d696e616c2d69636f6e2e706e67',\n            width: '200',\n            height: '200',\n            alt: 'note',\n            onKeyPress: _this.toggleState('show'),\n            onClick: _this.toggleState('show')\n          }), _this.props.closedMessage);\n        }, _this.getPluginData = function (name) {\n          return _this.pluginData[name];\n        }, _this.setPluginData = function (name, data) {\n          _this.pluginData[name] = data;\n        }, _this.setDescriptions = function () {\n          var descriptions = _extends({}, _this.defaultDesciptions, _this.props.descriptions);\n          (0, _terminalUtils.pluginMap)(_this.props.plugins, function (plugin) {\n            plugin.descriptions && (descriptions = _extends({}, descriptions, plugin.descriptions));\n          }), _this.setState({\n            descriptions: descriptions\n          });\n        }, _this.setShortcuts = function () {\n          var shortcuts = (0, _terminalUtils.getShortcuts)({}, _this.defaultShortcuts);\n          shortcuts = (0, _terminalUtils.getShortcuts)(shortcuts, _this.props.shortcuts), (0, _terminalUtils.pluginMap)(_this.props.plugins, function (plugin) {\n            plugin.shortcuts && (shortcuts = (0, _terminalUtils.getShortcuts)(shortcuts, plugin.shortcuts));\n          }), _this.setState({\n            shortcuts: shortcuts\n          });\n        }, _this.setPromptPrefix = function (instance, promptPrefix) {\n          null === instance.state.controller && instance.setState({\n            promptPrefix: promptPrefix\n          });\n        }, _this.setPromptSymbol = function (instance, prompt) {\n          null === instance.state.controller && instance.setState({\n            prompt: prompt\n          });\n        }, _this.setActiveTab = function (activeTab) {\n          _this.setState({\n            activeTab: activeTab\n          });\n        }, _this.setFalse = function (name) {\n          return function () {\n            return _this.setState(_defineProperty({}, name, !1));\n          };\n        }, _this.setTrue = function (name) {\n          return function () {\n            return _this.setState(_defineProperty({}, name, !0));\n          };\n        }, _this.setValueWithHistory = function (instance, position, inputRef) {\n          var history = instance.state.history;\n          history[position] && (instance.setState({\n            historyCounter: position\n          }), inputRef.value = history[position], putCursorAtEnd(inputRef));\n        }, _this.checkVersion = function (comp, ver) {\n          if ('*' === ver) return !0;\n          if (!/^(\\d|\\.)+$/.test(ver)) throw new Error('Version can only have numbers and periods');else {\n            var clean = ver.toLowerCase().replace(/x/g, '0');\n            '.' === clean[clean.length - 1] && (clean += '0');\n            for (var split = clean.split('.'); 3 > split.length;) split.push('0');\n            var realSplit = Terminal.version.split('.'),\n              checkBools = split.map(function (val, index) {\n                return compLogic(comp)(realSplit[index], val);\n              });\n            return 0 > checkBools.indexOf(!1);\n          }\n        }, _this.registerInstance = function (index, instance) {\n          var instances = _this.state.instances,\n            pluginInstances = {},\n            pluginMethods = {},\n            old = instances.find(function (i) {\n              return i.index === index;\n            });\n          (0, _terminalUtils.pluginMap)(_this.props.plugins, function (PluginClass, config) {\n            try {\n              var plugin,\n                api = {\n                  printLine: _this.printLine.bind(_this, instance),\n                  removeLine: _this.removeLine.bind(_this, instance),\n                  runCommand: _this.runCommand.bind(_this, instance),\n                  setCanScroll: _this.setCanScroll.bind(_this, instance),\n                  setScrollPosition: _this.setScrollPosition.bind(_this, instance),\n                  focusInput: _this.focusInput.bind(_this, instance),\n                  setPromptPrefix: _this.setPromptPrefix.bind(_this, instance),\n                  setPromptSymbol: _this.setPromptSymbol.bind(_this, instance),\n                  getPluginMethod: _this.getPluginMethod.bind(_this, instance),\n                  takeControl: _this.pluginTakeControl.bind(_this, instance),\n                  releaseControl: _this.pluginReleaseControl.bind(_this, instance),\n                  getData: function () {\n                    return _this.getPluginData(PluginClass.displayName);\n                  },\n                  setData: function (data) {\n                    return _this.setPluginData(PluginClass.displayName, data);\n                  },\n                  checkVersion: _this.checkVersion.bind(_this),\n                  version: Terminal.version,\n                  os: _terminalUtils.os\n                };\n              old ? old.pluginInstances[PluginClass.displayName].updateApi(api) : (plugin = new PluginClass(api, config), pluginMethods[PluginClass.displayName] = _extends({}, plugin.getPublicMethods(), {\n                _getName: function () {\n                  return PluginClass.displayName;\n                },\n                _getVersion: function () {\n                  return PluginClass.version;\n                }\n              })), pluginInstances[PluginClass.displayName] = plugin;\n            } catch (e) {\n              console.error('Error instantiating plugin ' + PluginClass.displayName, e);\n            }\n          });\n          var data = {\n            index: index,\n            instance: instance,\n            pluginMethods: old ? old.pluginMethods : pluginMethods,\n            pluginInstances: old ? old.pluginInstances : pluginInstances\n          };\n          if (old) {\n            var realIndex = instances.indexOf(old);\n            instances[realIndex] = data;\n          } else instances.push(data);\n          return _this.setState({\n            instances: instances\n          }), function () {\n            var insts = _this.state.instances;\n            _this.setState({\n              instances: insts.filter(function (i) {\n                return !(0, _lodash2.default)(i.instance, instance);\n              })\n            });\n          };\n        }, _this.pluginTakeControl = function (instance, controller, newPrompt, newPromptPrefix) {\n          var _instance$state = instance.state,\n            promptPrefix = _instance$state.promptPrefix,\n            prompt = _instance$state.prompt;\n          instance.setState({\n            controller: controller,\n            prompt: 'undefined' == typeof newPrompt ? prompt : newPrompt,\n            promptPrefix: 'undefined' == typeof newPromptPrefix ? promptPrefix : newPromptPrefix,\n            oldPrefix: promptPrefix,\n            oldPrompt: prompt\n          });\n        }, _this.pluginReleaseControl = function (instance) {\n          var _instance$state2 = instance.state,\n            oldPrefix = _instance$state2.oldPrefix,\n            oldPrompt = _instance$state2.oldPrompt;\n          instance.setState({\n            controller: null,\n            promptPrefix: oldPrefix,\n            prompt: oldPrompt\n          });\n        }, _this.toggleState = function (name) {\n          return function () {\n            return _this.setState(_defineProperty({}, name, !_this.state[name]));\n          };\n        }, _this.assembleCommands = function () {\n          var commands = _extends({}, _this.defaultCommands, _this.props.commands);\n          (0, _terminalUtils.pluginMap)(_this.props.plugins, function (plugin) {\n            plugin.commands && (commands = _extends({}, commands, plugin.commands));\n          }), _this.setState({\n            commands: (0, _terminalUtils.modCommands)(commands)\n          });\n        }, _this.autocompleteValue = function (inputRef) {\n          var descriptions = _this.state.descriptions,\n            keysToCheck = Object.keys(descriptions).filter(function (key) {\n              return !1 !== descriptions[key];\n            }),\n            ratings = [];\n          return ratings = 1 < inputRef.value.length ? _stringSimilarity2.default.findBestMatch(inputRef.value, keysToCheck).ratings : keysToCheck.reduce(function (full, item) {\n            return 0 === item.indexOf(inputRef.value) && full.push({\n              target: item,\n              rating: 1\n            }), full;\n          }, []), ratings.filter(function (item) {\n            return 0 < item.rating;\n          });\n        }, _this.clearScreen = function (args, printLine, runCommand, instance) {\n          instance.setState({\n            summary: []\n          });\n        }, _this.checkShortcuts = function (instance, key, e) {\n          var controller = instance.state.controller,\n            cuts = {};\n          if (null !== controller) controller.shortcuts && (cuts = (0, _terminalUtils.getShortcuts)(cuts, controller.shortcuts));else {\n            var instanceData = _this.state.instances.find(function (i) {\n              return (0, _lodash2.default)(i.instance, instance);\n            });\n            cuts = _this.state.shortcuts, instanceData && Object.values(instanceData.pluginInstances).forEach(function (i) {\n              cuts = (0, _terminalUtils.getShortcuts)(cuts, i.shortcuts);\n            });\n          }\n          var shortcuts = Object.keys(cuts);\n          if (0 < shortcuts.length) {\n            var keyInputs = instance.state.keyInputs,\n              modKey = key;\n            'meta' === key && (modKey = 'darwin' === _terminalUtils.os ? 'cmd' : 'win' === _terminalUtils.os ? 'win' : 'meta'), keyInputs.push(modKey);\n            var len = keyInputs.length,\n              options = shortcuts.map(function (cut, i) {\n                return [cut.replace(/\\s/g, '').split('+'), i];\n              }).filter(function (cut) {\n                return cut[0].length >= keyInputs.length;\n              }).filter(function (cut) {\n                return (0, _lodash2.default)(cut[0].slice(0, len), keyInputs);\n              });\n            if (!(0 < options.length)) 0 < keyInputs.length && instance.setState({\n              keyInputs: []\n            });else if (1 === options.length && options[0][0].length === len) {\n              var shortcut = shortcuts[options[0][1]],\n                action = cuts[shortcut];\n              'string' == typeof action ? _this.runCommand(instance, cuts[shortcut]) : 'function' == typeof action && (e.preventDefault(), e.stopPropagation(), action()), instance.setState({\n                keyInputs: []\n              });\n            }\n          }\n        }, _this.editLine = function (args, printLine, runCommand, instance) {\n          var summary = instance.state.summary,\n            index = args.line;\n          0 > index && (index = 0 === summary.length ? 0 : summary.length - index), summary[index] = args._.join(' '), instance.setState({\n            summary: summary\n          });\n        }, _this.handleChange = function (instance, e) {\n          var _instance$state3 = instance.state,\n            input = _instance$state3.input,\n            promptPrefix = _instance$state3.promptPrefix,\n            prompt = _instance$state3.prompt,\n            history = _instance$state3.history,\n            controller = _instance$state3.controller,\n            saveToHistory = null === controller || controller.history || !1;\n          if ('Enter' === e.key && !e.shiftKey) {\n            'undefined' == typeof e.dontShowCommand && _this.printLine.bind(_this, instance)('' + promptPrefix + prompt + ' ' + e.target.value, !1), input.push(e.target.value);\n            var res = _this.runCommand(instance, '' + input.join('\\n'));\n            'undefined' != typeof res && _this.printLine.bind(_this, instance)(res);\n            var newHistory = [].concat(_toConsumableArray(history), [e.target.value]),\n              historyProps = saveToHistory ? {\n                history: newHistory,\n                historyCounter: newHistory.length\n              } : {};\n            instance.setState(_extends({\n              input: []\n            }, historyProps)), e.target.value = '';\n          } else if ('Enter' === e.key && e.shiftKey) {\n            _this.printLine.bind(_this, instance)('' + promptPrefix + prompt + ' ' + e.target.value, !1);\n            var _newHistory = [].concat(_toConsumableArray(history), [e.target.value]),\n              _historyProps = saveToHistory ? {\n                history: _newHistory,\n                historyCounter: _newHistory.length\n              } : {};\n            instance.setState(_extends({\n              input: [].concat(_toConsumableArray(input), [e.target.value])\n            }, _historyProps)), e.target.value = '';\n          }\n          'function' == typeof _this.props.afterChange && _this.props.afterChange(e);\n        }, _this.handlerKeyPress = function (instance, e, inputRef) {\n          var _whatkey = (0, _whatkey3.default)(e),\n            key = _whatkey.key,\n            _instance$state4 = instance.state,\n            historyCounter = _instance$state4.historyCounter,\n            keyInputs = _instance$state4.keyInputs,\n            controller = _instance$state4.controller;\n          if (0 === keyInputs.length || 0 === keyInputs.length) if (null !== controller) controller.onKeyPress && controller.onKeyPress(key);else switch (key) {\n            case 'up':\n              _this.setValueWithHistory(instance, historyCounter - 1, inputRef), _this.state.tabbed && _this.setState({\n                tabbed: !1\n              });\n              break;\n            case 'down':\n              _this.setValueWithHistory(instance, historyCounter + 1, inputRef), _this.state.tabbed && _this.setState({\n                tabbed: !1\n              });\n              break;\n            case 'tab':\n              if (e.preventDefault(), '' !== inputRef.value && !0 === _this.state.tabbed) {\n                var contents = _this.autocompleteValue(inputRef);\n                _this.printLine(instance, '' + instance.state.promptPrefix + instance.state.prompt + ' ' + inputRef.value, !1), _this.printLine(instance, _react2.default.createElement('span', null, contents.filter(function (item) {\n                  return 'undefined' != typeof item;\n                }).map(function (item) {\n                  var styles = {\n                    marginRight: 5,\n                    width: 'calc(33% - 5px)',\n                    display: 'inline-block'\n                  };\n                  return 3 < contents.length && (styles.marginBottom = 5), _react2.default.createElement('span', {\n                    style: styles,\n                    key: item.target + '-' + item.rating\n                  }, item.target);\n                })), !1), _this.setState({\n                  tabbed: !1\n                });\n              } else _this.setState({\n                tabbed: !0\n              });\n              break;\n            default:\n              _this.state.tabbed && _this.setState({\n                tabbed: !1\n              });\n          }\n          _this.checkShortcuts(instance, key, e);\n        }, _this.loadPlugins = function () {\n          var pluginData = {};\n          (0, _terminalUtils.pluginMap)(_this.props.plugins, function (plugin) {\n            try {\n              pluginData[plugin.displayName] = plugin.defaultData;\n            } catch (e) {\n              console.error('Error loading plugin ' + plugin.displayName, e);\n            }\n          }), _this.pluginData = pluginData;\n        }, _this.getPluginMethod = function (instance, name, method) {\n          var instanceData = _this.state.instances.find(function (i) {\n            return (0, _lodash2.default)(i.instance, instance);\n          });\n          if (instanceData) if (instanceData.pluginMethods[name]) {\n            if (instanceData.pluginMethods[name][method]) return instanceData.pluginMethods[name][method];\n            throw new Error('No method with name ' + method + ' has been registered for plugin ' + name);\n          } else throw new Error('No plugin with name ' + name + ' has been registered');\n          return null;\n        }, _this.setCanScroll = function (instance, force) {\n          'undefined' != typeof force && instance.setState({\n            canScroll: force\n          });\n        }, _this.setScrollPosition = function (instance, pos) {\n          'number' == typeof pos && instance.setScrollPosition(pos);\n        }, _this.focusInput = function (instance) {\n          'number' == typeof pos && instance.focusInput();\n        }, _this.printLine = function (instance, inp) {\n          var std = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !0,\n            print = !0;\n          if (std) {\n            var instanceData = _this.state.instances.find(function (i) {\n              return (0, _lodash2.default)(i.instance, instance);\n            });\n            if (instanceData) for (var plugins = instanceData.pluginInstances, i = 0; i < plugins.length; i += 1) try {\n              print = plugins[i].readStdOut(inp);\n            } catch (e) {}\n          }\n          if (!1 !== print) {\n            var summary = instance.state.summary;\n            summary.push(inp), instance.setState({\n              summary: summary\n            });\n          }\n        }, _this.removeLine = function (instance) {\n          var lineNumber = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : -1,\n            summary = instance.state.summary;\n          summary.splice(lineNumber, 1), instance.setState({\n            summary: summary\n          });\n        }, _this.runCommand = function (instance, inputText) {\n          var force = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],\n            inputArray = inputText.split(' '),\n            input = inputArray[0],\n            controller = instance.state.controller,\n            commands = {};\n          if (!force && null !== controller) {\n            if (controller.runCommand) return controller.runCommand(inputText);\n            controller.commands && (commands = _extends({}, (0, _terminalUtils.modCommands)(controller.commands)));\n          } else {\n            var instanceData = _this.state.instances.find(function (i) {\n              return (0, _lodash2.default)(i.instance, instance);\n            });\n            commands = _extends({}, _this.state.commands), instanceData && Object.values(instanceData.pluginInstances).forEach(function (i) {\n              commands = _extends({}, commands, (0, _terminalUtils.modCommands)(i.commands));\n            });\n          }\n          var res,\n            command = commands[input];\n          if ('' === input) ;else if (void 0 === command) 'function' == typeof _this.props.commandPassThrough ? res = _this.props.commandPassThrough(inputArray, _this.printLine.bind(_this, instance), _this.runCommand.bind(_this, instance)) : _this.printLine.bind(_this, instance)('-bash:' + input + ': command not found');else {\n            var parsedArgs = command.parse(inputArray),\n              type = 'undefined' == typeof parsedArgs ? 'undefined' : _typeof(parsedArgs);\n            'object' === type && ('object' !== type || parsedArgs.help) || (res = command.method(parsedArgs, _this.printLine.bind(_this, instance), _this.runCommand.bind(_this, instance), !0 === command.needsInstance ? instance : void 0));\n          }\n          return 'function' == typeof _this.props.commandWasRun && _this.props.commandWasRun(inputArray, _this.printLine.bind(_this, instance), _this.runCommand.bind(_this, instance)), res;\n        }, _this.runCommandOnActive = function (inputText) {\n          var force = 1 < arguments.length && void 0 !== arguments[1] && arguments[1],\n            data = _this.state.instances.find(function (i) {\n              return i.index === _this.state.activeTab;\n            });\n          data && null !== data.instance && _this.runCommand(data.instance, inputText, force);\n        }, _this.printToActive = function () {\n          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) args[_key2] = arguments[_key2];\n          var data = _this.state.instances.find(function (i) {\n            return i.index === _this.state.activeTab;\n          });\n          data && null !== data.instance && null === data.instance.state.controller && _this.printLine.apply(_this, [data.instance].concat(args));\n        }, _this.watchConsoleLogging = function () {\n          (0, _utils.handleLogging)('log', _this.printToActive), (0, _utils.handleLogging)('info', _this.printToActive);\n        }, _this.showHelp = function (args, printLine, runCommand, instance) {\n          var commands = _extends({}, _this.state.commands),\n            descriptions = _extends({}, _this.state.descriptions),\n            instanceData = _this.state.instances.find(function (i) {\n              return (0, _lodash2.default)(i.instance, instance);\n            });\n          instanceData && Object.values(instanceData.pluginInstances).forEach(function (i) {\n            commands = _extends({}, commands, i.commands), descriptions = _extends({}, descriptions, i.descriptions);\n          });\n          var options = Object.keys(commands),\n            _iteratorNormalCompletion = !0,\n            _didIteratorError = !1,\n            _iteratorError = void 0;\n          try {\n            for (var _step, option, _iterator = options[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = !0) option = _step.value, !1 !== descriptions[option] && printLine(option + ' - ' + descriptions[option]);\n          } catch (err) {\n            _didIteratorError = !0, _iteratorError = err;\n          } finally {\n            try {\n              !_iteratorNormalCompletion && _iterator.return && _iterator.return();\n            } finally {\n              if (_didIteratorError) throw _iteratorError;\n            }\n          }\n        }, _this.showMsg = function (args, printLine) {\n          _this.props.msg && 0 < _this.props.msg.length && printLine(_this.props.msg);\n        }, _this.pluginData = {}, _this.defaultCommands = {\n          show: _this.showMsg,\n          clear: {\n            method: _this.clearScreen,\n            needsInstance: !0\n          },\n          help: {\n            method: _this.showHelp,\n            needsInstance: !0\n          },\n          echo: function (input) {\n            return input.slice(1).join(' ');\n          },\n          \"edit-line\": {\n            method: _this.editLine,\n            needsInstance: !0,\n            options: [{\n              name: 'line',\n              description: 'the line you want to edit. -1 is the last line',\n              init: function (value) {\n                return parseInt(value, 10);\n              },\n              defaultValue: -1\n            }]\n          }\n        }, _this.defaultDesciptions = {\n          show: props.msg && 0 < props.msg.length && 'show the msg',\n          clear: 'clear the screen',\n          help: 'list all the commands',\n          echo: !1,\n          \"edit-line\": !1\n        }, _this.defaultShortcuts = {\n          \"win, linux, darwin\": {\n            \"alt + t\": _this.createTab\n          },\n          \"win, linux\": {\n            \"ctrl + l\": 'clear'\n          },\n          darwin: {\n            \"cmd + k\": 'clear'\n          }\n        }, _this.state = {\n          tabbed: !1,\n          commands: {},\n          descriptions: {},\n          show: 'closed' !== props.startState,\n          minimise: 'minimised' === props.startState,\n          maximise: 'maximised' === props.startState,\n          shortcuts: {},\n          activeTab: '',\n          tabs: [],\n          instances: []\n        }, _this;\n      }\n      return _inherits(Terminal, _Component), _createClass(Terminal, [{\n        key: 'getChildContext',\n        value: function () {\n          return {\n            instances: this.state.instances,\n            show: this.state.show,\n            minimise: this.state.minimise,\n            maximise: this.state.maximise,\n            activeTab: this.state.activeTab,\n            barShowing: !this.props.hideTopBar,\n            tabsShowing: this.props.allowTabs,\n            openWindow: this.setTrue('show'),\n            closeWindow: this.setFalse('show'),\n            minimiseWindow: this.setTrue('minimise'),\n            unminimiseWindow: this.setFalse('minimise'),\n            maximiseWindow: this.setTrue('maximise'),\n            unmaximiseWindow: this.setFalse('maximise'),\n            toggleShow: this.toggleState('show'),\n            toggleMaximise: this.toggleState('maximise'),\n            toggleMinimize: this.toggleState('minimise')\n          };\n        }\n      }, {\n        key: 'render',\n        value: function () {\n          var theme = {\n            color: this.props.color,\n            prompt: this.props.prompt,\n            barColor: this.props.barColor,\n            outputColor: this.props.outputColor,\n            backgroundColor: this.props.backgroundColor\n          };\n          return _react2.default.createElement(_styledComponents.ThemeProvider, {\n            theme: theme\n          }, _react2.default.createElement(_styledElements.Base, {\n            className: 'terminal-base',\n            fullscreen: this.state.maximise\n          }, this.getAppContent()));\n        }\n      }]), Terminal;\n    }(_react.Component), _class.displayName = 'Terminal', _class.version = '4.3.0', _class.propTypes = _types.TerminalPropTypes, _class.defaultProps = _types.TerminalDefaultProps, _class.childContextTypes = _types.TerminalContextTypes, _temp);\n  exports.default = Terminal;\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAoBA,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;IACvB,QAAQA,IAAR;MACE,KAAK,GAAL;QACE,OAAO,UAACC,CAAD,EAAIC,CAAJ;UAAA,OAAUC,SAASF,CAAT,EAAY,EAAZ,IAAkBE,SAASD,CAAT,EAAY,EAAZ,CAA5B;QAAA,CAAP;MACF,KAAK,GAAL;QACE,OAAO,UAACD,CAAD,EAAIC,CAAJ;UAAA,OAAUC,SAASF,CAAT,EAAY,EAAZ,IAAkBE,SAASD,CAAT,EAAY,EAAZ,CAA5B;QAAA,CAAP;MACF,KAAK,IAAL;QACE,OAAO,UAACD,CAAD,EAAIC,CAAJ;UAAA,OAAUC,SAASF,CAAT,EAAY,EAAZ,KAAmBE,SAASD,CAAT,EAAY,EAAZ,CAA7B;QAAA,CAAP;MACF,KAAK,IAAL;QACE,OAAO,UAACD,CAAD,EAAIC,CAAJ;UAAA,OAAUC,SAASF,CAAT,EAAY,EAAZ,KAAmBE,SAASD,CAAT,EAAY,EAAZ,CAA7B;QAAA,CAAP;MACF,KAAK,IAAL;QACE,OAAO,UAACD,CAAD,EAAIC,CAAJ;UAAA,OAAUD,MAAMC,CAAhB;QAAA,CAAP;MACF,KAAK,GAAL;MACA;QACE,OAAO,UAACD,CAAD,EAAIC,CAAJ;UAAA,OAAUD,MAAMC,CAAhB;QAAA,CAAP;IAbJ;EAeD;EAED,SAASE,cAAT,CAAwBC,EAAxB,EAA4B;IAO1B,IALIC,SAASC,aAAT,KAA2BF,EAK/B,IAJEA,GAAGG,KAAH,EAIF,EAAIH,GAAGI,iBAAP,EAA0B;MAGxB,IAAMC,MAAwB,CAAlB,MAAGC,KAAH,CAASC,MAArB;MAGAC,WAAW,YAAM;QACfR,GAAGI,iBAAH,CAAqBC,GAArB,EAA0BA,GAA1B,CACD;MAAA,CAFD,EAEG,CAFH,CAGD;IAAA,CATD,MAYEL,GAAGM,KAAH,GAAWN,GAAGM,KAEjB;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEKG,Q;MAWJ,kBAAYC,KAAZ,EAAmB;QAAAC;QAAA,gHACXD,KADW;QAAA,aAuFnBE,kBAvFmB,GAuFE,YAAM;UACzBC,MAAKC,WAAL,EADyB,EAEzBD,MAAKE,gBAAL,EAFyB,EAGzBF,MAAKG,eAAL,EAHyB,EAIzBH,MAAKI,YAAL,EAJyB,EAMzBJ,MAAKK,SAAL,IACD;QAAA,CA9FkB,QAiGnBC,iBAjGmB,GAiGC,YAAM;UACpBN,MAAKH,KAAL,CAAWU,mBADS,IAEtBP,MAAKO,mBAAL,EAEH;QAAA,CArGkB,QAwGnBF,SAxGmB,GAwGP,YAAmB;UAAA,IAAlBG,KAAkB;YAAAC,cACOT,MAAKH,KADZ;YACrBa,SADqB,eACrBA,SADqB;YACVC,YADU,eACVA,YADU;UAE7B,IAAIH,SAASE,SAAb,EAAwB;YAAA,IACdE,IADc,GACLZ,MAAKa,KADA,CACdD,IADc;cAEhBE,KAAK,4BAFW;YAItBF,KAAKG,IAAL,CACEC;cACEC,KAAKH,EADP;cAEEA,IAAIA,EAFN;cAGEI,QAAQP,YAHV;cAIEQ,cAAcnB,MAAKmB,YAJrB;cAKEC,iBAAiBpB,MAAKoB,eALxB;cAMEC,UAAU;gBAAA,kCAAIC,IAAJ,+CAAIA,IAAJ;gBAAA,OAAatB,MAAKuB,gBAAL,eAAsBT,EAAtB,SAA6BQ,IAA7B,EAAb;cAAA;YANZ,EADF,CAJsB,EAetBtB,MAAKwB,QAAL,CAAc;cAAEC,WAAWX,EAAb;cAAiBF;YAAjB,CAAd,CACD;UAAA;QACF,CA3HkB,QA8HnBc,SA9HmB,GA8HP,UAACC,KAAD,EAAW;UAAA,IACbf,IADa,GACJZ,MAAKa,KADD,CACbD,IADa;UAErBA,KAAKgB,MAAL,CAAYD,KAAZ,EAAmB,CAAnB,CAFqB,EAGrB3B,MAAKwB,QAAL,CAAc;YAAEZ;UAAF,CAAd,CACD;QAAA,CAlIkB,QAqInBiB,aArImB,GAqIH,YAAM;UAAA,kBACO7B,MAAKa,KADZ;YACZiB,IADY,eACZA,IADY;YACNC,QADM,eACNA,QADM;UAAA,OAEfD,IAFe,GAKhBC,QALgB,GAMX/B,MAAKgC,MAAL,EANW,GAQbhC,MAAKiC,UAAL,EARa,GAGXjC,MAAKkC,OAAL,EAMV;QAAA,CA9IkB,QAiJnBD,UAjJmB,GAiJN,YAAM;UAAA,mBAQbjC,MAAKH,KARQ;YAEfsC,KAFe,gBAEfA,KAFe;YAGfC,KAHe,gBAGfA,KAHe;YAIfC,WAJe,gBAIfA,WAJe;YAKfC,UALe,gBAKfA,UALe;YAMf5B,SANe,gBAMfA,SANe;YAOf6B,cAPe,gBAOfA,cAPe;YAAAC,eASWxC,MAAKa,KAThB;YASTY,SATS,gBASTA,SATS;YASEb,IATF,gBASEA,IATF;UAkBjB,OACEI;YAAKoB,oBATW;cAChBK,QAAQ,MADQ;cAEhBN,OAAOA,SAAS,OAFA;cAGhBO,WAAW,sBAHK;cAIhBC,YAAY,4BAJI;cAKhBC,UAAU;YALM,CASX,EAA0BR,KAA1B;UAAL,GACG,CAACE,UAAD,IACCtB;YAAKqB,aAAaA;UAAlB,GAAmCE,cAAnC,EAFJ,EAIG7B,aACCM;YACE6B,QAAQpB,SADV;YAEEqB,cAAc9C,MAAK8C,YAFrB;YAGEzC,WAAWL,MAAKK,SAHlB;YAIEqB,WAAW1B,MAAK0B;UAJlB,EALJ,EAYGd,IAZH,CAeH;QAAA,CAnLkB,QAsLnBoB,MAtLmB,GAsLV,YAAM;UAAA,mBACkChC,MAAKH,KADvC;YACLuC,KADK,gBACLA,KADK;YACEC,WADF,gBACEA,WADF;YACeE,cADf,gBACeA,cADf;UAGb,OACEvB;YAAkBoB,oBAAYA,KAAZ;UAAlB,GACEpB;YACEqB,aAAaA;UADf,GAEME,cAFN,EADF,CAOH;QAAA,CAjMkB,QAoMnBL,OApMmB,GAoMT;UAAA,OACRlB,0DACEA,0CACGhB,MAAKH,KAAL,CAAWkD,WADd,CADF,EAIE/B;YACEgC,KAAI,4OADN;YAEEC,OAAM,KAFR;YAGER,QAAO,KAHT;YAIES,KAAI,MAJN;YAKEC,YAAYnD,MAAKoD,WAAL,CAAiB,MAAjB,CALd;YAMEC,SAASrD,MAAKoD,WAAL,CAAiB,MAAjB;UANX,EAJF,EAYGpD,MAAKH,KAAL,CAAWyD,aAZd,CADQ;QAAA,CApMS,QAsNnBC,aAtNmB,GAsNH;UAAA,OAAQvD,MAAKwD,UAAL,CAAgBC,IAAhB,CAAR;QAAA,CAtNG,QAyNnBC,aAzNmB,GAyNH,UAACD,IAAD,EAAOE,IAAP,EAAgB;UAAE3D,MAAKwD,UAAL,CAAgBC,IAAhB,IAAwBE,IAAO;QAAA,CAzN9C,QA4NnBxD,eA5NmB,GA4ND,YAAM;UACtB,IAAIyD,4BACC5D,MAAK6D,kBADN,EAEC7D,MAAKH,KAAL,CAAW+D,YAFZ,CAAJ;UAIA,8BAAU5D,MAAKH,KAAL,CAAWiE,OAArB,EAA8B,UAACC,MAAD,EAAY;YACpCA,OAAOH,YAD6B,KAEtCA,4BACKA,YADL,EAEKG,OAAOH,YAFZ,CAFsC,CAOzC;UAAA,CAPD,CALsB,EAatB5D,MAAKwB,QAAL,CAAc;YAAEoC;UAAF,CAAd,CACD;QAAA,CA1OkB,QA6OnBxD,YA7OmB,GA6OJ,YAAM;UACnB,IAAI4D,YAAY,iCAAa,EAAb,EAAiBhE,MAAKiE,gBAAtB,CAAhB;UACAD,YAAY,iCAAaA,SAAb,EAAwBhE,MAAKH,KAAL,CAAWmE,SAAnC,CAFO,EAGnB,8BAAUhE,MAAKH,KAAL,CAAWiE,OAArB,EAA8B,UAACC,MAAD,EAAY;YACpCA,OAAOC,SAD6B,KAEtCA,YAAY,iCAAaA,SAAb,EAAwBD,OAAOC,SAA/B,CAF0B,CAIzC;UAAA,CAJD,CAHmB,EAQnBhE,MAAKwB,QAAL,CAAc;YAAEwC;UAAF,CAAd,CACD;QAAA,CAtPkB,QAyPnBE,eAzPmB,GAyPD,UAACC,QAAD,EAAWC,YAAX,EAA4B;UACV,IAA9B,cAASvD,KAAT,CAAewD,UADyB,IAE1CF,SAAS3C,QAAT,CAAkB;YAAE4C;UAAF,CAAlB,CAEH;QAAA,CA7PkB,QAgQnBE,eAhQmB,GAgQD,UAACH,QAAD,EAAWjD,MAAX,EAAsB;UACJ,IAA9B,cAASL,KAAT,CAAewD,UADmB,IAEpCF,SAAS3C,QAAT,CAAkB;YAAEN;UAAF,CAAlB,CAEH;QAAA,CApQkB,QAuQnB4B,YAvQmB,GAuQJ,UAACrB,SAAD,EAAe;UAC5BzB,MAAKwB,QAAL,CAAc;YAAEC;UAAF,CAAd,CACD;QAAA,CAzQkB,QA4QnB8C,QA5QmB,GA4QR;UAAA,OAAQ;YAAA,OAAMvE,MAAKwB,QAAL,qBAAiBiC,IAAjB,MAAN;UAAA,CAAR;QAAA,CA5QQ,QA+QnBe,OA/QmB,GA+QT;UAAA,OAAQ;YAAA,OAAMxE,MAAKwB,QAAL,qBAAiBiC,IAAjB,MAAN;UAAA,CAAR;QAAA,CA/QS,QAqRnBgB,mBArRmB,GAqRG,UAACN,QAAD,EAAWO,QAAX,EAAqBC,QAArB,EAAkC;UAAA,IAC9CC,OAD8C,GAClCT,SAAStD,KADyB,CAC9C+D,OAD8C;UAElDA,QAAQF,QAAR,CAFkD,KAGpDP,SAAS3C,QAAT,CAAkB;YAAEqD,gBAAgBH;UAAlB,CAAlB,CAHoD,EAIpDC,SAASlF,KAAT,GAAiBmF,QAAQF,QAAR,CAJmC,EAKpDxF,eAAeyF,QAAf,CALoD,CAOvD;QAAA,CA5RkB,QA+RnBG,YA/RmB,GA+RJ,UAAChG,IAAD,EAAOiG,GAAP,EAAe;UAC5B,IAAY,GAAR,QAAJ,EACE;UAEF,IAAI,CAAE,aAAaC,IAAb,CAAkBD,GAAlB,CAAN,EACE,MAAM,IAAIE,KAAJ,CAAU,2CAAV,CAAN,CADF,KAEO;YACL,IAAIC,QAAQH,IAAII,WAAJ,GAAkBC,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,CAAZ;YACgC,GAA5B,WAAMF,MAAMxF,MAAN,GAAe,CAArB,CAFC,KAGHwF,SAAS,GAHN;YAAA,KAKL,IAAMG,QAAQH,MAAMG,KAAN,CAAY,GAAZ,CALT,EAMiB,CAAf,SAAM3F,MANR,GAOH2F,MAAMtE,IAAN,CAAW,GAAX;YAEF,IAAMuE,YAAY1F,SAAS2F,OAAT,CAAiBF,KAAjB,CAAuB,GAAvB,CAAlB;cACMG,aAAaH,MAAMI,GAAN,CAAU,UAACC,GAAD,EAAM/D,KAAN;gBAAA,OAAgB9C,UAAUC,IAAV,EAAgBwG,UAAU3D,KAAV,CAAhB,EAAkC+D,GAAlC,CAAhB;cAAA,CAAV,CADnB;YAEA,OAAmC,CAA5B,cAAWC,OAAX,IACR;UAAA;QACF,CAlTkB,QAqTnBpE,gBArTmB,GAqTA,UAACI,KAAD,EAAQwC,QAAR,EAAqB;UAAA,IAC9ByB,SAD8B,GAChB5F,MAAKa,KADW,CAC9B+E,SAD8B;YAEhCC,kBAAkB,EAFc;YAGhCC,gBAAgB,EAHgB;YAKhCC,MAAMH,UAAUI,IAAV,CAAe;cAAA,OAAKC,EAAEtE,KAAF,KAAYA,KAAjB;YAAA,CAAf,CAL0B;UAOtC,8BAAU3B,MAAKH,KAAL,CAAWiE,OAArB,EAA8B,UAACoC,WAAD,EAAcC,MAAd,EAAyB;YACrD,IAAI;cACF,IAmBIpC,MAnBJ;gBAAMqC,MAAM;kBACVC,WAAWrG,MAAKqG,SAAL,CAAeC,IAAf,QAA0BnC,QAA1B,CADD;kBAEVoC,YAAYvG,MAAKuG,UAAL,CAAgBD,IAAhB,QAA2BnC,QAA3B,CAFF;kBAGVqC,YAAYxG,MAAKwG,UAAL,CAAgBF,IAAhB,QAA2BnC,QAA3B,CAHF;kBAIVsC,cAAczG,MAAKyG,YAAL,CAAkBH,IAAlB,QAA6BnC,QAA7B,CAJJ;kBAKVuC,mBAAmB1G,MAAK0G,iBAAL,CAAuBJ,IAAvB,QAAkCnC,QAAlC,CALT;kBAMVwC,YAAY3G,MAAK2G,UAAL,CAAgBL,IAAhB,QAA2BnC,QAA3B,CANF;kBAOVD,iBAAiBlE,MAAKkE,eAAL,CAAqBoC,IAArB,QAAgCnC,QAAhC,CAPP;kBAQVG,iBAAiBtE,MAAKsE,eAAL,CAAqBgC,IAArB,QAAgCnC,QAAhC,CARP;kBASVyC,iBAAiB5G,MAAK4G,eAAL,CAAqBN,IAArB,QAAgCnC,QAAhC,CATP;kBAUV0C,aAAa7G,MAAK8G,iBAAL,CAAuBR,IAAvB,QAAkCnC,QAAlC,CAVH;kBAWV4C,gBAAgB/G,MAAKgH,oBAAL,CAA0BV,IAA1B,QAAqCnC,QAArC,CAXN;kBAYV8C,SAAS;oBAAA,OAAMjH,MAAKuD,aAAL,CAAmB2C,YAAYgB,WAA/B,CAAN;kBAAA,CAZC;kBAaVC,SAAS;oBAAA,OAAQnH,MAAK0D,aAAL,CAAmBwC,YAAYgB,WAA/B,EAA4CvD,IAA5C,CAAR;kBAAA,CAbC;kBAcVmB,cAAc9E,MAAK8E,YAAL,CAAkBwB,IAAlB,OAdJ;kBAeVf,SAAS3F,SAAS2F,OAfR;kBAgBV6B;gBAhBU,CAAZ;cAoBIrB,GArBF,GAsBAA,IAAIF,eAAJ,CAAoBK,YAAYgB,WAAhC,EAA6CG,SAA7C,CAAuDjB,GAAvD,CAtBA,IAwBArC,SAAS,IAAImC,WAAJ,CAAgBE,GAAhB,EAAqBD,MAArB,CAxBT,EAyBAL,cAAcI,YAAYgB,WAA1B,iBACKnD,OAAOuD,gBAAP,EADL;gBAEEC,UAAU;kBAAA,OAAMrB,YAAYgB,WAAlB;gBAAA,CAFZ;gBAGEM,aAAa;kBAAA,OAAMtB,YAAYX,OAAlB;gBAAA;cAHf,EAzBA,GAgCFM,gBAAgBK,YAAYgB,WAA5B,IAA2CnD,MAC5C;YAAA,CAAC,QAAO0D,CAAP,EAAU;cACVC,QAAQC,KAAR,iCAA4CzB,YAAYgB,WAAxD,EAAuEO,CAAvE,CACD;YAAA;UACF,CArCD,CAPsC;UA8CtC,IAAM9D,OAAO;YACXhC,YADW;YAEXwC,kBAFW;YAGX2B,eAAeC,MAAMA,IAAID,aAAV,GAA0BA,aAH9B;YAIXD,iBAAiBE,MAAMA,IAAIF,eAAV,GAA4BA;UAJlC,CAAb;UAOA,IAAIE,GAAJ,EAAS;YACP,IAAM6B,YAAYhC,UAAUD,OAAV,CAAkBI,GAAlB,CAAlB;YACAH,UAAUgC,SAAV,IAAuBjE,IACxB;UAAA,CAHD,MAIEiC,UAAU7E,IAAV,CAAe4C,IAAf,CAJF;UASA,OAFA3D,MAAKwB,QAAL,CAAc;YAAEoE;UAAF,CAAd,CAEA,EAAO,YAAM;YACX,IAAMiC,QAAQ7H,MAAKa,KAAL,CAAW+E,SAAzB;YACA5F,MAAKwB,QAAL,CAAc;cACZoE,WAAWiC,MAAMC,MAAN,CAAa;gBAAA,OAAK,CAAC,sBAAQ7B,EAAE9B,QAAV,EAAoBA,QAApB,CAAN;cAAA,CAAb;YADC,CAAd,CAGD;UAAA,CACF;QAAA,CAzXkB,QA4XnB2C,iBA5XmB,GA4XC,UAAC3C,QAAD,EAAWE,UAAX,EAAuB0D,SAAvB,EAAkCC,eAAlC,EAAsD;UAAA,sBACvC7D,SAAStD,KAD8B;YAChEuD,YADgE,mBAChEA,YADgE;YAClDlD,MADkD,mBAClDA,MADkD;UAExEiD,SAAS3C,QAAT,CAAkB;YAChB6C,sBADgB;YAEhBnD,QAA6B,WAArB,WAAO6G,SAAP,GAAmC7G,MAAnC,GAA4C6G,SAFpC;YAGhB3D,cAAyC,WAA3B,WAAO4D,eAAP,GAAyC5D,YAAzC,GAAwD4D,eAHtD;YAIhBC,WAAW7D,YAJK;YAKhB8D,WAAWhH;UALK,CAAlB,CAOD;QAAA,CArYkB,QAwYnB8F,oBAxYmB,GAwYI,UAAC7C,QAAD,EAAc;UAAA,uBACFA,SAAStD,KADP;YAC3BoH,SAD2B,oBAC3BA,SAD2B;YAChBC,SADgB,oBAChBA,SADgB;UAEnC/D,SAAS3C,QAAT,CAAkB;YAAE6C,YAAY,IAAd;YAAoBD,cAAc6D,SAAlC;YAA6C/G,QAAQgH;UAArD,CAAlB,CACD;QAAA,CA3YkB,QA8YnB9E,WA9YmB,GA8YL;UAAA,OAAQ;YAAA,OAAMpD,MAAKwB,QAAL,qBAAiBiC,IAAjB,EAAwB,CAACzD,MAAKa,KAAL,CAAW4C,IAAX,CAAzB,EAAN;UAAA,CAAR;QAAA,CA9YK,QAiZnBvD,gBAjZmB,GAiZA,YAAM;UACvB,IAAIiI,wBACCnI,MAAKoI,eADN,EAECpI,MAAKH,KAAL,CAAWsI,QAFZ,CAAJ;UAKA,8BAAUnI,MAAKH,KAAL,CAAWiE,OAArB,EAA8B,UAACC,MAAD,EAAY;YACpCA,OAAOoE,QAD6B,KAEtCA,wBACKA,QADL,EAEKpE,OAAOoE,QAFZ,CAFsC,CAOzC;UAAA,CAPD,CANuB,EAevBnI,MAAKwB,QAAL,CAAc;YAAE2G,UAAU,gCAAYA,QAAZ;UAAZ,CAAd,CACD;QAAA,CAjakB,QAuanBE,iBAvamB,GAuaC,UAAC1D,QAAD,EAAc;UAAA,IACxBf,YADwB,GACP5D,MAAKa,KADE,CACxB+C,YADwB;YAE1B0E,cAAcC,OAAOC,IAAP,CAAY5E,YAAZ,EAA0BkE,MAA1B,CAAiC;cAAA,OAAO,oBAAa7G,GAAb,CAAP;YAAA,CAAjC,CAFY;YAG5BwH,UAAU,EAHkB;UAiBhC,OAZEA,OAYF,GAb4B,CAAxB,YAAShJ,KAAT,CAAeC,MAanB,GAZYgJ,2BAAiBC,aAAjB,CACRhE,SAASlF,KADD,EAER6I,WAFQ,EAGRG,OASJ,GAPYH,YAAYM,MAAZ,CAAmB,UAACC,IAAD,EAAOC,IAAP,EAAgB;YAI3C,OAHqC,CAAjC,UAAKnD,OAAL,CAAahB,SAASlF,KAAtB,CAGJ,IAFEoJ,KAAK9H,IAAL,CAAU;cAAEgI,QAAQD,IAAV;cAAgBE,QAAQ;YAAxB,CAAV,CAEF,EAAOH,IACR;UAAA,CALS,EAKP,EALO,CAOZ,EAAOJ,QAAQX,MAAR,CAAe;YAAA,OAAsB,CAAd,QAAKkB,MAAb;UAAA,CAAf,CACR;QAAA,CAzbkB,QA4bnBC,WA5bmB,GA4bL,UAAC3H,IAAD,EAAO+E,SAAP,EAAkBG,UAAlB,EAA8BrC,QAA9B,EAA2C;UACvDA,SAAS3C,QAAT,CAAkB;YAAE0H,SAAS;UAAX,CAAlB,CACD;QAAA,CA9bkB,QAicnBC,cAjcmB,GAicF,UAAChF,QAAD,EAAWlD,GAAX,EAAgBwG,CAAhB,EAAsB;UAAA,IAC7BpD,UAD6B,GACdF,SAAStD,KADK,CAC7BwD,UAD6B;YAEjC+E,OAAO,EAF0B;UAGrC,IAAmB,IAAf,eAAJ,EACM/E,WAAWL,SADjB,KAEIoF,OAAO,iCAAaA,IAAb,EAAmB/E,WAAWL,SAA9B,CAFX,OAIO;YACL,IAAMqF,eAAerJ,MAAKa,KAAL,CAAW+E,SAAX,CAAqBI,IAArB,CAA0B;cAAA,OAAK,sBAAQC,EAAE9B,QAAV,EAAoBA,QAApB,CAAL;YAAA,CAA1B,CAArB;YACAiF,OAAOpJ,MAAKa,KAAL,CAAWmD,SAFb,EAGDqF,YAHC,IAIHd,OAAOe,MAAP,CAAcD,aAAaxD,eAA3B,EAA4C0D,OAA5C,CAAoD,UAACtD,CAAD,EAAO;cACzDmD,OAAO,iCAAaA,IAAb,EAAmBnD,EAAEjC,SAArB,CACR;YAAA,CAFD,CAIH;UAAA;UAED,IAAMA,YAAYuE,OAAOC,IAAP,CAAYY,IAAZ,CAAlB;UACA,IAAuB,CAAnB,aAAU1J,MAAd,EAA0B;YAAA,IAChB8J,SADgB,GACFrF,SAAStD,KADP,CAChB2I,SADgB;cAEpBC,SAASxI,GAFW;YAGZ,MAAR,QAHoB,KAKtBwI,SAAgB,QAAP,yBAAkB,KAAlB,GAAiC,KAAP,yBAAe,KAAf,GAAuB,MALpC,GAOxBD,UAAUzI,IAAV,CAAe0I,MAAf,CAPwB;YAQxB,IAAMjK,MAAMgK,UAAU9J,MAAtB;cAEMgK,UAAU1F,UACbyB,GADa,CACT,UAACkE,GAAD,EAAM1D,CAAN;gBAAA,OAAY,CAAC0D,IAAIvE,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,EAAuBC,KAAvB,CAA6B,GAA7B,CAAD,EAAoCY,CAApC,CAAZ;cAAA,CADS,EAEb6B,MAFa,CAEN;gBAAA,OAAO6B,IAAI,CAAJ,EAAOjK,MAAP,IAAiB8J,UAAU9J,MAAlC;cAAA,CAFM,EAGboI,MAHa,CAGN;gBAAA,OAAO,sBAAQ6B,IAAI,CAAJ,EAAOC,KAAP,CAAa,CAAb,EAAgBpK,GAAhB,CAAR,EAA8BgK,SAA9B,CAAP;cAAA,CAHM,CAFhB;YAOA,MAAqB,CAAjB,WAAQ9J,MAAZ,GAa8B,CAAnB,aAAUA,MAbrB,IAcEyE,SAAS3C,QAAT,CAAkB;cAAEgI,WAAW;YAAb,CAAlB,CAdF,MACE,IAAuB,CAAnB,aAAQ9J,MAAR,IAAwBgK,QAAQ,CAAR,EAAW,CAAX,EAAchK,MAAd,KAAyBF,GAArD,EAA0D;cACxD,IAAMqK,WAAW7F,UAAU0F,QAAQ,CAAR,EAAW,CAAX,CAAV,CAAjB;gBACMI,SAASV,KAAKS,QAAL,CADf;cAEsB,QAAlB,WAAOC,MAH6C,GAItD9J,MAAKwG,UAAL,CAAgBrC,QAAhB,EAA0BiF,KAAKS,QAAL,CAA1B,CAJsD,GAK3B,UAAlB,WAAOC,MALsC,KAMtDrC,EAAEsC,cAAF,EANsD,EAOtDtC,EAAEuC,eAAF,EAPsD,EAQtDF,QARsD,GAUxD3F,SAAS3C,QAAT,CAAkB;gBAAEgI,WAAW;cAAb,CAAlB,CACD;YAAA;UAIJ;QACF,CAnfkB,QAsfnBS,QAtfmB,GAsfR,UAAC3I,IAAD,EAAO+E,SAAP,EAAkBG,UAAlB,EAA8BrC,QAA9B,EAA2C;UAAA,IAC5C+E,OAD4C,GAChC/E,SAAStD,KADuB,CAC5CqI,OAD4C;YAEhDvH,QAAQL,KAAK4I,IAFmC;UAGxC,CAAR,QAHgD,KAIlDvI,QAA2B,CAAnB,aAAQjC,MAAR,GAAuB,CAAvB,GAA2BwJ,QAAQxJ,MAAR,GAAiBiC,KAJF,GAMpDuH,QAAQvH,KAAR,IAAiBL,KAAK6I,CAAL,CAAOC,IAAP,CAAY,GAAZ,CANmC,EAOpDjG,SAAS3C,QAAT,CAAkB;YAAE0H;UAAF,CAAlB,CACD;QAAA,CA9fkB,QAigBnB/H,YAjgBmB,GAigBJ,UAACgD,QAAD,EAAWsD,CAAX,EAAiB;UAAA,uBAG1BtD,SAAStD,KAHiB;YAE5BwJ,KAF4B,oBAE5BA,KAF4B;YAErBjG,YAFqB,oBAErBA,YAFqB;YAEPlD,MAFO,oBAEPA,MAFO;YAEC0D,OAFD,oBAECA,OAFD;YAEUP,UAFV,oBAEUA,UAFV;YAIxBiG,gBAA+B,IAAf,eAAhB,IAAuCjG,WAAWO,OAAX,MAJf;UAK9B,IAAc,OAAV,OAAE3D,GAAF,IAAqB,CAACwG,EAAE8C,QAA5B,EAAsC;YACH,WAA7B,WAAO9C,EAAE+C,eADuB,IAElCxK,MAAKqG,SAAL,CAAeC,IAAf,QAA0BnC,QAA1B,OACKC,YADL,GACoBlD,MADpB,SAC8BuG,EAAEsB,MAAF,CAAStJ,KADvC,KAFkC,EAQpC4K,MAAMtJ,IAAN,CAAW0G,EAAEsB,MAAF,CAAStJ,KAApB,CARoC;YASpC,IAAMgL,MAAMzK,MAAKwG,UAAL,CAAgBrC,QAAhB,OAA6BkG,MAAMD,IAAN,CAAW,IAAX,CAA7B,CAAZ;YAEmB,WAAf,WAAOK,GAXyB,IAYlCzK,MAAKqG,SAAL,CAAeC,IAAf,QAA0BnC,QAA1B,EAAoCsG,GAApC,CAZkC;YAepC,IAAMC,0CAAiB9F,OAAjB,IAA0B6C,EAAEsB,MAAF,CAAStJ,KAAnC,EAAN;cACMkL,eAAeL,gBAAgB;gBACnC1F,SAAS8F,UAD0B;gBAEnC7F,gBAAgB6F,WAAWhL;cAFQ,CAAhB,GAGjB,EAJJ;YAKAyE,SAAS3C,QAAT;cACE6I,OAAO;YADT,GAEKM,YAFL,EApBoC,EAwBpClD,EAAEsB,MAAF,CAAStJ,KAAT,GAAiB,EAClB;UAAA,CAzBD,MAyBO,IAAc,OAAV,OAAEwB,GAAF,IAAqBwG,EAAE8C,QAA3B,EAAqC;YAC1CvK,MAAKqG,SAAL,CAAeC,IAAf,QAA0BnC,QAA1B,OACKC,YADL,GACoBlD,MADpB,SAC8BuG,EAAEsB,MAAF,CAAStJ,KADvC,KAD0C;YAK1C,IAAMiL,2CAAiB9F,OAAjB,IAA0B6C,EAAEsB,MAAF,CAAStJ,KAAnC,EAAN;cACMkL,gBAAeL,gBAAgB;gBACnC1F,SAAS8F,WAD0B;gBAEnC7F,gBAAgB6F,YAAWhL;cAFQ,CAAhB,GAGjB,EAJJ;YAKAyE,SAAS3C,QAAT;cACE6I,oCAAWA,KAAX,IAAkB5C,EAAEsB,MAAF,CAAStJ,KAA3B;YADF,GAEKkL,aAFL,EAV0C,EAc1ClD,EAAEsB,MAAF,CAAStJ,KAAT,GAAiB,EAClB;UAAA;UACqC,UAAlC,WAAOO,MAAKH,KAAL,CAAW+K,WA9CQ,IA+C5B5K,MAAKH,KAAL,CAAW+K,WAAX,CAAuBnD,CAAvB,CAEH;QAAA,CAljBkB,QAyjBnBrG,eAzjBmB,GAyjBD,UAAC+C,QAAD,EAAWsD,CAAX,EAAc9C,QAAd,EAA2B;UAAA,eAC3B,uBAAQ8C,CAAR,CAD2B;YACnCxG,GADmC,YACnCA,GADmC;YAAA4J,mBAEO1G,SAAStD,KAFhB;YAEnCgE,cAFmC,oBAEnCA,cAFmC;YAEnB2E,SAFmB,oBAEnBA,SAFmB;YAERnF,UAFQ,oBAERA,UAFQ;UAG3C,IAAyB,CAArB,eAAU3E,MAAV,IAA+C,CAArB,eAAUA,MAAxC,EACE,IAAmB,IAAf,eAAJ,EACM2E,WAAWlB,UADjB,IAEIkB,WAAWlB,UAAX,CAAsBlC,GAAtB,CAFJ,MAKE,QAAQA,GAAR;YACE,KAAK,IAAL;cACEjB,MAAKyE,mBAAL,CAAyBN,QAAzB,EAAmCU,iBAAiB,CAApD,EAAuDF,QAAvD,CADF,EAEM3E,MAAKa,KAAL,CAAWiK,MAFjB,IAGI9K,MAAKwB,QAAL,CAAc;gBAAEsJ;cAAF,CAAd,CAHJ;cAKE;YACF,KAAK,MAAL;cACE9K,MAAKyE,mBAAL,CAAyBN,QAAzB,EAAmCU,iBAAiB,CAApD,EAAuDF,QAAvD,CADF,EAEM3E,MAAKa,KAAL,CAAWiK,MAFjB,IAGI9K,MAAKwB,QAAL,CAAc;gBAAEsJ;cAAF,CAAd,CAHJ;cAKE;YACF,KAAK,KAAL;cAEE,IADArD,EAAEsC,cAAF,EACA,EAAuB,EAAnB,cAAStK,KAAT,IAAyB,aAAKoB,KAAL,CAAWiK,MAAxC,EAAyD;gBACvD,IAAMC,WAAW/K,MAAKqI,iBAAL,CAAuB1D,QAAvB,CAAjB;gBACA3E,MAAKqG,SAAL,CAAelC,QAAf,OAA4BA,SAAStD,KAAT,CAAeuD,YAA3C,GAA0DD,SAAStD,KAAT,CAAeK,MAAzE,SAAmFyD,SAASlF,KAA5F,KAFuD,EAGvDO,MAAKqG,SAAL,CACElC,QADF,EAGInD,4CACG+J,SAASjD,MAAT,CAAgB;kBAAA,OAAwB,WAAhB,WAAOgB,IAAf;gBAAA,CAAhB,EAAqDrD,GAArD,CAAyD,UAACqD,IAAD,EAAU;kBACpE,IAAMkC,SAAS;oBACbC,aAAa,CADA;oBAEbhI,OAAO,iBAFM;oBAGbiI,SAAS;kBAHI,CAAf;kBAQA,OAHsB,CAAlB,YAASxL,MAGb,KAFEsL,OAAOG,YAAP,GAAsB,CAExB,GACEnK;oBACEoB,OAAO4I,MADT;oBAEE/J,KAAQ6H,KAAKC,MAAb,SAAuBD,KAAKE;kBAF9B,GAIGF,KAAKC,MAJR,CAOH;gBAAA,CAjBE,CADH,CAHJ,KAHuD,EA6BvD/I,MAAKwB,QAAL,CAAc;kBAAEsJ;gBAAF,CAAd,CACD;cAAA,CA9BD,MA+BE9K,MAAKwB,QAAL,CAAc;gBAAEsJ;cAAF,CAAd,CA/BF;cAiCA;YACF;cACM9K,MAAKa,KAAL,CAAWiK,MADjB,IAEI9K,MAAKwB,QAAL,CAAc;gBAAEsJ;cAAF,CAAd,CAFJ;UAjDF;UAyDJ9K,MAAKmJ,cAAL,CAAoBhF,QAApB,EAA8BlD,GAA9B,EAAmCwG,CAAnC,CACD;QAAA,CA5nBkB,QA+nBnBxH,WA/nBmB,GA+nBL,YAAM;UAClB,IAAMuD,aAAa,EAAnB;UACA,8BAAUxD,MAAKH,KAAL,CAAWiE,OAArB,EAA8B,UAACC,MAAD,EAAY;YACxC,IAAI;cACFP,WAAWO,OAAOmD,WAAlB,IAAiCnD,OAAOqH,WACzC;YAAA,CAAC,QAAO3D,CAAP,EAAU;cACVC,QAAQC,KAAR,2BAAsC5D,OAAOmD,WAA7C,EAA4DO,CAA5D,CACD;YAAA;UACF,CAND,CAFkB,EASlBzH,MAAKwD,UAAL,GAAkBA,UACnB;QAAA,CAzoBkB,QA4oBnBoD,eA5oBmB,GA4oBD,UAACzC,QAAD,EAAWV,IAAX,EAAiB4H,MAAjB,EAA4B;UAC5C,IAAMhC,eAAerJ,MAAKa,KAAL,CAAW+E,SAAX,CAAqBI,IAArB,CAA0B;YAAA,OAAK,sBAAQC,EAAE9B,QAAV,EAAoBA,QAApB,CAAL;UAAA,CAA1B,CAArB;UACA,IAAIkF,YAAJ,EACE,IAAIA,aAAavD,aAAb,CAA2BrC,IAA3B,CAAJ,EAAsC;YACpC,IAAI4F,aAAavD,aAAb,CAA2BrC,IAA3B,EAAiC4H,MAAjC,CAAJ,EACE,OAAOhC,aAAavD,aAAb,CAA2BrC,IAA3B,EAAiC4H,MAAjC,CAAP;YAEF,MAAM,IAAIpG,KAAJ,0BAAiCoG,MAAjC,wCAA0E5H,IAA1E,CACP;UAAA,CALD,MAME,MAAM,IAAIwB,KAAJ,0BAAiCxB,IAAjC,0BAAN;UAGJ,OAAO,IACR;QAAA,CAzpBkB,QA4pBnBgD,YA5pBmB,GA4pBJ,UAACtC,QAAD,EAAW3D,KAAX,EAAqB;UACb,WAAjB,WAAOA,KADuB,IAEhC2D,SAAS3C,QAAT,CAAkB;YAAE8J,WAAW9K;UAAb,CAAlB,CAEH;QAAA,CAhqBkB,QAmqBnBkG,iBAnqBmB,GAmqBC,UAACvC,QAAD,EAAWoH,GAAX,EAAmB;UAClB,QAAf,WAAOA,GAD0B,IAEnCpH,SAASuC,iBAAT,CAA2B6E,GAA3B,CAEH;QAAA,CAvqBkB,QA0qBnB5E,UA1qBmB,GA0qBN,UAACxC,QAAD,EAAc;UACN,QAAf,WAAOoH,GADc,IAEvBpH,SAASwC,UAAT,EAEH;QAAA,CA9qBkB,QAirBnBN,SAjrBmB,GAirBP,UAAClC,QAAD,EAAWqH,GAAX,EAA+B;UAAA,IAAfC,GAAe;YACrCC,UADqC;UAEzC,IAAID,GAAJ,EAAS;YACP,IAAMpC,eAAerJ,MAAKa,KAAL,CAAW+E,SAAX,CAAqBI,IAArB,CAA0B;cAAA,OAAK,sBAAQC,EAAE9B,QAAV,EAAoBA,QAApB,CAAL;YAAA,CAA1B,CAArB;YACA,IAAIkF,YAAJ,EAEE,SADMvF,UAAUuF,aAAaxD,eAC7B,EAASI,IAAI,CAAb,EAAgBA,IAAInC,QAAQpE,MAA5B,EAAoCuG,KAAK,CAAzC,EACE,IAAI;cACFyF,QAAQ5H,QAAQmC,CAAR,EAAW0F,UAAX,CAAsBH,GAAtB,CACT;YAAA,CAAC,QAAO/D,CAAP,EAAU,CAEX;UAGN;UAED,IAAI,YAAJ,EAAqB;YAAA,IACXyB,OADW,GACC/E,SAAStD,KADV,CACXqI,OADW;YAEnBA,QAAQnI,IAAR,CAAayK,GAAb,CAFmB,EAGnBrH,SAAS3C,QAAT,CAAkB;cAAE0H;YAAF,CAAlB,CACD;UAAA;QACF,CAtsBkB,QAysBnB3C,UAzsBmB,GAysBN,UAACpC,QAAD,EAA+B;UAAA,IAApByH,UAAoB,oEAAP,CAAC,CAAM;YAClC1C,OADkC,GACtB/E,SAAStD,KADa,CAClCqI,OADkC;UAE1CA,QAAQtH,MAAR,CAAegK,UAAf,EAA2B,CAA3B,CAF0C,EAG1CzH,SAAS3C,QAAT,CAAkB;YAAE0H;UAAF,CAAlB,CACD;QAAA,CA7sBkB,QAgtBnB1C,UAhtBmB,GAgtBN,UAACrC,QAAD,EAAW0H,SAAX,EAAwC;UAAA,IAAlBrL,KAAkB;YAC7CsL,aAAaD,UAAUxG,KAAV,CAAgB,GAAhB,CADgC;YAE7CgF,QAAQyB,WAAW,CAAX,CAFqC;YAI3CzH,UAJ2C,GAI5BF,SAAStD,KAJmB,CAI3CwD,UAJ2C;YAK/C8D,WAAW,EALoC;UAMnD,IAAI,CAAC3H,KAAD,IAAyB,IAAf,eAAd,EAAmC;YACjC,IAAI6D,WAAWmC,UAAf,EACE,OAAOnC,WAAWmC,UAAX,CAAsBqF,SAAtB,CAAP;YACSxH,WAAW8D,QAHW,KAI/BA,wBAAgB,gCAAY9D,WAAW8D,QAAvB,CAAhB,CAJ+B,CAMlC;UAAA,CAND,MAMO;YACL,IAAMkB,eAAerJ,MAAKa,KAAL,CAAW+E,SAAX,CAAqBI,IAArB,CAA0B;cAAA,OAAK,sBAAQC,EAAE9B,QAAV,EAAoBA,QAApB,CAAL;YAAA,CAA1B,CAArB;YACAgE,wBAAgBnI,MAAKa,KAAL,CAAWsH,QAA3B,CAFK,EAGDkB,YAHC,IAIHd,OAAOe,MAAP,CAAcD,aAAaxD,eAA3B,EAA4C0D,OAA5C,CAAoD,UAACtD,CAAD,EAAO;cACzDkC,wBACKA,QADL,EAEK,gCAAYlC,EAAEkC,QAAd,CAFL,CAID;YAAA,CALD,CAOH;UAAA;UAED,IACIsC,GADJ;YAAMsB,UAAU5D,SAASkC,KAAT,CAAhB;UAGA,IAAc,EAAV,UAAJ,QAEO,IAAI,kBAAJ,EACwC,UAAzC,WAAOrK,MAAKH,KAAL,CAAWmM,kBADjB,GAEHvB,MAAMzK,MAAKH,KAAL,CAAWmM,kBAAX,CACJF,UADI,EAEJ9L,MAAKqG,SAAL,CAAeC,IAAf,QAA0BnC,QAA1B,CAFI,EAGJnE,MAAKwG,UAAL,CAAgBF,IAAhB,QAA2BnC,QAA3B,CAHI,CAFH,GAQHnE,MAAKqG,SAAL,CAAeC,IAAf,QAA0BnC,QAA1B,aAA6CkG,KAA7C,yBARG,MAUA;YACL,IAAM4B,aAAaF,QAAQG,KAAR,CAtCRJ,UAsCQ,CAAnB;cACMK,6BAAcF,UAAd,yBAAcA,UAAd,CADN;YAEa,QAAT,cAA+B,QAAT,aAAsBA,WAAWG,IAAvD,CAHC,KAIH3B,MAAMsB,QAAQV,MAAR,CACJY,UADI,EAEJjM,MAAKqG,SAAL,CAAeC,IAAf,QAA0BnC,QAA1B,CAFI,EAGJnE,MAAKwG,UAAL,CAAgBF,IAAhB,QAA2BnC,QAA3B,CAHI,EAIJ,eAAQkI,aAAR,GAAiClI,QAAjC,SAJI,CAJH,CAWN;UAAA;UAQD,OAPwC,UAApC,WAAOnE,MAAKH,KAAL,CAAWyM,aAOtB,IANEtM,MAAKH,KAAL,CAAWyM,aAAX,CACER,UADF,EAEE9L,MAAKqG,SAAL,CAAeC,IAAf,QAA0BnC,QAA1B,CAFF,EAGEnE,MAAKwG,UAAL,CAAgBF,IAAhB,QAA2BnC,QAA3B,CAHF,CAMF,EAAOsG,GACR;QAAA,CA5wBkB,QA+wBnB8B,kBA/wBmB,GA+wBE,UAACV,SAAD,EAA8B;UAAA,IAAlBrL,KAAkB;YAC3CmD,OAAO3D,MAAKa,KAAL,CAAW+E,SAAX,CAAqBI,IAArB,CAA0B;cAAA,OAAKC,EAAEtE,KAAF,KAAY3B,MAAKa,KAAL,CAAWY,SAA5B;YAAA,CAA1B,CADoC;UAE7CkC,QAA0B,IAAlB,UAAKQ,QAFgC,IAG/CnE,MAAKwG,UAAL,CAAgB7C,KAAKQ,QAArB,EAA+B0H,SAA/B,EAA0CrL,KAA1C,CAEH;QAAA,CApxBkB,QAuxBnBgM,aAvxBmB,GAuxBH,YAAa;UAAA,mCAATlL,IAAS,oDAATA,IAAS;UAC3B,IAAMqC,OAAO3D,MAAKa,KAAL,CAAW+E,SAAX,CAAqBI,IAArB,CAA0B;YAAA,OAAKC,EAAEtE,KAAF,KAAY3B,MAAKa,KAAL,CAAWY,SAA5B;UAAA,CAA1B,CAAb;UACIkC,QAA0B,IAAlB,UAAKQ,QAAb,IAAqE,IAAnC,UAAKA,QAAL,CAActD,KAAd,CAAoBwD,UAF/B,IAGzBrE,MAAKqG,SAAL,eAAe1C,KAAKQ,QAApB,SAAiC7C,IAAjC,EAEH;QAAA,CA5xBkB,QA+xBnBf,mBA/xBmB,GA+xBG,YAAM;UAC1B,0BAAc,KAAd,EAAqBP,MAAKwM,aAA1B,CAD0B,EAE1B,0BAAc,MAAd,EAAsBxM,MAAKwM,aAA3B,CACD;QAAA,CAlyBkB,QAqyBnBC,QAryBmB,GAqyBR,UAACnL,IAAD,EAAO+E,SAAP,EAAkBG,UAAlB,EAA8BrC,QAA9B,EAA2C;UACpD,IAAIgE,wBAAgBnI,MAAKa,KAAL,CAAWsH,QAA3B,CAAJ;YACIvE,4BAAoB5D,MAAKa,KAAL,CAAW+C,YAA/B,CADJ;YAEMyF,eAAerJ,MAAKa,KAAL,CAAW+E,SAAX,CAAqBI,IAArB,CAA0B;cAAA,OAAK,sBAAQC,EAAE9B,QAAV,EAAoBA,QAApB,CAAL;YAAA,CAA1B,CAFrB;UAGIkF,YAJgD,IAKlDd,OAAOe,MAAP,CAAcD,aAAaxD,eAA3B,EAA4C0D,OAA5C,CAAoD,UAACtD,CAAD,EAAO;YACzDkC,wBACKA,QADL,EAEKlC,EAAEkC,QAFP,CADyD,EAKzDvE,4BACKA,YADL,EAEKqC,EAAErC,YAFP,CAID;UAAA,CATD,CALkD;UAgBpD,IAAM8F,UAAUnB,OAAOC,IAAP,CAAYL,QAAZ,CAAhB;YAAAuE;YAAAC;YAAAC;UAhBoD;YAkBpD,gBAAWC,MAAX,cAAqBnD,OAArB,qHAAWmD,MAAX,gBAEM,oBAAaA,MAAb,CAFN,IAGIxG,UAAawG,MAAb,WAAyBjJ,aAAaiJ,MAAb,CAAzB,CArBgD;UAAA;YAAAF;UAAA;YAAA;cAAA;YAAA;cAAA;YAAA;UAAA;QAwBrD,CA7zBkB,QAg0BnBG,OAh0BmB,GAg0BT,UAACxL,IAAD,EAAO+E,SAAP,EAAqB;UACzBrG,MAAKH,KAAL,CAAWkN,GAAX,IAA0C,CAAxB,SAAKlN,KAAL,CAAWkN,GAAX,CAAerN,MADR,IAE3B2G,UAAUrG,MAAKH,KAAL,CAAWkN,GAArB,CAEH;QAAA,CAp0BkB,EAGjB/M,MAAKwD,UAAL,GAAkB,EAHD,EAKjBxD,MAAKoI,eAAL,GAAuB;UAErBtG,MAAM9B,MAAK8M,OAFU;UAGrBE,OAAO;YACL3B,QAAQrL,MAAKiJ,WADR;YAELoD;UAFK,CAHc;UAOrBD,MAAM;YACJf,QAAQrL,MAAKyM,QADT;YAEJJ;UAFI,CAPe;UAWrBY,MAAM;YAAA,OAAS5C,MAAMT,KAAN,CAAY,CAAZ,EAAeQ,IAAf,CAAoB,GAApB,CAAT;UAAA,CAXe;UAYrB,aAAa;YACXiB,QAAQrL,MAAKiK,QADF;YAEXoC,iBAFW;YAGX3C,SAAS,CACP;cACEjG,MAAM,MADR;cAEEyJ,aAAa,gDAFf;cAGEC,MAAM;gBAAA,OAASlO,SAASQ,KAAT,EAAgB,EAAhB,CAAT;cAAA,CAHR;cAIE2N,cAAc,CAAC;YAJjB,CADO;UAHE;QAZQ,CALN,EA+BjBpN,MAAK6D,kBAAL,GAA0B;UACxB/B,MAAOjC,MAAMkN,GAAN,IAAgC,CAAnB,SAAMA,GAAN,CAAUrN,MAA9B,IAA4C,cADpB;UAExBsN,OAAO,kBAFiB;UAGxBZ,MAAM,uBAHkB;UAIxBa,QAJwB;UAKxB;QALwB,CA/BT,EAuCjBjN,MAAKiE,gBAAL,GAAwB;UACtB,sBAAsB;YACpB,WAAWjE,MAAKK;UADI,CADA;UAItB,cAAc;YACZ,YAAY;UADA,CAJQ;UAOtBgN,QAAQ;YACN,WAAW;UADL;QAPc,CAvCP,EAmDjBrN,MAAKa,KAAL,GAAa;UACXiK,UADW;UAEX3C,UAAU,EAFC;UAGXvE,cAAc,EAHH;UAIX9B,MAA2B,QAArB,WAAMwL,UAJD;UAKXvL,UAA+B,WAArB,WAAMuL,UALL;UAMXC,UAA+B,WAArB,WAAMD,UANL;UAOXtJ,WAAW,EAPA;UAQXvC,WAAW,EARA;UASXb,MAAM,EATK;UAUXgF,WAAW;QAVA,CAnDI,OA+DlB;MAAA;;;2BAEiB;UAChB,OAAO;YACLA,WAAW,KAAK/E,KAAL,CAAW+E,SADjB;YAEL9D,MAAM,KAAKjB,KAAL,CAAWiB,IAFZ;YAGLC,UAAU,KAAKlB,KAAL,CAAWkB,QAHhB;YAILwL,UAAU,KAAK1M,KAAL,CAAW0M,QAJhB;YAKL9L,WAAW,KAAKZ,KAAL,CAAWY,SALjB;YAML+L,YAAY,CAAC,KAAK3N,KAAL,CAAWyC,UANnB;YAOLmL,aAAa,KAAK5N,KAAL,CAAWa,SAPnB;YAQLgN,YAAY,KAAKlJ,OAAL,CAAa,MAAb,CARP;YASLmJ,aAAa,KAAKpJ,QAAL,CAAc,MAAd,CATR;YAULqJ,gBAAgB,KAAKpJ,OAAL,CAAa,UAAb,CAVX;YAWLqJ,kBAAkB,KAAKtJ,QAAL,CAAc,UAAd,CAXb;YAYLuJ,gBAAgB,KAAKtJ,OAAL,CAAa,UAAb,CAZX;YAaLuJ,kBAAkB,KAAKxJ,QAAL,CAAc,UAAd,CAbb;YAcLyJ,YAAY,KAAK5K,WAAL,CAAiB,MAAjB,CAdP;YAeL6K,gBAAgB,KAAK7K,WAAL,CAAiB,UAAjB,CAfX;YAgBL8K,gBAAgB,KAAK9K,WAAL,CAAiB,UAAjB;UAhBX,CAkBR;QAAA;;;2BAkvBQ;UACP,IAAM+K,QAAQ;YACZhM,OAAO,KAAKtC,KAAL,CAAWsC,KADN;YAEZjB,QAAQ,KAAKrB,KAAL,CAAWqB,MAFP;YAGZkN,UAAU,KAAKvO,KAAL,CAAWuO,QAHT;YAIZC,aAAa,KAAKxO,KAAL,CAAWwO,WAJZ;YAKZC,iBAAiB,KAAKzO,KAAL,CAAWyO;UALhB,CAAd;UAQA,OACEtN;YAAemN,OAAOA;UAAtB,GACEnN;YACEuN,WAAU,eADZ;YAEEC,YAAY,KAAK3N,KAAL,CAAW0M;UAFzB,GAIG,KAAK1L,aAAL,EAJH,CADF,CASH;QAAA;;gCAn2BMqF,W,GAAc,U,SAEd3B,O,GAAU,O,SAEVkJ,S,oCAEAC,Y,uCAEAC,iB;oBA81BM/O,Q","names":["compLogic","comp","a","b","parseInt","putCursorAtEnd","el","document","activeElement","focus","setSelectionRange","len","value","length","setTimeout","Terminal","props","_classCallCheck","componentWillMount","_this","loadPlugins","assembleCommands","setDescriptions","setShortcuts","createTab","componentDidMount","watchConsoleLogging","force","_this$props","allowTabs","promptSymbol","tabs","state","id","push","_react2","key","prompt","handleChange","handlerKeyPress","register","args","registerInstance","setState","activeTab","removeTab","index","splice","getAppContent","show","minimise","getBar","getContent","getNote","color","style","showActions","hideTopBar","actionHandlers","_this$state2","height","animation","fontFamily","fontSize","active","setActiveTab","closedTitle","src","width","alt","onKeyPress","toggleState","onClick","closedMessage","getPluginData","pluginData","name","setPluginData","data","descriptions","defaultDesciptions","plugins","plugin","shortcuts","defaultShortcuts","setPromptPrefix","instance","promptPrefix","controller","setPromptSymbol","setFalse","setTrue","setValueWithHistory","position","inputRef","history","historyCounter","checkVersion","ver","test","Error","clean","toLowerCase","replace","split","realSplit","version","checkBools","map","val","indexOf","instances","pluginInstances","pluginMethods","old","find","i","PluginClass","config","api","printLine","bind","removeLine","runCommand","setCanScroll","setScrollPosition","focusInput","getPluginMethod","takeControl","pluginTakeControl","releaseControl","pluginReleaseControl","getData","displayName","setData","os","updateApi","getPublicMethods","_getName","_getVersion","e","console","error","realIndex","insts","filter","newPrompt","newPromptPrefix","oldPrefix","oldPrompt","commands","defaultCommands","autocompleteValue","keysToCheck","Object","keys","ratings","_stringSimilarity2","findBestMatch","reduce","full","item","target","rating","clearScreen","summary","checkShortcuts","cuts","instanceData","values","forEach","keyInputs","modKey","options","cut","slice","shortcut","action","preventDefault","stopPropagation","editLine","line","_","join","input","saveToHistory","shiftKey","dontShowCommand","res","newHistory","historyProps","afterChange","_instance$state4","tabbed","contents","styles","marginRight","display","marginBottom","defaultData","method","canScroll","pos","inp","std","print","readStdOut","lineNumber","inputText","inputArray","command","commandPassThrough","parsedArgs","parse","type","help","needsInstance","commandWasRun","runCommandOnActive","printToActive","showHelp","_iteratorNormalCompletion","_didIteratorError","_iteratorError","option","showMsg","msg","clear","echo","description","init","defaultValue","darwin","startState","maximise","barShowing","tabsShowing","openWindow","closeWindow","minimiseWindow","unminimiseWindow","maximiseWindow","unmaximiseWindow","toggleShow","toggleMaximise","toggleMinimize","theme","barColor","outputColor","backgroundColor","className","fullscreen","propTypes","defaultProps","childContextTypes"],"sources":["../../../../src/js/components/Terminal/index.js"],"sourcesContent":["/* eslint-disable no-console, react/sort-comp */\nimport React, { Component } from 'react';\nimport stringSimilarity from 'string-similarity';\nimport whatkey from 'whatkey';\nimport isEqual from 'lodash.isequal';\nimport { ThemeProvider } from 'styled-components';\nimport { handleLogging } from '../../utils';\nimport {\n  TerminalPropTypes,\n  TerminalContextTypes,\n  TerminalDefaultProps,\n} from '../types';\n\nimport { os, pluginMap, uuidv4, getShortcuts, modCommands } from './terminal-utils';\nimport { Base, ContainerWrapper, Note } from './styled-elements';\n\nimport Bar from '../Bar';\nimport Content from '../Content/index';\nimport Tabs from '../Tabs/index';\n\nfunction compLogic(comp) {\n  switch (comp) {\n    case '>':\n      return (a, b) => parseInt(a, 10) > parseInt(b, 10);\n    case '<':\n      return (a, b) => parseInt(a, 10) < parseInt(b, 10);\n    case '>=':\n      return (a, b) => parseInt(a, 10) >= parseInt(b, 10);\n    case '<=':\n      return (a, b) => parseInt(a, 10) <= parseInt(b, 10);\n    case '!=':\n      return (a, b) => a !== b;\n    case '=':\n    default:\n      return (a, b) => a === b;\n  }\n}\n\nfunction putCursorAtEnd(el) {\n  // Only focus if input isn't already\n  if (document.activeElement !== el) {\n    el.focus();\n  }\n\n  // If this function exists... (IE 9+)\n  if (el.setSelectionRange) {\n    // Double the length because Opera is inconsistent about whether a carriage\n    // return is one character or two.\n    const len = el.value.length * 2;\n\n    // Timeout seems to be required for Blink\n    setTimeout(() => {\n      el.setSelectionRange(len, len);\n    }, 1);\n  } else {\n    // As a fallback, replace the contents with itself\n    // Doesn't work in Chrome, but Chrome supports setSelectionRange\n    el.value = el.value;\n  }\n}\n\nclass Terminal extends Component {\n  static displayName = 'Terminal';\n\n  static version = '4.3.0';\n\n  static propTypes = TerminalPropTypes;\n\n  static defaultProps = TerminalDefaultProps;\n\n  static childContextTypes = TerminalContextTypes;\n\n  constructor(props) {\n    super(props);\n\n    this.pluginData = {};\n\n    this.defaultCommands = {\n      // eslint-disable-line react/sort-comp\n      show: this.showMsg,\n      clear: {\n        method: this.clearScreen,\n        needsInstance: true,\n      },\n      help: {\n        method: this.showHelp,\n        needsInstance: true,\n      },\n      echo: input => input.slice(1).join(' '),\n      'edit-line': {\n        method: this.editLine,\n        needsInstance: true,\n        options: [\n          {\n            name: 'line',\n            description: 'the line you want to edit. -1 is the last line',\n            init: value => parseInt(value, 10),\n            defaultValue: -1,\n          },\n        ],\n      },\n    };\n\n    this.defaultDesciptions = {\n      show: (props.msg && props.msg.length > 0) ? 'show the msg' : false,\n      clear: 'clear the screen',\n      help: 'list all the commands',\n      echo: false,\n      'edit-line': false,\n    };\n\n    this.defaultShortcuts = {\n      'win, linux, darwin': {\n        'alt + t': this.createTab,\n      },\n      'win, linux': {\n        'ctrl + l': 'clear',\n      },\n      darwin: {\n        'cmd + k': 'clear',\n      },\n    };\n\n    this.state = {\n      tabbed: false,\n      commands: {},\n      descriptions: {},\n      show: props.startState !== 'closed',\n      minimise: props.startState === 'minimised',\n      maximise: props.startState === 'maximised',\n      shortcuts: {},\n      activeTab: '',\n      tabs: [],\n      instances: [],\n    };\n  }\n\n  getChildContext() {\n    return {\n      instances: this.state.instances,\n      show: this.state.show,\n      minimise: this.state.minimise,\n      maximise: this.state.maximise,\n      activeTab: this.state.activeTab,\n      barShowing: !this.props.hideTopBar,\n      tabsShowing: this.props.allowTabs,\n      openWindow: this.setTrue('show'),\n      closeWindow: this.setFalse('show'),\n      minimiseWindow: this.setTrue('minimise'),\n      unminimiseWindow: this.setFalse('minimise'),\n      maximiseWindow: this.setTrue('maximise'),\n      unmaximiseWindow: this.setFalse('maximise'),\n      toggleShow: this.toggleState('show'),\n      toggleMaximise: this.toggleState('maximise'),\n      toggleMinimize: this.toggleState('minimise'),\n    };\n  }\n\n  // Prepare the symbol\n  componentWillMount = () => {\n    this.loadPlugins();\n    this.assembleCommands();\n    this.setDescriptions();\n    this.setShortcuts();\n\n    this.createTab(true);\n  };\n\n  // Load everything!\n  componentDidMount = () => {\n    if (this.props.watchConsoleLogging) {\n      this.watchConsoleLogging();\n    }\n  };\n\n  // Tab creation\n  createTab = (force = false) => {\n    const { allowTabs, promptSymbol } = this.props;\n    if (force || allowTabs) {\n      const { tabs } = this.state;\n      const id = uuidv4();\n\n      tabs.push((\n        <Content\n          key={id}\n          id={id}\n          prompt={promptSymbol}\n          handleChange={this.handleChange}\n          handlerKeyPress={this.handlerKeyPress}\n          register={(...args) => this.registerInstance(id, ...args)}\n        />\n      ));\n\n      this.setState({ activeTab: id, tabs });\n    }\n  };\n\n  // Tab removal\n  removeTab = (index) => {\n    const { tabs } = this.state;\n    tabs.splice(index, 1);\n    this.setState({ tabs });\n  }\n\n  // Show the content on toggling\n  getAppContent = () => {\n    const { show, minimise } = this.state;\n    if (!show) {\n      return this.getNote();\n    }\n    if (minimise) {\n      return this.getBar();\n    }\n    return this.getContent();\n  };\n\n  // Shows the full window (normal window)\n  getContent = () => {\n    const {\n      color,\n      style,\n      showActions,\n      hideTopBar,\n      allowTabs,\n      actionHandlers,\n    } = this.props;\n    const { activeTab, tabs } = this.state;\n    const baseStyle = {\n      height: '100%',\n      color: color || 'green',\n      animation: 'fadeIn 0.18s ease-in',\n      fontFamily: \"'Inconsolata', monospace\",\n      fontSize: '0.9em',\n    };\n    // This should be a syled component but breaks if it is...\n    return (\n      <div style={{ ...baseStyle, ...style }}>\n        {!hideTopBar && (\n          <Bar showActions={showActions} {...actionHandlers} />\n        )}\n        {allowTabs && (\n          <Tabs\n            active={activeTab}\n            setActiveTab={this.setActiveTab}\n            createTab={this.createTab}\n            removeTab={this.removeTab}\n          />\n        )}\n        {tabs}\n      </div>\n    );\n  };\n\n  // Show only bar (minimise)\n  getBar = () => {\n    const { style, showActions, actionHandlers } = this.props;\n\n    return (\n      <ContainerWrapper style={{ ...style }}>\n        <Bar\n          showActions={showActions}\n          {...actionHandlers}\n        />\n      </ContainerWrapper>\n    );\n  };\n\n  // Show msg (on window close)\n  getNote = () => (\n    <Note>\n      <h1>\n        {this.props.closedTitle}\n      </h1>\n      <img\n        src=\"https://camo.githubusercontent.com/95ad3fffa11193f85dedbf14ca67e4c5c07182d0/687474703a2f2f69636f6e732e69636f6e617263686976652e636f6d2f69636f6e732f70616f6d656469612f736d616c6c2d6e2d666c61742f313032342f7465726d696e616c2d69636f6e2e706e67\"\n        width=\"200\"\n        height=\"200\"\n        alt=\"note\"\n        onKeyPress={this.toggleState('show')}\n        onClick={this.toggleState('show')}\n      />\n      {this.props.closedMessage}\n    </Note>\n  );\n\n  // Plugin data getter\n  getPluginData = name => this.pluginData[name];\n\n  // Plugin data setter\n  setPluginData = (name, data) => { this.pluginData[name] = data; };\n\n  // Set descriptions of the commands\n  setDescriptions = () => {\n    let descriptions = {\n      ...this.defaultDesciptions,\n      ...this.props.descriptions,\n    };\n    pluginMap(this.props.plugins, (plugin) => {\n      if (plugin.descriptions) {\n        descriptions = {\n          ...descriptions,\n          ...plugin.descriptions,\n        };\n      }\n    });\n    this.setState({ descriptions });\n  };\n\n  // Set command shortcuts\n  setShortcuts = () => {\n    let shortcuts = getShortcuts({}, this.defaultShortcuts);\n    shortcuts = getShortcuts(shortcuts, this.props.shortcuts);\n    pluginMap(this.props.plugins, (plugin) => {\n      if (plugin.shortcuts) {\n        shortcuts = getShortcuts(shortcuts, plugin.shortcuts);\n      }\n    });\n    this.setState({ shortcuts });\n  };\n\n  // Setter to change the prefix of the input prompt\n  setPromptPrefix = (instance, promptPrefix) => {\n    if (instance.state.controller === null) {\n      instance.setState({ promptPrefix });\n    }\n  };\n\n  // Setter to change the symbol of the input prompt\n  setPromptSymbol = (instance, prompt) => {\n    if (instance.state.controller === null) {\n      instance.setState({ prompt });\n    }\n  };\n\n  // Set the currently active tab\n  setActiveTab = (activeTab) => {\n    this.setState({ activeTab });\n  };\n\n  // Hide window\n  setFalse = name => () => this.setState({ [name]: false });\n\n  // Show window\n  setTrue = name => () => this.setState({ [name]: true });\n\n  /**\n   * set the input value with the possible history value\n   * @param {number} next position on the history\n   */\n  setValueWithHistory = (instance, position, inputRef) => {\n    const { history } = instance.state;\n    if (history[position]) {\n      instance.setState({ historyCounter: position });\n      inputRef.value = history[position];\n      putCursorAtEnd(inputRef);\n    }\n  };\n\n  // Method to check if version meets criteria\n  checkVersion = (comp, ver) => {\n    if (ver === '*') {\n      return true;\n    }\n    if (!(/^(\\d|\\.)+$/.test(ver))) {\n      throw new Error('Version can only have numbers and periods');\n    } else {\n      let clean = ver.toLowerCase().replace(/x/g, '0');\n      if (clean[clean.length - 1] === '.') {\n        clean += '0';\n      }\n      const split = clean.split('.');\n      while (split.length < 3) {\n        split.push('0');\n      }\n      const realSplit = Terminal.version.split('.');\n      const checkBools = split.map((val, index) => compLogic(comp)(realSplit[index], val));\n      return checkBools.indexOf(false) < 0;\n    }\n  };\n\n  // Used to keep track of all instances\n  registerInstance = (index, instance) => {\n    const { instances } = this.state;\n    const pluginInstances = {};\n    const pluginMethods = {};\n\n    const old = instances.find(i => i.index === index);\n\n    pluginMap(this.props.plugins, (PluginClass, config) => {\n      try {\n        const api = {\n          printLine: this.printLine.bind(this, instance),\n          removeLine: this.removeLine.bind(this, instance),\n          runCommand: this.runCommand.bind(this, instance),\n          setCanScroll: this.setCanScroll.bind(this, instance),\n          setScrollPosition: this.setScrollPosition.bind(this, instance),\n          focusInput: this.focusInput.bind(this, instance),\n          setPromptPrefix: this.setPromptPrefix.bind(this, instance),\n          setPromptSymbol: this.setPromptSymbol.bind(this, instance),\n          getPluginMethod: this.getPluginMethod.bind(this, instance),\n          takeControl: this.pluginTakeControl.bind(this, instance),\n          releaseControl: this.pluginReleaseControl.bind(this, instance),\n          getData: () => this.getPluginData(PluginClass.displayName),\n          setData: data => this.setPluginData(PluginClass.displayName, data),\n          checkVersion: this.checkVersion.bind(this),\n          version: Terminal.version,\n          os,\n        };\n\n        let plugin;\n        if (old) {\n          old.pluginInstances[PluginClass.displayName].updateApi(api);\n        } else {\n          plugin = new PluginClass(api, config);\n          pluginMethods[PluginClass.displayName] = {\n            ...plugin.getPublicMethods(),\n            _getName: () => PluginClass.displayName,\n            _getVersion: () => PluginClass.version,\n          };\n        }\n\n        pluginInstances[PluginClass.displayName] = plugin;\n      } catch (e) {\n        console.error(`Error instantiating plugin ${PluginClass.displayName}`, e); // eslint-disable-line no-console\n      }\n    });\n\n    const data = {\n      index,\n      instance,\n      pluginMethods: old ? old.pluginMethods : pluginMethods,\n      pluginInstances: old ? old.pluginInstances : pluginInstances,\n    };\n\n    if (old) {\n      const realIndex = instances.indexOf(old);\n      instances[realIndex] = data;\n    } else {\n      instances.push(data);\n    }\n\n    this.setState({ instances });\n\n    return () => {\n      const insts = this.state.instances;\n      this.setState({\n        instances: insts.filter(i => !isEqual(i.instance, instance)),\n      });\n    };\n  }\n\n  // allows a plugin to take full control over instance\n  pluginTakeControl = (instance, controller, newPrompt, newPromptPrefix) => {\n    const { promptPrefix, prompt } = instance.state;\n    instance.setState({\n      controller,\n      prompt: typeof newPrompt === 'undefined' ? prompt : newPrompt,\n      promptPrefix: typeof newPromptPrefix === 'undefined' ? promptPrefix : newPromptPrefix,\n      oldPrefix: promptPrefix,\n      oldPrompt: prompt,\n    });\n  };\n\n  // allows a plugin to release full control over instance\n  pluginReleaseControl = (instance) => {\n    const { oldPrefix, oldPrompt } = instance.state;\n    instance.setState({ controller: null, promptPrefix: oldPrefix, prompt: oldPrompt });\n  };\n\n  // Toggle a state boolean\n  toggleState = name => () => this.setState({ [name]: !this.state[name] });\n\n  // Prepare the built-in commands\n  assembleCommands = () => {\n    let commands = {\n      ...this.defaultCommands,\n      ...this.props.commands,\n    };\n\n    pluginMap(this.props.plugins, (plugin) => {\n      if (plugin.commands) {\n        commands = {\n          ...commands,\n          ...plugin.commands,\n        };\n      }\n    });\n\n    this.setState({ commands: modCommands(commands) });\n  };\n\n  /**\n   * autocomplete with the command the have the best match\n   * @param {object} input reference\n   */\n  autocompleteValue = (inputRef) => {\n    const { descriptions } = this.state;\n    const keysToCheck = Object.keys(descriptions).filter(key => descriptions[key] !== false);\n    let ratings = [];\n    if (inputRef.value.length > 1) {\n      ratings = stringSimilarity.findBestMatch( // eslint-disable-line\n        inputRef.value,\n        keysToCheck,\n      ).ratings;\n    } else {\n      ratings = keysToCheck.reduce((full, item) => {\n        if (item.indexOf(inputRef.value) === 0) {\n          full.push({ target: item, rating: 1 });\n        }\n        return full;\n      }, []);\n    }\n    return ratings.filter(item => item.rating > 0);\n  };\n\n  // Refresh or clear the screen\n  clearScreen = (args, printLine, runCommand, instance) => {\n    instance.setState({ summary: [] });\n  };\n\n  // Method to check for shortcut and invoking commands\n  checkShortcuts = (instance, key, e) => {\n    const { controller } = instance.state;\n    let cuts = {};\n    if (controller !== null) {\n      if (controller.shortcuts) {\n        cuts = getShortcuts(cuts, controller.shortcuts);\n      }\n    } else {\n      const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n      cuts = this.state.shortcuts;\n      if (instanceData) {\n        Object.values(instanceData.pluginInstances).forEach((i) => {\n          cuts = getShortcuts(cuts, i.shortcuts);\n        });\n      }\n    }\n\n    const shortcuts = Object.keys(cuts);\n    if (shortcuts.length > 0) {\n      const { keyInputs } = instance.state;\n      let modKey = key;\n      if (key === 'meta') {\n        // eslint-disable-next-line no-nested-ternary\n        modKey = os === 'darwin' ? 'cmd' : os === 'win' ? 'win' : 'meta';\n      }\n      keyInputs.push(modKey);\n      const len = keyInputs.length;\n\n      const options = shortcuts\n        .map((cut, i) => [cut.replace(/\\s/g, '').split('+'), i])\n        .filter(cut => cut[0].length >= keyInputs.length)\n        .filter(cut => isEqual(cut[0].slice(0, len), keyInputs));\n\n      if (options.length > 0) {\n        if (options.length === 1 && options[0][0].length === len) {\n          const shortcut = shortcuts[options[0][1]];\n          const action = cuts[shortcut];\n          if (typeof action === 'string') {\n            this.runCommand(instance, cuts[shortcut]);\n          } else if (typeof action === 'function') {\n            e.preventDefault();\n            e.stopPropagation();\n            action();\n          }\n          instance.setState({ keyInputs: [] });\n        }\n      } else if (keyInputs.length > 0) {\n        instance.setState({ keyInputs: [] });\n      }\n    }\n  };\n\n  // edit-line command\n  editLine = (args, printLine, runCommand, instance) => {\n    const { summary } = instance.state;\n    let index = args.line;\n    if (index < 0) {\n      index = summary.length === 0 ? 0 : summary.length - index;\n    }\n    summary[index] = args._.join(' ');\n    instance.setState({ summary });\n  };\n\n  // Listen for user input\n  handleChange = (instance, e) => {\n    const {\n      input, promptPrefix, prompt, history, controller,\n    } = instance.state;\n    const saveToHistory = controller !== null ? (controller.history || false) : true;\n    if (e.key === 'Enter' && !e.shiftKey) {\n      if (typeof e.dontShowCommand === 'undefined') {\n        this.printLine.bind(this, instance)(\n          `${promptPrefix}${prompt} ${e.target.value}`,\n          false,\n        );\n      }\n\n      input.push(e.target.value);\n      const res = this.runCommand(instance, `${input.join('\\n')}`);\n\n      if (typeof res !== 'undefined') {\n        this.printLine.bind(this, instance)(res);\n      }\n\n      const newHistory = [...history, e.target.value];\n      const historyProps = saveToHistory ? {\n        history: newHistory,\n        historyCounter: newHistory.length,\n      } : {};\n      instance.setState({\n        input: [],\n        ...historyProps,\n      });\n      e.target.value = ''; // eslint-disable-line no-param-reassign\n    } else if (e.key === 'Enter' && e.shiftKey) {\n      this.printLine.bind(this, instance)(\n        `${promptPrefix}${prompt} ${e.target.value}`,\n        false,\n      );\n      const newHistory = [...history, e.target.value];\n      const historyProps = saveToHistory ? {\n        history: newHistory,\n        historyCounter: newHistory.length,\n      } : {};\n      instance.setState({\n        input: [...input, e.target.value],\n        ...historyProps,\n      });\n      e.target.value = ''; // eslint-disable-line no-param-reassign\n    }\n    if (typeof this.props.afterChange === 'function') {\n      this.props.afterChange(e);\n    }\n  };\n\n  /**\n   * Base of key code set the value of the input\n   * with the history\n   * @param {event} event of input\n   */\n  handlerKeyPress = (instance, e, inputRef) => {\n    const { key } = whatkey(e);\n    const { historyCounter, keyInputs, controller } = instance.state;\n    if (keyInputs.length === 0 || keyInputs.length === 0) {\n      if (controller !== null) {\n        if (controller.onKeyPress) {\n          controller.onKeyPress(key);\n        }\n      } else {\n        switch (key) {\n          case 'up':\n            this.setValueWithHistory(instance, historyCounter - 1, inputRef);\n            if (this.state.tabbed) {\n              this.setState({ tabbed: false });\n            }\n            break;\n          case 'down':\n            this.setValueWithHistory(instance, historyCounter + 1, inputRef);\n            if (this.state.tabbed) {\n              this.setState({ tabbed: false });\n            }\n            break;\n          case 'tab':\n            e.preventDefault();\n            if (inputRef.value !== '' && this.state.tabbed === true) {\n              const contents = this.autocompleteValue(inputRef);\n              this.printLine(instance, `${instance.state.promptPrefix}${instance.state.prompt} ${inputRef.value}`, false);\n              this.printLine(\n                instance,\n                (\n                  <span>\n                    {contents.filter(item => typeof item !== 'undefined').map((item) => {\n                    const styles = {\n                      marginRight: 5,\n                      width: 'calc(33% - 5px)',\n                      display: 'inline-block',\n                    };\n                    if (contents.length > 3) {\n                      styles.marginBottom = 5;\n                    }\n                    return (\n                      <span\n                        style={styles}\n                        key={`${item.target}-${item.rating}`}\n                      >\n                        {item.target}\n                      </span>\n                    );\n                  })}\n                  </span>\n                ),\n                false,\n              );\n              this.setState({ tabbed: false });\n            } else {\n              this.setState({ tabbed: true });\n            }\n            break;\n          default:\n            if (this.state.tabbed) {\n              this.setState({ tabbed: false });\n            }\n            break;\n        }\n      }\n    }\n    this.checkShortcuts(instance, key, e);\n  }\n\n  // Plugins\n  loadPlugins = () => {\n    const pluginData = {};\n    pluginMap(this.props.plugins, (plugin) => {\n      try {\n        pluginData[plugin.displayName] = plugin.defaultData;\n      } catch (e) {\n        console.error(`Error loading plugin ${plugin.displayName}`, e); // eslint-disable-line no-console\n      }\n    });\n    this.pluginData = pluginData;\n  };\n\n  // Plugin api method to get a public plugin method\n  getPluginMethod = (instance, name, method) => {\n    const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n    if (instanceData) {\n      if (instanceData.pluginMethods[name]) {\n        if (instanceData.pluginMethods[name][method]) {\n          return instanceData.pluginMethods[name][method];\n        }\n        throw new Error(`No method with name ${method} has been registered for plugin ${name}`);\n      } else {\n        throw new Error(`No plugin with name ${name} has been registered`);\n      }\n    }\n    return null;\n  };\n\n  // Set if the current tab can scroll\n  setCanScroll = (instance, force) => {\n    if (typeof force !== 'undefined') {\n      instance.setState({ canScroll: force });\n    }\n  }\n\n  // Set the scroll position of the contents\n  setScrollPosition = (instance, pos) => {\n    if (typeof pos === 'number') {\n      instance.setScrollPosition(pos);\n    }\n  }\n\n  // Set focus to the input\n  focusInput = (instance) => {\n    if (typeof pos === 'number') {\n      instance.focusInput();\n    }\n  }\n\n  // Print the summary (input -> output)\n  printLine = (instance, inp, std = true) => {\n    let print = true;\n    if (std) {\n      const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n      if (instanceData) {\n        const plugins = instanceData.pluginInstances;\n        for (let i = 0; i < plugins.length; i += 1) {\n          try {\n            print = plugins[i].readStdOut(inp);\n          } catch (e) {\n            // Do nothing\n          }\n        }\n      }\n    }\n\n    if (print !== false) {\n      const { summary } = instance.state;\n      summary.push(inp);\n      instance.setState({ summary });\n    }\n  };\n\n  // Remove a line from the summary\n  removeLine = (instance, lineNumber = -1) => {\n    const { summary } = instance.state;\n    summary.splice(lineNumber, 1);\n    instance.setState({ summary });\n  }\n\n  // Execute the commands\n  runCommand = (instance, inputText, force = false) => {\n    const inputArray = inputText.split(' ');\n    const input = inputArray[0];\n    const args = inputArray; // Undefined for function call\n    const { controller } = instance.state;\n    let commands = {};\n    if (!force && controller !== null) {\n      if (controller.runCommand) {\n        return controller.runCommand(inputText);\n      } else if (controller.commands) {\n        commands = { ...modCommands(controller.commands) };\n      }\n    } else {\n      const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n      commands = { ...this.state.commands };\n      if (instanceData) {\n        Object.values(instanceData.pluginInstances).forEach((i) => {\n          commands = {\n            ...commands,\n            ...modCommands(i.commands),\n          };\n        });\n      }\n    }\n\n    const command = commands[input];\n    let res;\n\n    if (input === '') {\n      // do nothing\n    } else if (command === undefined) {\n      if (typeof this.props.commandPassThrough === 'function') {\n        res = this.props.commandPassThrough(\n          inputArray,\n          this.printLine.bind(this, instance),\n          this.runCommand.bind(this, instance),\n        );\n      } else {\n        this.printLine.bind(this, instance)(`-bash:${input}: command not found`);\n      }\n    } else {\n      const parsedArgs = command.parse(args);\n      const type = typeof parsedArgs;\n      if (type !== 'object' || (type === 'object' && !parsedArgs.help)) {\n        res = command.method(\n          parsedArgs,\n          this.printLine.bind(this, instance),\n          this.runCommand.bind(this, instance),\n          command.needsInstance === true ? instance : undefined,\n        );\n      }\n    }\n    if (typeof this.props.commandWasRun === 'function') {\n      this.props.commandWasRun(\n        inputArray,\n        this.printLine.bind(this, instance),\n        this.runCommand.bind(this, instance),\n      );\n    }\n    return res;\n  };\n\n  // Run a command on the active instance\n  runCommandOnActive = (inputText, force = false) => {\n    const data = this.state.instances.find(i => i.index === this.state.activeTab);\n    if (data && data.instance !== null) {\n      this.runCommand(data.instance, inputText, force);\n    }\n  }\n\n  // Print to active instance\n  printToActive = (...args) => {\n    const data = this.state.instances.find(i => i.index === this.state.activeTab);\n    if (data && data.instance !== null && data.instance.state.controller === null) {\n      this.printLine(data.instance, ...args);\n    }\n  }\n\n  // Listen for console logging and pass the input to handler (handleLogging)\n  watchConsoleLogging = () => {\n    handleLogging('log', this.printToActive);\n    handleLogging('info', this.printToActive);\n  };\n\n  // List all the commands (state + user defined)\n  showHelp = (args, printLine, runCommand, instance) => {\n    let commands = { ...this.state.commands };\n    let descriptions = { ...this.state.descriptions };\n    const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n    if (instanceData) {\n      Object.values(instanceData.pluginInstances).forEach((i) => {\n        commands = {\n          ...commands,\n          ...i.commands,\n        };\n        descriptions = {\n          ...descriptions,\n          ...i.descriptions,\n        };\n      });\n    }\n    const options = Object.keys(commands);\n\n    for (const option of options) {\n      // eslint-disable-line no-restricted-syntax\n      if (descriptions[option] !== false) {\n        printLine(`${option} - ${descriptions[option]}`);\n      }\n    }\n  };\n\n  // Show the msg (prop msg)\n  showMsg = (args, printLine) => {\n    if (this.props.msg && this.props.msg.length > 0) {\n      printLine(this.props.msg);\n    }\n  };\n\n  render() {\n    const theme = {\n      color: this.props.color,\n      prompt: this.props.prompt,\n      barColor: this.props.barColor,\n      outputColor: this.props.outputColor,\n      backgroundColor: this.props.backgroundColor,\n    };\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Base\n          className=\"terminal-base\"\n          fullscreen={this.state.maximise}\n        >\n          {this.getAppContent()}\n        </Base>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default Terminal;\n"]},"metadata":{},"sourceType":"script"}