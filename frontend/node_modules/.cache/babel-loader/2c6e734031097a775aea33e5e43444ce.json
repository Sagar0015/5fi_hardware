{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.underscore = underscore;\nexports.camelize = camelize;\nexports.hyphenate = hyphenate;\nexports.merge = merge;\n\n/* eslint-disable */\n\n/**\n * @example\n * underscoreName('getList');\n * => get_list\n */\nfunction underscore(string) {\n  return string.replace(/([A-Z])/g, '_$1').toLowerCase();\n}\n/**\n * @example\n * camelize('font-size');\n * => fontSize\n */\n\nfunction camelize(string) {\n  return string.replace(/\\-(\\w)/g, function (_char) {\n    return _char.slice(1).toUpperCase();\n  });\n}\n/**\n * @example\n * camelize('fontSize');\n * => font-size\n */\n\nfunction hyphenate(string) {\n  return string.replace(/([A-Z])/g, '-$1').toLowerCase();\n}\n/**\n * @example\n * merge('{0} - A front-end {1} ','Suite','framework');\n * => Suite - A front-end framework\n */\n\nfunction merge(pattern) {\n  var pointer = 0,\n    i;\n  for (i = 1; i < arguments.length; i += 1) {\n    pattern = pattern.split(\"{\" + pointer + \"}\").join(arguments[i]);\n    pointer += 1;\n  }\n  return pattern;\n}","map":{"version":3,"names":["exports","__esModule","underscore","camelize","hyphenate","merge","string","replace","toLowerCase","_char","slice","toUpperCase","pattern","pointer","i","arguments","length","split","join"],"sources":["/Users/azminds/Documents/five-g/frontend/node_modules/dom-lib/lib/utils/stringFormatter.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.underscore = underscore;\nexports.camelize = camelize;\nexports.hyphenate = hyphenate;\nexports.merge = merge;\n\n/* eslint-disable */\n\n/**\n * @example\n * underscoreName('getList');\n * => get_list\n */\nfunction underscore(string) {\n  return string.replace(/([A-Z])/g, '_$1').toLowerCase();\n}\n/**\n * @example\n * camelize('font-size');\n * => fontSize\n */\n\n\nfunction camelize(string) {\n  return string.replace(/\\-(\\w)/g, function (_char) {\n    return _char.slice(1).toUpperCase();\n  });\n}\n/**\n * @example\n * camelize('fontSize');\n * => font-size\n */\n\n\nfunction hyphenate(string) {\n  return string.replace(/([A-Z])/g, '-$1').toLowerCase();\n}\n/**\n * @example\n * merge('{0} - A front-end {1} ','Suite','framework');\n * => Suite - A front-end framework\n */\n\n\nfunction merge(pattern) {\n  var pointer = 0,\n      i;\n\n  for (i = 1; i < arguments.length; i += 1) {\n    pattern = pattern.split(\"{\" + pointer + \"}\").join(arguments[i]);\n    pointer += 1;\n  }\n\n  return pattern;\n}"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,UAAU,GAAGA,UAAU;AAC/BF,OAAO,CAACG,QAAQ,GAAGA,QAAQ;AAC3BH,OAAO,CAACI,SAAS,GAAGA,SAAS;AAC7BJ,OAAO,CAACK,KAAK,GAAGA,KAAK;;AAErB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASH,UAAU,CAACI,MAAM,EAAE;EAC1B,OAAOA,MAAM,CAACC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAACC,WAAW,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASL,QAAQ,CAACG,MAAM,EAAE;EACxB,OAAOA,MAAM,CAACC,OAAO,CAAC,SAAS,EAAE,UAAUE,KAAK,EAAE;IAChD,OAAOA,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;EACrC,CAAC,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASP,SAAS,CAACE,MAAM,EAAE;EACzB,OAAOA,MAAM,CAACC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAACC,WAAW,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASH,KAAK,CAACO,OAAO,EAAE;EACtB,IAAIC,OAAO,GAAG,CAAC;IACXC,CAAC;EAEL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,IAAI,CAAC,EAAE;IACxCF,OAAO,GAAGA,OAAO,CAACK,KAAK,CAAC,GAAG,GAAGJ,OAAO,GAAG,GAAG,CAAC,CAACK,IAAI,CAACH,SAAS,CAACD,CAAC,CAAC,CAAC;IAC/DD,OAAO,IAAI,CAAC;EACd;EAEA,OAAOD,OAAO;AAChB"},"metadata":{},"sourceType":"script"}