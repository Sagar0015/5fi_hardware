{"ast":null,"code":"var _jsxFileName = \"/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetwork/monitorNetwork.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './monitorNetwork.scss';\nimport $ from 'jquery';\nimport { Grid } from \"@material-ui/core\";\nimport * as Icons from \"@material-ui/icons\";\nimport { ResponsiveContainer, LineChart, Line, YAxis, XAxis, CartesianGrid, Tooltip, RadialBarChart, RadialBar } from \"recharts\";\nimport axios from 'axios';\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\nimport alerticon from \"../../images/home/alert.svg\";\nimport devicesIcon from \"../../images/home/devices.svg\";\nimport cloudIcon from \"../../images/home/cloud.svg\";\nimport serverIcon from \"../../images/home/server.svg\";\nimport gnbIcons from \"../../images/home/gnb.svg\";\nimport loadingIcon from '../../images/home/loading.gif';\nimport apiService from '../../services/apiService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MonitorNetwork extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getMonitorHomeData();\n      this.timeout = setInterval(this.intiateCall, 5000);\n    };\n\n    this.intiateCall = () => {\n      if (!this.state.callUnderProgress) {\n        this.getMonitorHomeData();\n      }\n    };\n\n    this.getMouseCoordinates = e => {\n      var m_posx = 0,\n          m_posy = 0,\n          e_posx = 0,\n          e_posy = 0,\n          obj = document.getElementById('network-topology'); //get mouse position on document crossbrowser\n\n      if (!e) {\n        e = window.event;\n      }\n\n      if (e.pageX || e.pageY) {\n        m_posx = e.pageX;\n        m_posy = e.pageY;\n      } else if (e.clientX || e.clientY) {\n        m_posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n        m_posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n      } //get parent element position in document\n\n\n      if (obj.offsetParent) {\n        do {\n          e_posx += obj.offsetLeft;\n          e_posy += obj.offsetTop;\n        } while (obj = obj.offsetParent);\n      } // mouse position minus elm position is mouseposition relative to element:\n\n\n      return {\n        x: m_posx - e_posx,\n        y: m_posy - e_posy\n      };\n    };\n\n    this.showElements = (evt, data) => {\n      this.setState({\n        elementDetails: true,\n        elmentDetailsData: data\n      });\n      var coordinates = this.getMouseCoordinates(evt);\n      this.setState({\n        elementDetailsCoordinates: coordinates\n      });\n    };\n\n    this.closeElements = () => {\n      this.setState({\n        elementDetails: false\n      });\n    };\n\n    this.getMonitorHomeData = () => {\n      var thisView = this;\n      if (this.monitorHomeToken) this.monitorHomeToken.cancel();\n      this.monitorHomeToken = axios.CancelToken.source();\n      this.setState({\n        callUnderProgress: true\n      });\n      axios.all([apiService.getMonitorHomeData(this.monitorHomeToken.token)]).then(function (res) {\n        if (res[0]) {\n          thisView.setState({\n            networkInfo: res[0][\"data\"]\n          }); // console.log($(thisView.refs.PreviewGaugeMeter_2));\n          // $(thisView.refs.PreviewGaugeMeter_2).gaugeMeter({percent:15});\n\n          thisView.setState({\n            callUnderProgress: false\n          });\n          thisView.setState({\n            firstCallDone: true\n          });\n        }\n      }).catch(function (res) {\n        console.log(res);\n        console.log('An error occurred monitor service');\n        thisView.setState({\n          callUnderProgress: false\n        });\n      });\n    };\n\n    this.state = {\n      lineData: [{\n        name: 'July 1',\n        uv: 4000\n      }, {\n        name: 'July 2',\n        uv: 3000\n      }, {\n        name: 'July 3',\n        uv: 2000\n      }, {\n        name: 'July 4',\n        uv: 1000\n      }, {\n        name: 'July 5',\n        uv: 1890\n      }],\n      elementDetails: false,\n      elementDetailsCoordinates: {},\n      networkInfo: {},\n      elmentDetailsData: [],\n      callUnderProgress: false,\n      firstCallDone: false\n    };\n    this.monitorHomeToken = null;\n    this.timeout = null;\n  }\n\n  componentWillUnmount() {\n    if (this.monitorHomeToken) this.monitorHomeToken.cancel();\n    clearInterval(this.timeout);\n  }\n\n  render() {\n    const {\n      lineData,\n      elementDetails,\n      elementDetailsCoordinates,\n      networkInfo,\n      elmentDetailsData,\n      firstCallDone\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"five-g-monitor\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 4,\n          md: 6,\n          xs: 12,\n          className: \"fgm-inner-grid individual-grid-five-g\",\n          children: /*#__PURE__*/_jsxDEV(Widget, {\n            title: \"Network Summary\",\n            upperTitle: true,\n            bodyclassName: '',\n            className: 'test',\n            disableWidgetMenu: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              justify: \"space-between\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                xs: 12,\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"text\",\n                  colorBrightness: \"secondary\",\n                  children: \"RAN Spectrum Utilization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"c100 p33 center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"33%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"slice\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fill\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"c100 p63 center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"63%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"slice\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fill\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                xs: 12,\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"text\",\n                  colorBrightness: \"secondary\",\n                  children: \"Core Network Utilization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this), !firstCallDone && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"each-widget-loading\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: loadingIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ns-text\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Top network elements needing attention\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ns-alert\",\n              children: [/*#__PURE__*/_jsxDEV(Icons.CheckCircle, {\n                fontSize: \"small\",\n                className: \"hp-tick-icon\",\n                onClick: this.toggleHandOver\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nsa-error\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: networkInfo ? networkInfo.malfunction : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 4,\n          md: 6,\n          xs: 12,\n          className: \"fgd-form individual-grid-five-g\",\n          children: /*#__PURE__*/_jsxDEV(Widget, {\n            title: \"\",\n            upperTitle: true,\n            bodyclassName: '',\n            className: '',\n            disableWidgetMenu: true,\n            children: [/*#__PURE__*/_jsxDEV(RadialBarChart, {\n              width: 350,\n              height: 300,\n              innerRadius: \"10%\",\n              outerRadius: \"80%\",\n              data: [{\n                \"name\": \"d\",\n                \"uv\": 100,\n                \"fill\": \"#ffff\"\n              }, {\n                \"name\": \"utilization\",\n                \"uv\": networkInfo && networkInfo.count_active_cells && networkInfo.count_available_cells ? Math.round(networkInfo.count_active_cells / networkInfo.count_available_cells * 100) : 0,\n                \"fill\": \"#0731E2\"\n              }],\n              startAngle: 180,\n              endAngle: 0,\n              children: /*#__PURE__*/_jsxDEV(RadialBar, {\n                minAngle: 15,\n                background: true,\n                clockWise: true,\n                dataKey: \"uv\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fgm-util-each fgmue-first\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"No. of cells available:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: networkInfo && networkInfo.count_available_cells ? networkInfo.count_available_cells : '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fgm-util-each\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"No. of cells active:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: networkInfo && networkInfo.count_active_cells ? networkInfo.count_active_cells : '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fgm-util-each\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Percentage Utilization:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: networkInfo && networkInfo.count_active_cells && networkInfo.count_available_cells ? Math.round(networkInfo.count_active_cells / networkInfo.count_available_cells * 100) : '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), !firstCallDone && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"each-widget-loading\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: loadingIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 4,\n          xs: 12,\n          className: \"fgd-form individual-grid-five-g\",\n          children: /*#__PURE__*/_jsxDEV(Widget, {\n            title: \"Time series of traffic this month\",\n            upperTitle: true,\n            bodyclassName: '',\n            className: '',\n            disableWidgetMenu: true,\n            children: [/*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 200,\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                width: 500,\n                height: 200,\n                data: lineData,\n                margin: {\n                  top: 10,\n                  right: 30,\n                  left: 0,\n                  bottom: 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"uv\",\n                  stroke: \"#8884d8\",\n                  fill: \"#8884d8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this), !firstCallDone && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"each-widget-loading\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: loadingIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: \"fgd-form individual-grid-five-g\",\n          id: \"network-topology\",\n          children: [/*#__PURE__*/_jsxDEV(Widget, {\n            title: \"Network Topology\",\n            upperTitle: true,\n            bodyclassName: '',\n            className: '',\n            customeclassName: 'network-topology',\n            disableWidgetMenu: true,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"network-topology-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ntc-elements\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ntce-main\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ntce-elements-top\",\n                    children: networkInfo && networkInfo.listNFs && Object.keys(networkInfo.listNFs).map((nfsKey, index) => {\n                      if (index <= Object.keys(networkInfo.listNFs).length / 2) {\n                        if (networkInfo.listNFs[nfsKey].length === 1) {\n                          return /*#__PURE__*/_jsxDEV(NavLink, {\n                            to: this.props.match.path + \"/\" + networkInfo.listNFs[nfsKey][0][\"containerid\"],\n                            className: \"ntce-each\",\n                            children: /*#__PURE__*/_jsxDEV(\"span\", {\n                              children: nfsKey\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 337,\n                              columnNumber: 69\n                            }, this)\n                          }, nfsKey + index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 336,\n                            columnNumber: 65\n                          }, this);\n                        } else {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"ntce-each\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              onClick: evt => {\n                                this.showElements(evt, networkInfo.listNFs[nfsKey]);\n                              },\n                              children: nfsKey\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 343,\n                              columnNumber: 69\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 344,\n                              columnNumber: 69\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 344,\n                              columnNumber: 82\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 344,\n                              columnNumber: 95\n                            }, this)]\n                          }, nfsKey + index, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 342,\n                            columnNumber: 65\n                          }, this);\n                        }\n                      }\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ntce-elements-bottom\",\n                    children: [networkInfo && networkInfo.listNFs && Object.keys(networkInfo.listNFs).map((nfsKey, index) => {\n                      if (index > Object.keys(networkInfo.listNFs).length / 2) {\n                        if (networkInfo.listNFs[nfsKey].length === 1) {\n                          return /*#__PURE__*/_jsxDEV(NavLink, {\n                            to: this.props.match.path + \"/\" + networkInfo.listNFs[nfsKey][0][\"containerid\"],\n                            className: \"ntce-each bottom\",\n                            children: /*#__PURE__*/_jsxDEV(\"span\", {\n                              children: nfsKey\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 368,\n                              columnNumber: 69\n                            }, this)\n                          }, nfsKey + index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 367,\n                            columnNumber: 65\n                          }, this);\n                        } else {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"ntce-each bottom\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              onClick: evt => {\n                                this.showElements(evt, networkInfo.listNFs[nfsKey]);\n                              },\n                              children: nfsKey\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 374,\n                              columnNumber: 69\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 375,\n                              columnNumber: 69\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 375,\n                              columnNumber: 82\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 375,\n                              columnNumber: 95\n                            }, this)]\n                          }, nfsKey + index, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 373,\n                            columnNumber: 65\n                          }, this);\n                        }\n                      }\n                    }), networkInfo && networkInfo.listNFs && Object.keys(networkInfo.listNFs).length % 2 === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ntce-each no-data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ntc-network-line\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ntc-spects\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ntcs-split\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ntcs-each\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [networkInfo && networkInfo.counts_in_topo && networkInfo.counts_in_topo.nfs ? networkInfo.counts_in_topo.nfs : \"-\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                          children: \"NFs\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 403,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 401,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ntcs-each\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [networkInfo && networkInfo.counts_in_topo && networkInfo.counts_in_topo.hasOwnProperty(\"edges\") ? networkInfo.counts_in_topo.edges : \"-\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                          children: \"Edges\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 407,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 406,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ntcs-split\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ntcs-each\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [networkInfo && networkInfo.counts_in_topo && networkInfo.counts_in_topo.rrhs ? networkInfo.counts_in_topo.rrhs : \"-\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                          children: \"RRHs\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 413,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 412,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"ntcs-each\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [networkInfo && networkInfo.counts_in_topo && networkInfo.counts_in_topo.gnbs ? networkInfo.counts_in_topo.gnbs : \"-\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                          children: \"gNBs\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 417,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 416,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ntc-network\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ntcn-map\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ntc-network-line\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ntc-nl-gnbs\",\n                    children: networkInfo && networkInfo.gnbsUes && networkInfo.gnbsUes.gnb && networkInfo.gnbsUes.gnb.length && networkInfo.gnbsUes.gnb.map(eachGnb => {\n                      return /*#__PURE__*/_jsxDEV(NavLink, {\n                        className: \"ntcnlg-each\",\n                        to: this.props.match.path + \"/\" + eachGnb.containerid,\n                        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                          src: gnbIcons\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 432,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: eachGnb.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 433,\n                          columnNumber: 61\n                        }, this)]\n                      }, eachGnb.containerid, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 431,\n                        columnNumber: 57\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ntcn-devices\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ntcnd-image\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: devicesIcon,\n                      alt: \"device\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 443,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ntcnd-count\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Devices\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 446,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: networkInfo && networkInfo.count_available_cells ? networkInfo.count_available_cells : \"-\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this), !firstCallDone && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"each-widget-loading\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: loadingIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), elementDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"network-overlay\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ntce-element-details\",\n              style: {\n                left: elementDetailsCoordinates.x + \"px\",\n                top: elementDetailsCoordinates.y + \"px\",\n                width: elmentDetailsData ? elmentDetailsData.length * 150 + \"px\" : \"350px\",\n                marginLeft: elmentDetailsData ? -1 * elmentDetailsData.length / 2 * 150 + \"px\" : \"-175px\"\n              },\n              children: [elmentDetailsData && elmentDetailsData.length > 0 && elmentDetailsData.map((eachElement, index) => {\n                return /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: this.props.match.path + \"/\" + eachElement.containerid,\n                  className: \"ntceed-each\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: eachElement.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 57\n                  }, this), eachElement.internet === 'yes' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ntceed-icons\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: cloudIcon,\n                      alt: \"cloud\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Internet\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 481,\n                      columnNumber: 69\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 65\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ntceed-icons\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: serverIcon,\n                      alt: \"server\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"MEC Server\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 485,\n                      columnNumber: 69\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 65\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ntceede-connector\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 57\n                  }, this)]\n                }, eachElement.containerid, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 53\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ntce-ed-close\",\n                children: /*#__PURE__*/_jsxDEV(Icons.Close, {\n                  fontSize: \"small\",\n                  className: \"ntce-close-icon\",\n                  onClick: this.closeElements\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  config: state.config\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonitorNetwork);","map":{"version":3,"sources":["/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetwork/monitorNetwork.js"],"names":["React","Component","NavLink","connect","$","Grid","Icons","ResponsiveContainer","LineChart","Line","YAxis","XAxis","CartesianGrid","Tooltip","RadialBarChart","RadialBar","axios","Widget","Typography","loadingIcon","apiService","MonitorNetwork","constructor","props","componentDidMount","getMonitorHomeData","timeout","setInterval","intiateCall","state","callUnderProgress","getMouseCoordinates","e","m_posx","m_posy","e_posx","e_posy","obj","document","getElementById","window","event","pageX","pageY","clientX","clientY","body","scrollLeft","documentElement","scrollTop","offsetParent","offsetLeft","offsetTop","x","y","showElements","evt","data","setState","elementDetails","elmentDetailsData","coordinates","elementDetailsCoordinates","closeElements","thisView","monitorHomeToken","cancel","CancelToken","source","all","token","then","res","networkInfo","firstCallDone","catch","console","log","lineData","name","uv","componentWillUnmount","clearInterval","render","toggleHandOver","malfunction","count_active_cells","count_available_cells","Math","round","top","right","left","bottom","listNFs","Object","keys","map","nfsKey","index","length","match","path","counts_in_topo","nfs","hasOwnProperty","edges","rrhs","gnbs","gnbsUes","gnb","eachGnb","containerid","gnbIcons","devicesIcon","width","marginLeft","eachElement","internet","cloudIcon","serverIcon","mapStateToProps","config","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './monitorNetwork.scss';\n\nimport $ from 'jquery';\n\nimport {\n    Grid\n} from \"@material-ui/core\";\nimport * as Icons from \"@material-ui/icons\";\nimport {\n    ResponsiveContainer,\n    LineChart,\n    Line,\n    YAxis,\n    XAxis,\n    CartesianGrid,\n    Tooltip,\n    RadialBarChart,\n    RadialBar\n} from \"recharts\";\n\nimport axios from 'axios';\n\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\n\nimport alerticon from '../../images/home/alert.svg';\nimport devicesIcon from '../../images/home/devices.svg';\nimport cloudIcon from '../../images/home/cloud.svg';\nimport serverIcon from '../../images/home/server.svg';\nimport gnbIcons from '../../images/home/gnb.svg';\nimport loadingIcon from '../../images/home/loading.gif';\n\nimport apiService from '../../services/apiService.js';\n\nclass MonitorNetwork extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lineData: [\n                { name: 'July 1', uv: 4000 },\n                { name: 'July 2', uv: 3000 },\n                { name: 'July 3', uv: 2000 },\n                { name: 'July 4', uv: 1000 },\n                { name: 'July 5', uv: 1890 }\n            ],\n            elementDetails: false,\n            elementDetailsCoordinates: {},\n            networkInfo: {},\n            elmentDetailsData: [],\n            callUnderProgress: false,\n            firstCallDone: false\n        }\n\n        this.monitorHomeToken = null;\n        this.timeout = null;\n\n    }\n\n    componentDidMount = () => {\n        this.getMonitorHomeData();\n        this.timeout = setInterval(this.intiateCall, 5000);\n    }\n\n    intiateCall = () => {\n        if (!this.state.callUnderProgress) {\n            this.getMonitorHomeData();\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.monitorHomeToken)\n            this.monitorHomeToken.cancel();\n        clearInterval(this.timeout);\n    }\n\n    getMouseCoordinates = (e) => {\n        var m_posx = 0, m_posy = 0, e_posx = 0, e_posy = 0,\n            obj = document.getElementById('network-topology');\n        //get mouse position on document crossbrowser\n        if (!e) { e = window.event; }\n        if (e.pageX || e.pageY) {\n            m_posx = e.pageX;\n            m_posy = e.pageY;\n        } else if (e.clientX || e.clientY) {\n            m_posx = e.clientX + document.body.scrollLeft\n                + document.documentElement.scrollLeft;\n            m_posy = e.clientY + document.body.scrollTop\n                + document.documentElement.scrollTop;\n        }\n        //get parent element position in document\n        if (obj.offsetParent) {\n            do {\n                e_posx += obj.offsetLeft;\n                e_posy += obj.offsetTop;\n            } while (obj = obj.offsetParent);\n        }\n        // mouse position minus elm position is mouseposition relative to element:\n        return { x: m_posx - e_posx, y: m_posy - e_posy };\n\n    }\n\n    showElements = (evt, data) => {\n        this.setState({ elementDetails: true, elmentDetailsData: data });\n        var coordinates = this.getMouseCoordinates(evt);\n        this.setState({ elementDetailsCoordinates: coordinates });\n    }\n\n    closeElements = () => {\n        this.setState({ elementDetails: false });\n    }\n\n    getMonitorHomeData = () => {\n\n        var thisView = this;\n        if (this.monitorHomeToken)\n            this.monitorHomeToken.cancel();\n        this.monitorHomeToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getMonitorHomeData(this.monitorHomeToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ networkInfo: res[0][\"data\"] });\n                    // console.log($(thisView.refs.PreviewGaugeMeter_2));\n                    // $(thisView.refs.PreviewGaugeMeter_2).gaugeMeter({percent:15});\n                    thisView.setState({ callUnderProgress: false });\n                    thisView.setState({ firstCallDone: true })\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n                thisView.setState({ callUnderProgress: false });\n\n            });\n\n    }\n\n    render() {\n\n        const { lineData, elementDetails, elementDetailsCoordinates, networkInfo, elmentDetailsData, firstCallDone } = this.state;\n\n        return (\n            <div className=\"five-g-monitor\">\n                <Grid container spacing={4}>\n                    <Grid item lg={4} md={6} xs={12} className=\"fgm-inner-grid individual-grid-five-g\">\n                        <Widget\n                            title=\"Network Summary\"\n                            upperTitle\n                            bodyclassName={''}\n                            className={'test'}\n                            disableWidgetMenu={true}\n                        >\n                            <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"space-between\"\n                                alignItems=\"center\"\n                            >\n                                <Grid item md={3} xs={12} className=\"text-center\">\n                                    <Typography color=\"text\" colorBrightness=\"secondary\">\n                                        RAN Spectrum Utilization\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={3} xs={12}>\n                                    <div className=\"c100 p33 center\">\n                                        <span>33%</span>\n                                        <div className=\"slice\">\n                                            <div className=\"bar\">\n                                            </div>\n                                            <div className=\"fill\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Grid>\n                                <Grid item md={3} xs={12}>\n                                    <div className=\"c100 p63 center\">\n                                        <span>63%</span>\n                                        <div className=\"slice\">\n                                            <div className=\"bar\">\n                                            </div>\n                                            <div className=\"fill\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Grid>\n                                <Grid item md={3} xs={12} className=\"text-center\">\n                                    <Typography color=\"text\" colorBrightness=\"secondary\">\n                                        Core Network Utilization\n                                    </Typography>\n                                </Grid>\n                                {\n                                    !firstCallDone &&\n                                    <div className=\"each-widget-loading\">\n                                        <img src={loadingIcon} />\n                                    </div>\n                                }\n                            </Grid>\n                            <div className=\"ns-text\">\n                                <span>Top network elements needing attention</span>\n                            </div>\n                            <div className=\"ns-alert\">\n                                {/* <img src={alerticon} alt=\"alert\" /> */}\n                                <Icons.CheckCircle fontSize={\"small\"} className=\"hp-tick-icon\" onClick={this.toggleHandOver} />\n                                <div className=\"nsa-error\">\n                                    <div>\n                                        <span>{networkInfo ? networkInfo.malfunction : ''}</span>\n                                        <span></span>\n                                        {/* <span>Network Failure</span> */}\n                                    </div>\n                                    {/* <div>\n                                        <span>gNB102:</span>\n                                        <span>Malfunctioning</span>\n                                    </div> */}\n                                </div>\n                            </div>\n                        </Widget>\n                    </Grid>\n                    <Grid item lg={4} md={6} xs={12} className=\"fgd-form individual-grid-five-g\">\n                        <Widget\n                            title=\"\"\n                            upperTitle\n                            bodyclassName={''}\n                            className={''}\n                            disableWidgetMenu={true}\n                        >\n                            {\n                                <RadialBarChart\n                                    width={350}\n                                    height={300}\n                                    innerRadius=\"10%\"\n                                    outerRadius=\"80%\"\n                                    data={[\n\n                                        {\n                                            \"name\": \"d\",\n                                            \"uv\": 100,\n                                            \"fill\": \"#ffff\"\n                                        }, {\n                                            \"name\": \"utilization\",\n                                            \"uv\": (networkInfo && networkInfo.count_active_cells && networkInfo.count_available_cells) ? Math.round((networkInfo.count_active_cells / networkInfo.count_available_cells) * 100) : 0,\n                                            \"fill\": \"#0731E2\"\n                                        }\n                                    ]}\n                                    startAngle={180}\n                                    endAngle={0}\n                                >\n                                    <RadialBar minAngle={15} background clockWise={true} dataKey='uv' />\n                                </RadialBarChart>\n                            }\n\n                            <div className=\"fgm-util-each fgmue-first\">\n                                <span>No. of cells available:</span>\n                                <span>{(networkInfo && networkInfo.count_available_cells) ? networkInfo.count_available_cells : '-'}</span>\n                            </div>\n\n                            <div className=\"fgm-util-each\">\n                                <span>No. of cells active:</span>\n                                <span>{(networkInfo && networkInfo.count_active_cells) ? networkInfo.count_active_cells : '-'}</span>\n                            </div>\n\n                            <div className=\"fgm-util-each\">\n                                <span>Percentage Utilization:</span>\n                                <span>{(networkInfo && networkInfo.count_active_cells && networkInfo.count_available_cells) ? Math.round((networkInfo.count_active_cells / networkInfo.count_available_cells) * 100) : '-'}</span>\n                            </div>\n                            {\n                                !firstCallDone &&\n                                <div className=\"each-widget-loading\">\n                                    <img src={loadingIcon} />\n                                </div>\n                            }\n                        </Widget>\n                    </Grid>\n                    <Grid item lg={4} xs={12} className=\"fgd-form individual-grid-five-g\">\n                        <Widget\n                            title=\"Time series of traffic this month\"\n                            upperTitle\n                            bodyclassName={''}\n                            className={''}\n                            disableWidgetMenu={true}\n                        >\n                            <ResponsiveContainer width=\"100%\" height={200}>\n                                <LineChart\n                                    width={500}\n                                    height={200}\n                                    data={lineData}\n                                    margin={{\n                                        top: 10,\n                                        right: 30,\n                                        left: 0,\n                                        bottom: 0,\n                                    }}\n                                >\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                    <XAxis dataKey=\"name\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                    <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                </LineChart>\n                            </ResponsiveContainer>\n                            {\n                                !firstCallDone &&\n                                <div className=\"each-widget-loading\">\n                                    <img src={loadingIcon} />\n                                </div>\n                            }\n                        </Widget>\n                    </Grid>\n                    <Grid item xs={12} className=\"fgd-form individual-grid-five-g\" id=\"network-topology\">\n                        <Widget\n                            title=\"Network Topology\"\n                            upperTitle\n                            bodyclassName={''}\n                            className={''}\n                            customeclassName={'network-topology'}\n                            disableWidgetMenu={true}\n                        >\n\n                            <div className=\"network-topology-container\">\n                                <div className=\"ntc-elements\">\n                                    <div className=\"ntce-main\">\n                                        <div className=\"ntce-elements-top\">\n\n                                            {\n                                                networkInfo && networkInfo.listNFs &&\n                                                Object.keys(networkInfo.listNFs).map((nfsKey, index) => {\n\n                                                    if (index <= Object.keys(networkInfo.listNFs).length / 2) {\n\n                                                        if (networkInfo.listNFs[nfsKey].length === 1) {\n                                                            return (\n                                                                <NavLink key={nfsKey + index} to={this.props.match.path + \"/\" + networkInfo.listNFs[nfsKey][0][\"containerid\"]} className=\"ntce-each\">\n                                                                    <span>{nfsKey}</span>\n                                                                </NavLink>\n                                                            )\n                                                        } else {\n                                                            return (\n                                                                <div key={nfsKey + index} className=\"ntce-each\">\n                                                                    <span onClick={(evt) => { this.showElements(evt, networkInfo.listNFs[nfsKey]) }}>{nfsKey}</span>\n                                                                    <span></span><span></span><span></span>\n                                                                </div>\n                                                            )\n\n                                                        }\n\n\n                                                    }\n\n                                                })\n                                            }\n\n                                        </div>\n                                        <div className=\"ntce-elements-bottom\">\n\n                                            {\n                                                networkInfo && networkInfo.listNFs &&\n                                                Object.keys(networkInfo.listNFs).map((nfsKey, index) => {\n\n                                                    if (index > Object.keys(networkInfo.listNFs).length / 2) {\n\n                                                        if (networkInfo.listNFs[nfsKey].length === 1) {\n                                                            return (\n                                                                <NavLink key={nfsKey + index} to={this.props.match.path + \"/\" + networkInfo.listNFs[nfsKey][0][\"containerid\"]} className=\"ntce-each bottom\">\n                                                                    <span>{nfsKey}</span>\n                                                                </NavLink>\n                                                            )\n                                                        } else {\n                                                            return (\n                                                                <div key={nfsKey + index} className=\"ntce-each bottom\">\n                                                                    <span onClick={(evt) => { this.showElements(evt, networkInfo.listNFs[nfsKey]) }}>{nfsKey}</span>\n                                                                    <span></span><span></span><span></span>\n                                                                </div>\n                                                            )\n                                                        }\n\n\n                                                    }\n\n                                                })\n                                            }\n\n                                            {\n                                                networkInfo && networkInfo.listNFs &&\n                                                Object.keys(networkInfo.listNFs).length % 2 === 1 &&\n                                                <div className=\"ntce-each no-data\" >\n\n                                                </div>\n                                            }\n\n                                        </div>\n                                        <div className=\"ntc-network-line\">\n\n                                        </div>\n                                    </div>\n                                    <div className=\"ntc-spects\">\n                                        <div className=\"ntcs-split\">\n                                            <div className=\"ntcs-each\">\n                                                <span>{(networkInfo && networkInfo.counts_in_topo && networkInfo.counts_in_topo.nfs) ? networkInfo.counts_in_topo.nfs : \"-\"}\n                                                    <sub>NFs</sub></span>\n                                            </div>\n                                            <div className=\"ntcs-each\">\n                                                <span>{(networkInfo && networkInfo.counts_in_topo && networkInfo.counts_in_topo.hasOwnProperty(\"edges\")) ? networkInfo.counts_in_topo.edges : \"-\"}\n                                                    <sub>Edges</sub></span>\n                                            </div>\n                                        </div>\n                                        <div className=\"ntcs-split\">\n                                            <div className=\"ntcs-each\">\n                                                <span>{(networkInfo && networkInfo.counts_in_topo && networkInfo.counts_in_topo.rrhs) ? networkInfo.counts_in_topo.rrhs : \"-\"}\n                                                    <sub>RRHs</sub></span>\n                                            </div>\n                                            <div className=\"ntcs-each\">\n                                                <span>{(networkInfo && networkInfo.counts_in_topo && networkInfo.counts_in_topo.gnbs) ? networkInfo.counts_in_topo.gnbs : \"-\"}\n                                                    <sub>gNBs</sub></span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"ntc-network\">\n                                    <div className=\"ntcn-map\">\n                                        <div className=\"ntc-network-line\"></div>\n                                        <div className=\"ntc-nl-gnbs\">\n\n                                            {\n                                                networkInfo && networkInfo.gnbsUes && networkInfo.gnbsUes.gnb && networkInfo.gnbsUes.gnb.length &&\n                                                networkInfo.gnbsUes.gnb.map((eachGnb) => {\n                                                    return (\n                                                        <NavLink className=\"ntcnlg-each\" key={eachGnb.containerid} to={this.props.match.path + \"/\" + eachGnb.containerid} >\n                                                            <img src={gnbIcons} />\n                                                            <span>{eachGnb.name}</span>\n                                                        </NavLink>\n                                                    )\n                                                })\n                                            }\n\n                                        </div>\n                                    </div>\n                                    <div className=\"ntcn-devices\">\n                                        <div className=\"ntcnd-image\">\n                                            <img src={devicesIcon} alt=\"device\" />\n                                        </div>\n                                        <div className=\"ntcnd-count\">\n                                            <span>Devices</span>\n                                            <span>{(networkInfo && networkInfo.count_available_cells) ? networkInfo.count_available_cells : \"-\"}\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {\n                                !firstCallDone &&\n                                <div className=\"each-widget-loading\">\n                                    <img src={loadingIcon} />\n                                </div>\n                            }\n                        </Widget>\n                        {\n                            elementDetails &&\n                            <div className=\"network-overlay\">\n                                {\n                                    <div className=\"ntce-element-details\" style={{\n                                        left: elementDetailsCoordinates.x + \"px\", top: elementDetailsCoordinates.y + \"px\",\n                                        width: elmentDetailsData ? elmentDetailsData.length * 150 + \"px\" : \"350px\",\n                                        marginLeft: elmentDetailsData ? -1 * elmentDetailsData.length / 2 * 150 + \"px\" : \"-175px\"\n                                    }}>\n\n\n                                        {\n                                            elmentDetailsData && elmentDetailsData.length > 0 &&\n                                            elmentDetailsData.map((eachElement, index) => {\n                                                return (\n                                                    <NavLink key={eachElement.containerid} to={this.props.match.path + \"/\" + eachElement.containerid} className=\"ntceed-each\">\n                                                        <span>{eachElement.name}</span>\n                                                        {\n                                                            eachElement.internet === 'yes' ?\n                                                                <div className=\"ntceed-icons\">\n                                                                    <img src={cloudIcon} alt=\"cloud\" />\n                                                                    <span>Internet</span>\n                                                                </div> :\n                                                                <div className=\"ntceed-icons\">\n                                                                    <img src={serverIcon} alt=\"server\" />\n                                                                    <span>MEC Server</span>\n                                                                </div>\n                                                        }\n                                                        <div className=\"ntceede-connector\"></div>\n                                                    </NavLink>\n                                                )\n                                            })\n                                        }\n                                        <div className=\"ntce-ed-close\">\n                                            <Icons.Close fontSize={\"small\"} className=\"ntce-close-icon\" onClick={this.closeElements} />\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                        }\n                    </Grid>\n                </Grid>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    config: state.config\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonitorNetwork);"]},"metadata":{},"sourceType":"module"}