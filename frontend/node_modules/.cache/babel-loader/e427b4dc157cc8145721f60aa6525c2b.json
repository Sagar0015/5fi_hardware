{"ast":null,"code":"var _jsxFileName = \"/Users/azminds/Documents/five-g/frontend/src/Layout/PrivateRoute.js\";\n/* eslint-disable implicit-arrow-linebreak */\nimport React, { useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = _ref => {\n  let {\n    auth: {\n      isAuthenticated,\n      loading\n    },\n    component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => {\n      if (!isAuthenticated && !loading) {\n        // not logged in so redirect to login page with the return url\n        console.log('props', props.location.pathname.includes('/add-ap'));\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: props.location.pathname.includes('/add-ap') ? 'login' : '/deploy',\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/React.createElement(component, props);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = PrivateRoute;\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useEffect","Route","Redirect","connect","PrivateRoute","auth","isAuthenticated","loading","component","rest","props","console","log","location","pathname","includes","state","from","createElement","mapStateToProps"],"sources":["/Users/azminds/Documents/five-g/frontend/src/Layout/PrivateRoute.js"],"sourcesContent":["/* eslint-disable implicit-arrow-linebreak */\nimport React, { useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nconst PrivateRoute = ({\n  auth: { isAuthenticated, loading },\n  component,\n  ...rest\n}) => {\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!isAuthenticated && !loading) {\n          // not logged in so redirect to login page with the return url\n          console.log('props', props.location.pathname.includes('/add-ap'))\n          return (\n            <Redirect\n              to={{\n                pathname: props.location.pathname.includes('/add-ap') ? 'login' : '/deploy',\n                state: { from: props.location }\n              }}\n            />\n          );\n        }\n\n        return React.createElement(component, props)\n\n      }}\n    />\n  );\n};\n\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,OAAO,QAAQ,aAAa;AAAC;AAGtC,MAAMC,YAAY,GAAG,QAIf;EAAA,IAJgB;IACpBC,IAAI,EAAE;MAAEC,eAAe;MAAEC;IAAQ,CAAC;IAClCC,SAAS;IACT,GAAGC;EACL,CAAC;EAEC,oBACE,QAAC,KAAK;IAAA,GACAA,IAAI;IACR,MAAM,EAAEC,KAAK,IAAI;MACf,IAAI,CAACJ,eAAe,IAAI,CAACC,OAAO,EAAE;QAChC;QACAI,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACjE,oBACE,QAAC,QAAQ;UACP,EAAE,EAAE;YACFD,QAAQ,EAAEJ,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,SAAS,CAAC,GAAG,OAAO,GAAG,SAAS;YAC3EC,KAAK,EAAE;cAAEC,IAAI,EAAEP,KAAK,CAACG;YAAS;UAChC;QAAE;UAAA;UAAA;UAAA;QAAA,QACF;MAEN;MAEA,oBAAOd,KAAK,CAACmB,aAAa,CAACV,SAAS,EAAEE,KAAK,CAAC;IAE9C;EAAE;IAAA;IAAA;IAAA;EAAA,QACF;AAEN,CAAC;AAAC,KA5BIN,YAAY;AA+BlB,MAAMe,eAAe,GAAIH,KAAK,KAAM;EAClCX,IAAI,EAAEW,KAAK,CAACX;AACd,CAAC,CAAC;AAEF,eAAeF,OAAO,CAACgB,eAAe,CAAC,CAACf,YAAY,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}