{"ast":null,"code":"var _jsxFileName = \"/Users/azminds/Documents/five-g/frontend/src/Layout/PublicRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PublicRoute = _ref => {\n  let {\n    auth: {\n      isAuthenticated,\n      loading\n    },\n    component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => {\n      if (isAuthenticated && !loading) {\n        /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this);\n      }\n      return /*#__PURE__*/React.createElement(component, props);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = PublicRoute;\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PublicRoute);\nvar _c;\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"names":["React","Route","Redirect","connect","PublicRoute","auth","isAuthenticated","loading","component","rest","props","pathname","createElement","mapStateToProps","state"],"sources":["/Users/azminds/Documents/five-g/frontend/src/Layout/PublicRoute.js"],"sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PublicRoute = ({\n  auth: { isAuthenticated, loading },\n  component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isAuthenticated && !loading) {\n          <Redirect\n            to={{\n              pathname: \"/\",\n            }}\n          />\n        }\n\n        return (\n          React.createElement(component, props)\n        );\n      }}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PublicRoute);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,OAAO,QAAQ,aAAa;AAAC;AAEtC,MAAMC,WAAW,GAAG,QAId;EAAA,IAJe;IACnBC,IAAI,EAAE;MAAEC,eAAe;MAAEC;IAAQ,CAAC;IAClCC,SAAS;IACT,GAAGC;EACL,CAAC;EACC,oBACE,QAAC,KAAK;IAAA,GACAA,IAAI;IACR,MAAM,EAAGC,KAAK,IAAK;MACjB,IAAIJ,eAAe,IAAI,CAACC,OAAO,EAAE;QAC/B,qBAAC,QAAQ;UACP,EAAE,EAAE;YACFI,QAAQ,EAAE;UACZ;QAAE;UAAA;UAAA;UAAA;QAAA,QACF;MACJ;MAEA,oBACEX,KAAK,CAACY,aAAa,CAACJ,SAAS,EAAEE,KAAK,CAAC;IAEzC;EAAE;IAAA;IAAA;IAAA;EAAA,QACF;AAEN,CAAC;AAAC,KAvBIN,WAAW;AAyBjB,MAAMS,eAAe,GAAIC,KAAK,KAAM;EAClCT,IAAI,EAAES,KAAK,CAACT;AACd,CAAC,CAAC;AAEF,eAAeF,OAAO,CAACU,eAAe,CAAC,CAACT,WAAW,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}