{"ast":null,"code":"module.exports = function (hljs) {\n  var COMMENT = {\n    variants: [hljs.COMMENT('--', '$'), hljs.COMMENT('{-', '-}', {\n      contains: ['self']\n    })]\n  };\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*',\n    // TODO: other constructors (built-in, infix).\n    relevance: 0\n  };\n  var LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [{\n      className: 'type',\n      begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n    }, COMMENT]\n  };\n  var RECORD = {\n    begin: '{',\n    end: '}',\n    contains: LIST.contains\n  };\n  return {\n    keywords: 'let in if then else case of where module import exposing ' + 'type alias as infix infixl infixr port effect command subscription',\n    contains: [\n    // Top-level constructions.\n\n    {\n      beginKeywords: 'port effect module',\n      end: 'exposing',\n      keywords: 'port effect module where command subscription exposing',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      begin: 'import',\n      end: '$',\n      keywords: 'import as exposing',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      begin: 'type',\n      end: '$',\n      keywords: 'type alias',\n      contains: [CONSTRUCTOR, LIST, RECORD, COMMENT]\n    }, {\n      beginKeywords: 'infix infixl infixr',\n      end: '$',\n      contains: [hljs.C_NUMBER_MODE, COMMENT]\n    }, {\n      begin: 'port',\n      end: '$',\n      keywords: 'port',\n      contains: [COMMENT]\n    },\n    // Literals and names.\n\n    // TODO: characters.\n    hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE, CONSTRUCTOR, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '^[_a-z][\\\\w\\']*'\n    }), COMMENT, {\n      begin: '->|<-'\n    } // No markup, relevance booster\n    ],\n\n    illegal: /;/\n  };\n};","map":{"version":3,"names":["module","exports","hljs","COMMENT","variants","contains","CONSTRUCTOR","className","begin","relevance","LIST","end","illegal","RECORD","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE","inherit","TITLE_MODE"],"sources":["/Users/azminds/Documents/five-g/frontend/node_modules/terminal-in-react-pseudo-file-system-plugin/node_modules/highlight.js/lib/languages/elm.js"],"sourcesContent":["module.exports = function(hljs) {\n  var COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        '{-',\n        '-}',\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (built-in, infix).\n    relevance: 0\n  };\n\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n      COMMENT\n    ]\n  };\n\n  var RECORD = {\n    begin: '{', end: '}',\n    contains: LIST.contains\n  };\n\n  return {\n    keywords:\n      'let in if then else case of where module import exposing ' +\n      'type alias as infix infixl infixr port effect command subscription',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'port effect module', end: 'exposing',\n        keywords: 'port effect module where command subscription exposing',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'import', end: '$',\n        keywords: 'import as exposing',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'type', end: '$',\n        keywords: 'type alias',\n        contains: [CONSTRUCTOR, LIST, RECORD, COMMENT]\n      },\n      {\n        beginKeywords: 'infix infixl infixr', end: '$',\n        contains: [hljs.C_NUMBER_MODE, COMMENT]\n      },\n      {\n        begin: 'port', end: '$',\n        keywords: 'port',\n        contains: [COMMENT]\n      },\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n      COMMENT,\n\n      {begin: '->|<-'} // No markup, relevance booster\n    ],\n    illegal: /;/\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B,IAAIC,OAAO,GAAG;IACZC,QAAQ,EAAE,CACRF,IAAI,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,EACvBD,IAAI,CAACC,OAAO,CACV,IAAI,EACJ,IAAI,EACJ;MACEE,QAAQ,EAAE,CAAC,MAAM;IACnB,CAAC,CACF;EAEL,CAAC;EAED,IAAIC,WAAW,GAAG;IAChBC,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE,kBAAkB;IAAE;IAC3BC,SAAS,EAAE;EACb,CAAC;EAED,IAAIC,IAAI,GAAG;IACTF,KAAK,EAAE,KAAK;IAAEG,GAAG,EAAE,KAAK;IACxBC,OAAO,EAAE,GAAG;IACZP,QAAQ,EAAE,CACR;MAACE,SAAS,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAwC,CAAC,EACpEL,OAAO;EAEX,CAAC;EAED,IAAIU,MAAM,GAAG;IACXL,KAAK,EAAE,GAAG;IAAEG,GAAG,EAAE,GAAG;IACpBN,QAAQ,EAAEK,IAAI,CAACL;EACjB,CAAC;EAED,OAAO;IACLS,QAAQ,EACN,2DAA2D,GAC3D,oEAAoE;IACtET,QAAQ,EAAE;IAER;;IAEA;MACEU,aAAa,EAAE,oBAAoB;MAAEJ,GAAG,EAAE,UAAU;MACpDG,QAAQ,EAAE,wDAAwD;MAClET,QAAQ,EAAE,CAACK,IAAI,EAAEP,OAAO,CAAC;MACzBS,OAAO,EAAE;IACX,CAAC,EACD;MACEJ,KAAK,EAAE,QAAQ;MAAEG,GAAG,EAAE,GAAG;MACzBG,QAAQ,EAAE,oBAAoB;MAC9BT,QAAQ,EAAE,CAACK,IAAI,EAAEP,OAAO,CAAC;MACzBS,OAAO,EAAE;IACX,CAAC,EACD;MACEJ,KAAK,EAAE,MAAM;MAAEG,GAAG,EAAE,GAAG;MACvBG,QAAQ,EAAE,YAAY;MACtBT,QAAQ,EAAE,CAACC,WAAW,EAAEI,IAAI,EAAEG,MAAM,EAAEV,OAAO;IAC/C,CAAC,EACD;MACEY,aAAa,EAAE,qBAAqB;MAAEJ,GAAG,EAAE,GAAG;MAC9CN,QAAQ,EAAE,CAACH,IAAI,CAACc,aAAa,EAAEb,OAAO;IACxC,CAAC,EACD;MACEK,KAAK,EAAE,MAAM;MAAEG,GAAG,EAAE,GAAG;MACvBG,QAAQ,EAAE,MAAM;MAChBT,QAAQ,EAAE,CAACF,OAAO;IACpB,CAAC;IAED;;IAEA;IACAD,IAAI,CAACe,iBAAiB,EACtBf,IAAI,CAACc,aAAa,EAClBV,WAAW,EACXJ,IAAI,CAACgB,OAAO,CAAChB,IAAI,CAACiB,UAAU,EAAE;MAACX,KAAK,EAAE;IAAiB,CAAC,CAAC,EACzDL,OAAO,EAEP;MAACK,KAAK,EAAE;IAAO,CAAC,CAAC;IAAA,CAClB;;IACDI,OAAO,EAAE;EACX,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}