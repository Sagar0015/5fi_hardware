{"ast":null,"code":"(function (a, b) {\n  if ('function' == typeof define && define.amd) define(['exports', 'react', 'string-similarity', 'whatkey', 'lodash.isequal', 'styled-components', '../../utils', '../types', './terminal-utils', './styled-elements', '../Bar', '../Content/index', '../Tabs/index'], b);else if ('undefined' != typeof exports) b(exports, require('react'), require('string-similarity'), require('whatkey'), require('lodash.isequal'), require('styled-components'), require('../../utils'), require('../types'), require('./terminal-utils'), require('./styled-elements'), require('../Bar'), require('../Content/index'), require('../Tabs/index'));else {\n    var c = {\n      exports: {}\n    };\n    b(c.exports, a.React, a.stringSimilarity, a.whatkey, a.lodash, a.styledComponents, a.utils, a.types, a.terminalUtils, a.styledElements, a.Bar, a.index, a.index), a.index = c.exports;\n  }\n})(this, function (a, b, c, d, e, f, g, h, j, i, k, l, m) {\n  'use strict';\n\n  function n(a) {\n    return a && a.__esModule ? a : {\n      default: a\n    };\n  }\n  function o(a) {\n    if (Array.isArray(a)) {\n      for (var b = 0, c = Array(a.length); b < a.length; b++) c[b] = a[b];\n      return c;\n    }\n    return Array.from(a);\n  }\n  function p(a, b, c) {\n    return b in a ? Object.defineProperty(a, b, {\n      value: c,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : a[b] = c, a;\n  }\n  function q(a, b) {\n    if (!(a instanceof b)) throw new TypeError('Cannot call a class as a function');\n  }\n  function r(a, b) {\n    if (!a) throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    return b && ('object' == typeof b || 'function' == typeof b) ? b : a;\n  }\n  function s(a, b) {\n    if ('function' != typeof b && null !== b) throw new TypeError('Super expression must either be null or a function, not ' + typeof b);\n    a.prototype = Object.create(b && b.prototype, {\n      constructor: {\n        value: a,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b);\n  }\n  Object.defineProperty(a, '__esModule', {\n    value: !0\n  });\n  var t,\n    u,\n    v = n(b),\n    w = n(c),\n    x = n(d),\n    y = n(e),\n    z = n(k),\n    A = n(l),\n    B = n(m),\n    C = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (a) {\n      return typeof a;\n    } : function (a) {\n      return a && 'function' == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? 'symbol' : typeof a;\n    },\n    D = Object.assign || function (a) {\n      for (var b, c = 1; c < arguments.length; c++) for (var d in b = arguments[c], b) Object.prototype.hasOwnProperty.call(b, d) && (a[d] = b[d]);\n      return a;\n    },\n    E = function () {\n      function a(a, b) {\n        for (var c, d = 0; d < b.length; d++) c = b[d], c.enumerable = c.enumerable || !1, c.configurable = !0, 'value' in c && (c.writable = !0), Object.defineProperty(a, c.key, c);\n      }\n      return function (b, c, d) {\n        return c && a(b.prototype, c), d && a(b, d), b;\n      };\n    }(),\n    F = (u = t = function (a) {\n      function b(a) {\n        q(this, b);\n        var c = r(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));\n        return c.componentWillMount = function () {\n          c.loadPlugins(), c.assembleCommands(), c.setDescriptions(), c.setShortcuts(), c.createTab(!0), c.setState({\n            prompt: c.props.promptSymbol\n          });\n        }, c.componentDidMount = function () {\n          c.props.watchConsoleLogging && c.watchConsoleLogging();\n        }, c.createTab = function () {\n          var a = 0 < arguments.length && void 0 !== arguments[0] && arguments[0],\n            b = c.props.allowTabs;\n          if (a || b) {\n            var d = c.state.tabs,\n              e = (0, j.uuidv4)();\n            d.push(v.default.createElement(A.default, {\n              key: e,\n              id: e,\n              handleChange: c.handleChange,\n              handlerKeyPress: c.handlerKeyPress,\n              register: function () {\n                for (var a = arguments.length, b = Array(a), d = 0; d < a; d++) b[d] = arguments[d];\n                return c.registerInstance.apply(c, [e].concat(b));\n              }\n            })), c.setState({\n              activeTab: e,\n              tabs: d\n            });\n          }\n        }, c.removeTab = function (a) {\n          var b = c.state.tabs;\n          b.splice(a, 1), c.setState({\n            tabs: b\n          });\n        }, c.getAppContent = function () {\n          var a = c.state,\n            b = a.show,\n            d = a.minimise;\n          return b ? d ? c.getBar() : c.getContent() : c.getNote();\n        }, c.getContent = function () {\n          var a = c.props,\n            b = a.style,\n            d = a.showActions,\n            e = a.hideTopBar,\n            f = a.allowTabs,\n            g = a.actionHandlers,\n            h = c.state,\n            i = h.activeTab,\n            j = h.tabs;\n          return v.default.createElement(i.ContainerWrapper, {\n            style: D({}, b)\n          }, !e && v.default.createElement(z.default, D({\n            showActions: d\n          }, g)), f && v.default.createElement(B.default, {\n            active: i,\n            setActiveTab: c.setActiveTab,\n            createTab: c.createTab,\n            removeTab: c.removeTab\n          }), j);\n        }, c.getBar = function () {\n          var a = c.props,\n            b = a.style,\n            d = a.showActions,\n            e = a.actionHandlers;\n          return v.default.createElement(i.ContainerWrapper, {\n            style: D({}, b)\n          }, v.default.createElement(z.default, D({\n            showActions: d\n          }, e)));\n        }, c.getNote = function () {\n          return v.default.createElement(i.Note, null, v.default.createElement('h1', null, 'OOPS! You closed the window.'), v.default.createElement('img', {\n            src: 'https://camo.githubusercontent.com/95ad3fffa11193f85dedbf14ca67e4c5c07182d0/687474703a2f2f69636f6e732e69636f6e617263686976652e636f6d2f69636f6e732f70616f6d656469612f736d616c6c2d6e2d666c61742f313032342f7465726d696e616c2d69636f6e2e706e67',\n            width: '200',\n            height: '200',\n            alt: 'note',\n            onClick: c.toggleState('show')\n          }), 'Click on the icon to reopen.');\n        }, c.getPluginData = function (a) {\n          return c.pluginData[a];\n        }, c.setPluginData = function (a, b) {\n          return c.pluginData[a] = b;\n        }, c.setDescriptions = function () {\n          var a = D({}, c.defaultDesciptions, c.props.descriptions);\n          (0, j.pluginMap)(c.props.plugins, function (b) {\n            b.descriptions && (a = D({}, a, b.descriptions));\n          }), c.setState({\n            descriptions: a\n          });\n        }, c.setShortcuts = function () {\n          var a = (0, j.getShortcuts)({}, c.defaultShortcuts);\n          a = (0, j.getShortcuts)(a, c.props.shortcuts), (0, j.pluginMap)(c.props.plugins, function (b) {\n            b.shortcuts && (a = (0, j.getShortcuts)(a, b.shortcuts));\n          }), c.setState({\n            shortcuts: a\n          });\n        }, c.setPromptPrefix = function (a, b) {\n          a.setState({\n            promptPrefix: b\n          });\n        }, c.setActiveTab = function (a) {\n          c.setState({\n            activeTab: a\n          });\n        }, c.setFalse = function (a) {\n          return function () {\n            return c.setState(p({}, a, !1));\n          };\n        }, c.setTrue = function (a) {\n          return function () {\n            return c.setState(p({}, a, !0));\n          };\n        }, c.setValueWithHistory = function (a, b, c) {\n          var d = a.state.history;\n          d[b] && (a.setState({\n            historyCounter: b\n          }), c.value = d[b]);\n        }, c.registerInstance = function (a, b) {\n          var d = c.state.instances,\n            e = {},\n            f = {},\n            g = d.find(function (b) {\n              return b.index === a;\n            });\n          (0, j.pluginMap)(c.props.plugins, function (a, d) {\n            try {\n              var h,\n                i = {\n                  printLine: c.printLine.bind(c, b),\n                  removeLine: c.removeLine.bind(c, b),\n                  runCommand: c.runCommand.bind(c, b),\n                  setCanScroll: c.setCanScroll.bind(c, b),\n                  setScrollPosition: c.setScrollPosition.bind(c, b),\n                  focusInput: c.focusInput.bind(c, b),\n                  setPromptPrefix: c.setPromptPrefix.bind(c, b),\n                  getPluginMethod: c.getPluginMethod.bind(c, b),\n                  getData: function () {\n                    return c.getPluginData(a.displayName);\n                  },\n                  setData: function (b) {\n                    return c.setPluginData(a.displayName, b);\n                  },\n                  os: j.os\n                };\n              g ? g.pluginInstances[a.displayName].updateApi(i) : (h = new a(i, d), f[a.displayName] = D({}, h.getPublicMethods(), {\n                _getName: function () {\n                  return a.displayName;\n                },\n                _getVersion: function () {\n                  return a.version;\n                }\n              })), e[a.displayName] = h;\n            } catch (b) {\n              console.error('Error instantiating plugin ' + a.displayName, b);\n            }\n          });\n          var h = {\n            index: a,\n            instance: b,\n            pluginMethods: g ? g.pluginMethods : f,\n            pluginInstances: g ? g.pluginInstances : e\n          };\n          if (g) {\n            var i = d.indexOf(g);\n            d[i] = h;\n          } else d.push(h);\n          return c.setState({\n            instances: d\n          }), function () {\n            var a = c.state.instances;\n            c.setState({\n              instances: a.filter(function (a) {\n                return !(0, y.default)(a.instance, b);\n              })\n            });\n          };\n        }, c.toggleState = function (a) {\n          return function () {\n            return c.setState(p({}, a, !c.state[a]));\n          };\n        }, c.assembleCommands = function () {\n          var a = D({}, c.defaultCommands, c.props.commands);\n          (0, j.pluginMap)(c.props.plugins, function (b) {\n            b.commands && (a = D({}, a, b.commands));\n          }), c.setState({\n            commands: (0, j.modCommands)(a)\n          });\n        }, c.autocompleteValue = function (a) {\n          var b = c.state.descriptions,\n            d = Object.keys(b).filter(function (a) {\n              return !1 !== b[a];\n            }),\n            e = w.default.findBestMatch(a.value, d),\n            f = e.bestMatch;\n          return 0.5 <= f.rating ? f.target : a.value;\n        }, c.clearScreen = function (a, b, c, d) {\n          d.setState({\n            summary: []\n          });\n        }, c.checkShortcuts = function (a, b, d) {\n          var e = c.state.instances.find(function (b) {\n              return (0, y.default)(b.instance, a);\n            }),\n            f = c.state.shortcuts;\n          e && Object.values(e.pluginInstances).forEach(function (a) {\n            f = (0, j.getShortcuts)(f, a.shortcuts);\n          });\n          var g = Object.keys(f);\n          if (0 < g.length) {\n            var h = a.state.keyInputs,\n              i = b;\n            'meta' === b && (i = 'darwin' === j.os ? 'cmd' : 'win' === j.os ? 'win' : 'meta'), h.push(i);\n            var k = h.length,\n              l = g.map(function (a, b) {\n                return [a.replace(/\\s/g, '').split('+'), b];\n              }).filter(function (a) {\n                return a[0].length >= h.length;\n              }).filter(function (a) {\n                return (0, y.default)(a[0].slice(0, k), h);\n              });\n            if (!(0 < l.length)) 0 < h.length && a.setState({\n              keyInputs: []\n            });else if (1 === l.length && l[0][0].length === k) {\n              var m = g[l[0][1]],\n                n = f[m];\n              'string' == typeof n ? c.runCommand(a, f[m]) : 'function' == typeof n && (d.preventDefault(), d.stopPropagation(), n()), a.setState({\n                keyInputs: []\n              });\n            }\n          }\n        }, c.editLine = function (a, b, c, d) {\n          var e = d.state.summary,\n            f = a.line;\n          0 > f && (f = 0 === e.length ? 0 : e.length - f), e[f] = a._.join(' '), d.setState({\n            summary: e\n          });\n        }, c.handleChange = function (a, b) {\n          var d = a.state,\n            e = d.input,\n            f = d.promptPrefix,\n            g = d.history;\n          if ('Enter' === b.key && !b.shiftKey) {\n            'undefined' == typeof b.dontShowCommand && c.printLine.bind(c, a)('' + f + c.state.prompt + ' ' + b.target.value, !1), e.push(b.target.value);\n            var h = c.runCommand(a, '' + e.join('\\n'));\n            'undefined' != typeof h && c.printLine.bind(c, a)(h);\n            var i = [].concat(o(g), [b.target.value]);\n            a.setState({\n              input: [],\n              history: i,\n              historyCounter: i.length\n            }), b.target.value = '';\n          } else if ('Enter' === b.key && b.shiftKey) {\n            c.printLine.bind(c, a)('' + f + c.state.prompt + ' ' + b.target.value, !1);\n            var j = [].concat(o(g), [b.target.value]);\n            a.setState({\n              input: [].concat(o(e), [b.target.value]),\n              history: j,\n              historyCounter: j.length\n            }), b.target.value = '';\n          }\n        }, c.handlerKeyPress = function (a, b, d) {\n          var e = (0, x.default)(b).key,\n            f = a.state,\n            g = f.historyCounter,\n            h = f.keyInputs;\n          if (0 === h.length) switch (e) {\n            case 'up':\n              c.setValueWithHistory(a, g - 1, d);\n              break;\n            case 'down':\n              c.setValueWithHistory(a, g + 1, d);\n              break;\n            case 'tab':\n              d.value = c.autocompleteValue(d), b.preventDefault();\n              break;\n            default:\n          }\n          c.checkShortcuts(a, e, b);\n        }, c.loadPlugins = function () {\n          var a = {};\n          (0, j.pluginMap)(c.props.plugins, function (b) {\n            try {\n              a[b.displayName] = b.defaultData;\n            } catch (a) {\n              console.error('Error loading plugin ' + b.displayName, a);\n            }\n          }), c.pluginData = a;\n        }, c.getPluginMethod = function (a, b, d) {\n          var e = c.state.instances.find(function (b) {\n            return (0, y.default)(b.instance, a);\n          });\n          if (e) if (e.pluginMethods[b]) {\n            if (e.pluginMethods[b][d]) return e.pluginMethods[b][d];\n            throw console.log(e.pluginMethods[b]), new Error('No method with name ' + d + ' has been registered for plugin ' + b);\n          } else throw new Error('No plugin with name ' + b + ' has been registered');\n          return null;\n        }, c.setCanScroll = function (a, b) {\n          'undefined' != typeof b && a.setState({\n            canScroll: b\n          });\n        }, c.setScrollPosition = function (a, b) {\n          'number' == typeof b && a.setScrollPosition(b);\n        }, c.focusInput = function (a) {\n          'number' == typeof pos && a.focusInput();\n        }, c.printLine = function (a, b) {\n          var d = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !0,\n            e = !0;\n          if (d) {\n            var f = c.state.instances.find(function (b) {\n              return (0, y.default)(b.instance, a);\n            });\n            if (f) for (var g = f.pluginInstances, h = 0; h < g.length; h += 1) try {\n              e = g[h].readStdOut(b);\n            } catch (a) {}\n          }\n          if (!1 !== e) {\n            var i = a.state.summary;\n            i.push(b), a.setState({\n              summary: i\n            });\n          }\n        }, c.removeLine = function (a) {\n          var b = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : -1,\n            c = a.state.summary;\n          c.splice(b, 1), a.setState({\n            summary: c\n          });\n        }, c.runCommand = function (a, b) {\n          var d = b.split(' '),\n            e = d[0],\n            f = c.state.instances.find(function (b) {\n              return (0, y.default)(b.instance, a);\n            }),\n            g = D({}, c.state.commands);\n          f && Object.values(f.pluginInstances).forEach(function (a) {\n            g = D({}, g, (0, j.modCommands)(a.commands));\n          });\n          var h,\n            i = g[e];\n          if ('' === e) ;else if (void 0 === i) 'function' == typeof c.props.commandPassThrough ? h = c.props.commandPassThrough(d, c.printLine.bind(c, a), c.runCommand.bind(c, a)) : c.printLine.bind(c, a)('-bash:' + e + ': command not found');else {\n            var k = i.parse(d),\n              l = 'undefined' == typeof k ? 'undefined' : C(k);\n            'object' === l && ('object' !== l || k.help) || (h = i.method(k, c.printLine.bind(c, a), c.runCommand.bind(c, a), !0 === i.needsInstance ? a : void 0));\n          }\n          return h;\n        }, c.printToActive = function () {\n          for (var a = arguments.length, b = Array(a), d = 0; d < a; d++) b[d] = arguments[d];\n          var e = c.state.instances.find(function (a) {\n            return a.index === c.state.activeTab;\n          });\n          e && null !== e.instance && c.printLine.apply(c, [e.instance].concat(b));\n        }, c.watchConsoleLogging = function () {\n          (0, g.handleLogging)('log', c.printToActive), (0, g.handleLogging)('info', c.printToActive);\n        }, c.showHelp = function (a, b, d, e) {\n          var f = D({}, c.state.commands),\n            g = D({}, c.state.descriptions),\n            h = c.state.instances.find(function (a) {\n              return (0, y.default)(a.instance, e);\n            });\n          h && Object.values(h.pluginInstances).forEach(function (a) {\n            f = D({}, f, a.commands), g = D({}, g, a.descriptions);\n          });\n          var i = Object.keys(f),\n            j = !0,\n            k = !1,\n            l = void 0;\n          try {\n            for (var m, n, o = i[Symbol.iterator](); !(j = (m = o.next()).done); j = !0) n = m.value, !1 !== g[n] && b(n + ' - ' + g[n]);\n          } catch (a) {\n            k = !0, l = a;\n          } finally {\n            try {\n              !j && o.return && o.return();\n            } finally {\n              if (k) throw l;\n            }\n          }\n        }, c.showMsg = function (a, b) {\n          c.props.msg && 0 < c.props.msg.length && b(c.props.msg);\n        }, c.pluginData = {}, c.defaultCommands = {\n          show: c.showMsg,\n          clear: {\n            method: c.clearScreen,\n            needsInstance: !0\n          },\n          help: {\n            method: c.showHelp,\n            needsInstance: !0\n          },\n          echo: function (a) {\n            return a.slice(1).join(' ');\n          },\n          \"edit-line\": {\n            method: c.editLine,\n            needsInstance: !0,\n            options: [{\n              name: 'line',\n              description: 'the line you want to edit. -1 is the last line',\n              init: function (a) {\n                return parseInt(a, 10);\n              },\n              defaultValue: -1\n            }]\n          }\n        }, c.defaultDesciptions = {\n          show: a.msg && 0 < a.msg.length && 'show the msg',\n          clear: 'clear the screen',\n          help: 'list all the commands',\n          echo: !1,\n          \"edit-line\": !1\n        }, c.defaultShortcuts = {\n          \"win, linux, darwin\": {\n            \"alt + t\": c.createTab\n          },\n          \"win, linux\": {\n            \"ctrl + l\": 'clear'\n          },\n          darwin: {\n            \"cmd + k\": 'clear'\n          }\n        }, c.state = {\n          prompt: '>',\n          commands: {},\n          descriptions: {},\n          show: 'closed' !== a.startState,\n          minimise: 'minimised' === a.startState,\n          maximise: 'maximised' === a.startState,\n          shortcuts: {},\n          activeTab: '',\n          tabs: [],\n          instances: []\n        }, c;\n      }\n      return s(b, a), E(b, [{\n        key: 'getChildContext',\n        value: function () {\n          return {\n            instances: this.state.instances,\n            symbol: this.state.prompt,\n            show: this.state.show,\n            minimise: this.state.minimise,\n            maximise: this.state.maximise,\n            activeTab: this.state.activeTab,\n            barShowing: !this.props.hideTopBar,\n            tabsShowing: this.props.allowTabs,\n            openWindow: this.setTrue('show'),\n            closeWindow: this.setFalse('show'),\n            minimiseWindow: this.setTrue('minimise'),\n            unminimiseWindow: this.setFalse('minimise'),\n            maximiseWindow: this.setTrue('maximise'),\n            unmaximiseWindow: this.setFalse('maximise'),\n            toggleShow: this.toggleState('show'),\n            toggleMaximise: this.toggleState('maximise'),\n            toggleMinimize: this.toggleState('minimise')\n          };\n        }\n      }, {\n        key: 'render',\n        value: function () {\n          var a = {\n            color: this.props.color,\n            prompt: this.props.prompt,\n            barColor: this.props.barColor,\n            backgroundColor: this.props.backgroundColor\n          };\n          return v.default.createElement(f.ThemeProvider, {\n            theme: a\n          }, v.default.createElement(i.Base, {\n            className: 'terminal-base',\n            fullscreen: this.state.maximise\n          }, this.getAppContent()));\n        }\n      }]), b;\n    }(b.Component), t.displayName = 'Terminal', t.propTypes = h.TerminalPropTypes, t.defaultProps = h.TerminalDefaultProps, t.childContextTypes = h.TerminalContextTypes, u);\n  a.default = F;\n});","map":{"version":3,"mappings":"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","names":["q","componentWillMount","c","loadPlugins","assembleCommands","setDescriptions","setShortcuts","createTab","setState","prompt","props","promptSymbol","componentDidMount","watchConsoleLogging","b","allowTabs","a","state","tabs","e","d","push","v","key","id","handleChange","handlerKeyPress","register","registerInstance","activeTab","removeTab","splice","getAppContent","show","minimise","getBar","getContent","getNote","style","showActions","hideTopBar","f","g","actionHandlers","h","i","j","active","setActiveTab","src","width","height","alt","onClick","toggleState","getPluginData","pluginData","setPluginData","defaultDesciptions","descriptions","plugins","defaultShortcuts","shortcuts","setPromptPrefix","promptPrefix","setFalse","setTrue","setValueWithHistory","history","historyCounter","value","instances","find","index","printLine","bind","removeLine","runCommand","setCanScroll","setScrollPosition","focusInput","getPluginMethod","getData","displayName","setData","os","pluginInstances","updateApi","getPublicMethods","_getName","_getVersion","version","console","error","instance","pluginMethods","indexOf","filter","defaultCommands","commands","autocompleteValue","Object","keys","w","findBestMatch","bestMatch","rating","target","clearScreen","summary","checkShortcuts","values","forEach","length","keyInputs","k","l","map","replace","split","slice","m","n","preventDefault","stopPropagation","editLine","line","_","join","input","shiftKey","dontShowCommand","defaultData","log","Error","canScroll","pos","readStdOut","commandPassThrough","parse","help","method","needsInstance","printToActive","showHelp","showMsg","msg","clear","echo","options","name","description","init","parseInt","defaultValue","darwin","startState","maximise","symbol","barShowing","tabsShowing","openWindow","closeWindow","minimiseWindow","unminimiseWindow","maximiseWindow","unmaximiseWindow","toggleShow","toggleMaximise","toggleMinimize","color","barColor","backgroundColor","theme","className","fullscreen","propTypes","defaultProps","childContextTypes"],"sources":["../../../../src/js/components/Terminal/index.js"],"sourcesContent":["/* eslint-disable no-console, react/sort-comp */\nimport React, {Component} from 'react'; // eslint-disable-line\nimport stringSimilarity from 'string-similarity';\nimport whatkey from 'whatkey';\nimport isEqual from 'lodash.isequal';\nimport { ThemeProvider } from 'styled-components';\nimport { handleLogging } from '../../utils';\nimport {\n  TerminalPropTypes,\n  TerminalContextTypes,\n  TerminalDefaultProps,\n} from '../types';\n\nimport { os, pluginMap, uuidv4, getShortcuts, modCommands } from './terminal-utils';\n\nimport { Base, ContainerWrapper, Note } from './styled-elements';\n\nimport Bar from '../Bar';\nimport Content from '../Content/index';\nimport Tabs from '../Tabs/index';\n\nclass Terminal extends Component {\n  static displayName = 'Terminal';\n\n  static propTypes = TerminalPropTypes;\n\n  static defaultProps = TerminalDefaultProps;\n\n  static childContextTypes = TerminalContextTypes;\n\n  constructor(props) {\n    super(props);\n\n    this.pluginData = {};\n\n    this.defaultCommands = {\n      // eslint-disable-line react/sort-comp\n      show: this.showMsg,\n      clear: {\n        method: this.clearScreen,\n        needsInstance: true,\n      },\n      help: {\n        method: this.showHelp,\n        needsInstance: true,\n      },\n      echo: input => input.slice(1).join(' '),\n      'edit-line': {\n        method: this.editLine,\n        needsInstance: true,\n        options: [\n          {\n            name: 'line',\n            description: 'the line you want to edit. -1 is the last line',\n            init: value => parseInt(value, 10),\n            defaultValue: -1,\n          },\n        ],\n      },\n    };\n\n    this.defaultDesciptions = {\n      show: (props.msg && props.msg.length > 0) ? 'show the msg' : false,\n      clear: 'clear the screen',\n      help: 'list all the commands',\n      echo: false,\n      'edit-line': false,\n    };\n\n    this.defaultShortcuts = {\n      'win, linux, darwin': {\n        'alt + t': this.createTab,\n      },\n      'win, linux': {\n        'ctrl + l': 'clear',\n      },\n      darwin: {\n        'cmd + k': 'clear',\n      },\n    };\n\n    this.state = {\n      prompt: '>',\n      commands: {},\n      descriptions: {},\n      show: props.startState !== 'closed',\n      minimise: props.startState === 'minimised',\n      maximise: props.startState === 'maximised',\n      shortcuts: {},\n      activeTab: '',\n      tabs: [],\n      instances: [],\n    };\n  }\n\n  getChildContext() {\n    return {\n      instances: this.state.instances,\n      symbol: this.state.prompt,\n      show: this.state.show,\n      minimise: this.state.minimise,\n      maximise: this.state.maximise,\n      activeTab: this.state.activeTab,\n      barShowing: !this.props.hideTopBar,\n      tabsShowing: this.props.allowTabs,\n      openWindow: this.setTrue('show'),\n      closeWindow: this.setFalse('show'),\n      minimiseWindow: this.setTrue('minimise'),\n      unminimiseWindow: this.setFalse('minimise'),\n      maximiseWindow: this.setTrue('maximise'),\n      unmaximiseWindow: this.setFalse('maximise'),\n      toggleShow: this.toggleState('show'),\n      toggleMaximise: this.toggleState('maximise'),\n      toggleMinimize: this.toggleState('minimise'),\n    };\n  }\n\n  // Prepare the symbol\n  componentWillMount = () => {\n    this.loadPlugins();\n    this.assembleCommands();\n    this.setDescriptions();\n    this.setShortcuts();\n\n    this.createTab(true);\n    this.setState({ prompt: this.props.promptSymbol });\n  };\n\n  // Load everything!\n  componentDidMount = () => {\n    if (this.props.watchConsoleLogging) {\n      this.watchConsoleLogging();\n    }\n  };\n\n  // Tab creation\n  createTab = (force = false) => {\n    const { allowTabs } = this.props;\n    if (force || allowTabs) {\n      const { tabs } = this.state;\n      const id = uuidv4();\n\n      tabs.push((\n        <Content\n          key={id}\n          id={id}\n          handleChange={this.handleChange}\n          handlerKeyPress={this.handlerKeyPress}\n          register={(...args) => this.registerInstance(id, ...args)}\n        />\n      ));\n\n      this.setState({ activeTab: id, tabs });\n    }\n  };\n\n  // Tab removal\n  removeTab = (index) => {\n    const { tabs } = this.state;\n    tabs.splice(index, 1);\n    this.setState({ tabs });\n  }\n\n  // Show the content on toggling\n  getAppContent = () => {\n    const { show, minimise } = this.state;\n    if (!show) {\n      return this.getNote();\n    }\n    if (minimise) {\n      return this.getBar();\n    }\n    return this.getContent();\n  };\n\n  // Shows the full window (normal window)\n  getContent = () => {\n    const {\n      style,\n      showActions,\n      hideTopBar,\n      allowTabs,\n      actionHandlers,\n    } = this.props;\n    const { activeTab, tabs } = this.state;\n\n    return (\n      <ContainerWrapper style={{ ...style }}>\n        {!hideTopBar && (\n          <Bar showActions={showActions} {...actionHandlers} />\n        )}\n        {allowTabs && (\n          <Tabs\n            active={activeTab}\n            setActiveTab={this.setActiveTab}\n            createTab={this.createTab}\n            removeTab={this.removeTab}\n          />\n        )}\n        {tabs}\n      </ContainerWrapper>\n    );\n  };\n\n  // Show only bar (minimise)\n  getBar = () => {\n    const { style, showActions, actionHandlers } = this.props;\n\n    return (\n      <ContainerWrapper style={{ ...style }}>\n        <Bar\n          showActions={showActions}\n          {...actionHandlers}\n        />\n      </ContainerWrapper>\n    );\n  };\n\n  // Show msg (on window close)\n  getNote = () => (\n    <Note>\n      <h1>OOPS! You closed the window.</h1>\n      <img\n        src=\"https://camo.githubusercontent.com/95ad3fffa11193f85dedbf14ca67e4c5c07182d0/687474703a2f2f69636f6e732e69636f6e617263686976652e636f6d2f69636f6e732f70616f6d656469612f736d616c6c2d6e2d666c61742f313032342f7465726d696e616c2d69636f6e2e706e67\"\n        width=\"200\"\n        height=\"200\"\n        alt=\"note\"\n        onClick={this.toggleState('show')}\n      />\n      Click on the icon to reopen.\n    </Note>\n  );\n\n  // Plugin data getter\n  getPluginData = name => this.pluginData[name];\n\n  // Plugin data setter\n  setPluginData = (name, data) => (this.pluginData[name] = data);\n\n  // Set descriptions of the commands\n  setDescriptions = () => {\n    let descriptions = {\n      ...this.defaultDesciptions,\n      ...this.props.descriptions,\n    };\n    pluginMap(this.props.plugins, (plugin) => {\n      if (plugin.descriptions) {\n        descriptions = {\n          ...descriptions,\n          ...plugin.descriptions,\n        };\n      }\n    });\n    this.setState({ descriptions });\n  };\n\n  // Set command shortcuts\n  setShortcuts = () => {\n    let shortcuts = getShortcuts({}, this.defaultShortcuts);\n    shortcuts = getShortcuts(shortcuts, this.props.shortcuts);\n    pluginMap(this.props.plugins, (plugin) => {\n      if (plugin.shortcuts) {\n        shortcuts = getShortcuts(shortcuts, plugin.shortcuts);\n      }\n    });\n    this.setState({ shortcuts });\n  };\n\n  // Setter to change the prefix of the input prompt\n  setPromptPrefix = (instance, promptPrefix) => {\n    instance.setState({ promptPrefix });\n  };\n\n  // Set the currently active tab\n  setActiveTab = (activeTab) => {\n    this.setState({ activeTab });\n  };\n\n  // Hide window\n  setFalse = name => () => this.setState({ [name]: false });\n\n  // Show window\n  setTrue = name => () => this.setState({ [name]: true });\n\n  /**\n   * set the input value with the possible history value\n   * @param {number} next position on the history\n   */\n  setValueWithHistory = (instance, position, inputRef) => {\n    const { history } = instance.state;\n    if (history[position]) {\n      instance.setState({ historyCounter: position });\n      inputRef.value = history[position];\n    }\n  };\n\n  // Used to keep track of all instances\n  registerInstance = (index, instance) => {\n    const { instances } = this.state;\n    const pluginInstances = {};\n    const pluginMethods = {};\n\n    const old = instances.find(i => i.index === index);\n\n    pluginMap(this.props.plugins, (PluginClass, config) => {\n      try {\n        const api = {\n          printLine: this.printLine.bind(this, instance),\n          removeLine: this.removeLine.bind(this, instance),\n          runCommand: this.runCommand.bind(this, instance),\n          setCanScroll: this.setCanScroll.bind(this, instance),\n          setScrollPosition: this.setScrollPosition.bind(this, instance),\n          focusInput: this.focusInput.bind(this, instance),\n          setPromptPrefix: this.setPromptPrefix.bind(this, instance),\n          getPluginMethod: this.getPluginMethod.bind(this, instance),\n          getData: () => this.getPluginData(PluginClass.displayName),\n          setData: data => this.setPluginData(PluginClass.displayName, data),\n          os,\n        };\n\n        let plugin;\n        if (old) {\n          old.pluginInstances[PluginClass.displayName].updateApi(api);\n        } else {\n          plugin = new PluginClass(api, config);\n          pluginMethods[PluginClass.displayName] = {\n            ...plugin.getPublicMethods(),\n            _getName: () => PluginClass.displayName,\n            _getVersion: () => PluginClass.version,\n          };\n        }\n\n        pluginInstances[PluginClass.displayName] = plugin;\n      } catch (e) {\n        console.error(`Error instantiating plugin ${PluginClass.displayName}`, e); // eslint-disable-line no-console\n      }\n    });\n\n    const data = {\n      index,\n      instance,\n      pluginMethods: old ? old.pluginMethods : pluginMethods,\n      pluginInstances: old ? old.pluginInstances : pluginInstances,\n    };\n\n    if (old) {\n      const realIndex = instances.indexOf(old);\n      instances[realIndex] = data;\n    } else {\n      instances.push(data);\n    }\n\n    this.setState({ instances });\n\n    return () => {\n      const insts = this.state.instances;\n      this.setState({\n        instances: insts.filter(i => !isEqual(i.instance, instance)),\n      });\n    };\n  }\n\n  // Toggle a state boolean\n  toggleState = name => () => this.setState({ [name]: !this.state[name] });\n\n  // Prepare the built-in commands\n  assembleCommands = () => {\n    let commands = {\n      ...this.defaultCommands,\n      ...this.props.commands,\n    };\n\n    pluginMap(this.props.plugins, (plugin) => {\n      if (plugin.commands) {\n        commands = {\n          ...commands,\n          ...plugin.commands,\n        };\n      }\n    });\n\n    this.setState({ commands: modCommands(commands) });\n  };\n\n  /**\n   * autocomplete with the command the have the best match\n   * @param {object} input reference\n   */\n  autocompleteValue = (inputRef) => {\n    const { descriptions } = this.state;\n    const keysToCheck = Object.keys(descriptions).filter(\n      key => descriptions[key] !== false,\n    );\n    const { bestMatch } = stringSimilarity.findBestMatch(\n      inputRef.value,\n      keysToCheck,\n    );\n\n    if (bestMatch.rating >= 0.5) {\n      return bestMatch.target;\n    }\n\n    return inputRef.value;\n  };\n\n  // Refresh or clear the screen\n  clearScreen = (args, printLine, runCommand, instance) => {\n    instance.setState({ summary: [] });\n  };\n\n  // Method to check for shortcut and invoking commands\n  checkShortcuts = (instance, key, e) => {\n    const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n    let cuts = this.state.shortcuts;\n    if (instanceData) {\n      Object.values(instanceData.pluginInstances).forEach((i) => {\n        cuts = getShortcuts(cuts, i.shortcuts);\n      });\n    }\n\n    const shortcuts = Object.keys(cuts);\n    if (shortcuts.length > 0) {\n      const { keyInputs } = instance.state;\n      let modKey = key;\n      if (key === 'meta') {\n        // eslint-disable-next-line no-nested-ternary\n        modKey = os === 'darwin' ? 'cmd' : os === 'win' ? 'win' : 'meta';\n      }\n      keyInputs.push(modKey);\n      const len = keyInputs.length;\n\n      const options = shortcuts\n        .map((cut, i) => [cut.replace(/\\s/g, '').split('+'), i])\n        .filter(cut => cut[0].length >= keyInputs.length)\n        .filter(cut => isEqual(cut[0].slice(0, len), keyInputs));\n\n      if (options.length > 0) {\n        if (options.length === 1 && options[0][0].length === len) {\n          const shortcut = shortcuts[options[0][1]];\n          const action = cuts[shortcut];\n          if (typeof action === 'string') {\n            this.runCommand(instance, cuts[shortcut]);\n          } else if (typeof action === 'function') {\n            e.preventDefault();\n            e.stopPropagation();\n            action();\n          }\n          instance.setState({ keyInputs: [] });\n        }\n      } else if (keyInputs.length > 0) {\n        instance.setState({ keyInputs: [] });\n      }\n    }\n  };\n\n  // edit-line command\n  editLine = (args, printLine, runCommand, instance) => {\n    const { summary } = instance.state;\n    let index = args.line;\n    if (index < 0) {\n      index = summary.length === 0 ? 0 : summary.length - index;\n    }\n    summary[index] = args._.join(' ');\n    instance.setState({ summary });\n  };\n\n  // Listen for user input\n  handleChange = (instance, e) => {\n    const { input, promptPrefix, history } = instance.state;\n    if (e.key === 'Enter' && !e.shiftKey) {\n      if (typeof e.dontShowCommand === 'undefined') {\n        this.printLine.bind(this, instance)(\n          `${promptPrefix}${this.state.prompt} ${e.target.value}`,\n          false,\n        );\n      }\n\n      input.push(e.target.value);\n      const res = this.runCommand(instance, `${input.join('\\n')}`);\n\n      if (typeof res !== 'undefined') {\n        this.printLine.bind(this, instance)(res);\n      }\n\n      const newHistory = [...history, e.target.value];\n      instance.setState({\n        input: [],\n        history: newHistory,\n        historyCounter: newHistory.length,\n      });\n      e.target.value = ''; // eslint-disable-line no-param-reassign\n    } else if (e.key === 'Enter' && e.shiftKey) {\n      this.printLine.bind(this, instance)(\n        `${promptPrefix}${this.state.prompt} ${e.target.value}`,\n        false,\n      );\n      const newHistory = [...history, e.target.value];\n      instance.setState({\n        input: [...input, e.target.value],\n        history: newHistory,\n        historyCounter: newHistory.length,\n      });\n      e.target.value = ''; // eslint-disable-line no-param-reassign\n    }\n  };\n\n  /**\n   * Base of key code set the value of the input\n   * with the history\n   * @param {event} event of input\n   */\n  handlerKeyPress = (instance, e, inputRef) => {\n    const key = whatkey(e).key;\n    const { historyCounter, keyInputs } = instance.state;\n    if (keyInputs.length === 0) {\n      switch (key) {\n        case 'up':\n          this.setValueWithHistory(instance, historyCounter - 1, inputRef);\n          break;\n        case 'down':\n          this.setValueWithHistory(instance, historyCounter + 1, inputRef);\n          break;\n        case 'tab':\n          inputRef.value = this.autocompleteValue(inputRef);\n          e.preventDefault();\n          break;\n        default:\n          break;\n      }\n    }\n    this.checkShortcuts(instance, key, e);\n  }\n\n  // Plugins\n  loadPlugins = () => {\n    const pluginData = {};\n    pluginMap(this.props.plugins, (plugin) => {\n      try {\n        pluginData[plugin.displayName] = plugin.defaultData;\n      } catch (e) {\n        console.error(`Error loading plugin ${plugin.displayName}`, e); // eslint-disable-line no-console\n      }\n    });\n    this.pluginData = pluginData;\n  };\n\n  // Plugin api method to get a public plugin method\n  getPluginMethod = (instance, name, method) => {\n    const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n    if (instanceData) {\n      if (instanceData.pluginMethods[name]) {\n        if (instanceData.pluginMethods[name][method]) {\n          return instanceData.pluginMethods[name][method];\n        }\n        console.log(instanceData.pluginMethods[name]);\n        throw new Error(\n          `No method with name ${method} has been registered for plugin ${name}`,\n        );\n      } else {\n        throw new Error(`No plugin with name ${name} has been registered`);\n      }\n    }\n    return null;\n  };\n\n  // Set if the current tab can scroll\n  setCanScroll = (instance, force) => {\n    if (typeof force !== 'undefined') {\n      instance.setState({ canScroll: force });\n    }\n  }\n\n  // Set the scroll position of the contents\n  setScrollPosition = (instance, pos) => {\n    if (typeof pos === 'number') {\n      instance.setScrollPosition(pos);\n    }\n  }\n\n  // Set focus to the input\n  focusInput = (instance) => {\n    if (typeof pos === 'number') {\n      instance.focusInput();\n    }\n  }\n\n  // Print the summary (input -> output)\n  printLine = (instance, inp, std = true) => {\n    let print = true;\n    if (std) {\n      const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n      if (instanceData) {\n        const plugins = instanceData.pluginInstances;\n        for (let i = 0; i < plugins.length; i += 1) {\n          try {\n            print = plugins[i].readStdOut(inp);\n          } catch (e) {\n            // Do nothing\n          }\n        }\n      }\n    }\n\n    if (print !== false) {\n      const summary = instance.state.summary;\n      summary.push(inp);\n      instance.setState({ summary });\n    }\n  };\n\n  // Remove a line from the summary\n  removeLine = (instance, lineNumber = -1) => {\n    const summary = instance.state.summary;\n    summary.splice(lineNumber, 1);\n    instance.setState({ summary });\n  }\n\n  // Execute the commands\n  runCommand = (instance, inputText) => {\n    const inputArray = inputText.split(' ');\n    const input = inputArray[0];\n    const args = inputArray; // Undefined for function call\n    const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n    let commands = { ...this.state.commands };\n    if (instanceData) {\n      Object.values(instanceData.pluginInstances).forEach((i) => {\n        commands = {\n          ...commands,\n          ...modCommands(i.commands),\n        };\n      });\n    }\n    const command = commands[input];\n    let res;\n\n    if (input === '') {\n      // do nothing\n    } else if (command === undefined) {\n      if (typeof this.props.commandPassThrough === 'function') {\n        res = this.props.commandPassThrough(\n          inputArray,\n          this.printLine.bind(this, instance),\n          this.runCommand.bind(this, instance),\n        );\n      } else {\n        this.printLine.bind(this, instance)(`-bash:${input}: command not found`);\n      }\n    } else {\n      const parsedArgs = command.parse(args);\n      const type = typeof parsedArgs;\n      if (type !== 'object' || (type === 'object' && !parsedArgs.help)) {\n        res = command.method(\n          parsedArgs,\n          this.printLine.bind(this, instance),\n          this.runCommand.bind(this, instance),\n          command.needsInstance === true ? instance : undefined,\n        );\n      }\n    }\n    return res;\n  };\n\n  // Print to active instance\n  printToActive = (...args) => {\n    const data = this.state.instances.find(i => i.index === this.state.activeTab);\n    if (data && data.instance !== null) {\n      this.printLine(data.instance, ...args);\n    }\n  }\n\n  // Listen for console logging and pass the input to handler (handleLogging)\n  watchConsoleLogging = () => {\n    handleLogging('log', this.printToActive);\n    handleLogging('info', this.printToActive);\n    // handleLogging('warn', this.printToActive);\n    // handleLogging('error', this.printToActive);\n  };\n\n  // List all the commands (state + user defined)\n  showHelp = (args, printLine, runCommand, instance) => {\n    let commands = { ...this.state.commands };\n    let descriptions = { ...this.state.descriptions };\n    const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n    if (instanceData) {\n      Object.values(instanceData.pluginInstances).forEach((i) => {\n        commands = {\n          ...commands,\n          ...i.commands,\n        };\n        descriptions = {\n          ...descriptions,\n          ...i.descriptions,\n        };\n      });\n    }\n    const options = Object.keys(commands);\n\n    for (const option of options) {\n      // eslint-disable-line no-restricted-syntax\n      if (descriptions[option] !== false) {\n        printLine(`${option} - ${descriptions[option]}`);\n      }\n    }\n  };\n\n  // Show the msg (prop msg)\n  showMsg = (args, printLine) => {\n    if (this.props.msg && this.props.msg.length > 0) {\n      printLine(this.props.msg);\n    }\n  };\n\n  render() {\n    const theme = {\n      color: this.props.color,\n      prompt: this.props.prompt,\n      barColor: this.props.barColor,\n      backgroundColor: this.props.backgroundColor,\n    };\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Base\n          className=\"terminal-base\"\n          fullscreen={this.state.maximise}\n        >\n          {this.getAppContent()}\n        </Base>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default Terminal;\n"]},"metadata":{},"sourceType":"script"}