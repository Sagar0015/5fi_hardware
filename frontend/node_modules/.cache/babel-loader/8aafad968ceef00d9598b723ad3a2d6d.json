{"ast":null,"code":"var _jsxFileName = \"/Users/azminds/Documents/five-g/frontend/src/pages/device/components/CustomTable.jsx\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  [`&.${tableCellClasses.head}`]: {\n    background: '#F4F4F5 0% 0% no-repeat padding-box',\n    color: '#111111',\n    fontStyle: 'normal',\n    fontSize: '13px',\n    lineHeight: '24px',\n    fontFamily: 'Poppins, sans-serif',\n    fontWeight: 'bold',\n    border: '1px solid #E2E3E3'\n  },\n  [`&.${tableCellClasses.body}`]: {\n    color: '#030303',\n    fontStyle: 'normal',\n    fontSize: '16px',\n    lineHeight: '25px',\n    fontFamily: 'Poppins, sans-serif',\n    border: '1px solid #E2E3E3'\n  }\n}));\nconst StyledTableRow = styled(TableRow)(({\n  theme\n}) => ({}));\nexport default function CustomTable({\n  tableData\n}) {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 700\n      },\n      \"aria-label\": \"customized table\",\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"IMSI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Assign Devices type/Network slice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: tableData.map(data => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: data.imsi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: data.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: data.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = CustomTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTable\");","map":{"version":3,"sources":["/Users/azminds/Documents/five-g/frontend/src/pages/device/components/CustomTable.jsx"],"names":["React","styled","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","StyledTableCell","theme","head","background","color","fontStyle","fontSize","lineHeight","fontFamily","fontWeight","border","body","StyledTableRow","CustomTable","tableData","minWidth","map","data","imsi","type","status","id"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,IAAoBC,gBAApB,QAA4C,yBAA5C;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,eAAe,GAAGT,MAAM,CAACG,SAAD,CAAN,CAAkB,CAAC;AAAEO,EAAAA;AAAF,CAAD,MAAgB;AACxD,GAAE,KAAIN,gBAAgB,CAACO,IAAK,EAA5B,GAAgC;AAC9BC,IAAAA,UAAU,EAAE,qCADkB;AAE9BC,IAAAA,KAAK,EAAE,SAFuB;AAG9BC,IAAAA,SAAS,EAAE,QAHmB;AAI9BC,IAAAA,QAAQ,EAAE,MAJoB;AAK9BC,IAAAA,UAAU,EAAE,MALkB;AAM9BC,IAAAA,UAAU,EAAE,qBANkB;AAO9BC,IAAAA,UAAU,EAAE,MAPkB;AAQ9BC,IAAAA,MAAM,EAAE;AARsB,GADwB;AAWxD,GAAE,KAAIf,gBAAgB,CAACgB,IAAK,EAA5B,GAAgC;AAC9BP,IAAAA,KAAK,EAAE,SADuB;AAE9BC,IAAAA,SAAS,EAAE,QAFmB;AAG9BC,IAAAA,QAAQ,EAAE,MAHoB;AAI9BC,IAAAA,UAAU,EAAE,MAJkB;AAK9BC,IAAAA,UAAU,EAAE,qBALkB;AAM9BE,IAAAA,MAAM,EAAE;AANsB;AAXwB,CAAhB,CAAlB,CAAxB;AAqBA,MAAME,cAAc,GAAGrB,MAAM,CAACO,QAAD,CAAN,CAAiB,CAAC;AAAEG,EAAAA;AAAF,CAAD,MAAgB,EAAhB,CAAjB,CAAvB;AAEA,eAAe,SAASY,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAoC;AACjD,sBACE,QAAC,cAAD;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAX;AAA8B,oBAAW,kBAAzC;AAA4D,MAAA,IAAI,EAAC,OAAjE;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,SAAD;AAAA,kBACGD,SAAS,CAACE,GAAV,CAAeC,IAAD,iBACb,QAAC,cAAD;AAAA,kCACE,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC,IAA3B;AAAgC,YAAA,KAAK,EAAC,KAAtC;AAAA,sBACGA,IAAI,CAACC;AADR;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,eAAD;AAAA,sBAAkBD,IAAI,CAACE;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,eAAD;AAAA,sBAAkBF,IAAI,CAACG;AAAvB;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA,WAAqBH,IAAI,CAACI,EAA1B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;KAzBuBR,W","sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    background: '#F4F4F5 0% 0% no-repeat padding-box',\n    color: '#111111',\n    fontStyle: 'normal',\n    fontSize: '13px',\n    lineHeight: '24px',\n    fontFamily: 'Poppins, sans-serif',\n    fontWeight: 'bold',\n    border: '1px solid #E2E3E3'\n  },\n  [`&.${tableCellClasses.body}`]: {\n    color: '#030303',\n    fontStyle: 'normal',\n    fontSize: '16px',\n    lineHeight: '25px',\n    fontFamily: 'Poppins, sans-serif',\n    border: '1px solid #E2E3E3'\n  }\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({}));\n\nexport default function CustomTable({ tableData }) {\n  return (\n    <TableContainer>\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>IMSI</StyledTableCell>\n            <StyledTableCell>Assign Devices type/Network slice</StyledTableCell>\n            <StyledTableCell>Status</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tableData.map((data) => (\n            <StyledTableRow key={data.id}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {data.imsi}\n              </StyledTableCell>\n              <StyledTableCell>{data.type}</StyledTableCell>\n              <StyledTableCell>{data.status}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}