{"ast":null,"code":"/** @license React v16.2.0\n * react.development.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function () {\n    'use strict';\n\n    var _assign = require('object-assign');\n    var emptyObject = require('fbjs/lib/emptyObject');\n    var invariant = require('fbjs/lib/invariant');\n    var warning = require('fbjs/lib/warning');\n    var emptyFunction = require('fbjs/lib/emptyFunction');\n    var checkPropTypes = require('prop-types/checkPropTypes');\n\n    // TODO: this is special because it gets imported during build.\n\n    var ReactVersion = '16.2.0';\n\n    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n    // nor polyfill, then a plain number is used for performance.\n    var hasSymbol = typeof Symbol === 'function' && Symbol['for'];\n    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol['for']('react.element') : 0xeac7;\n    var REACT_CALL_TYPE = hasSymbol ? Symbol['for']('react.call') : 0xeac8;\n    var REACT_RETURN_TYPE = hasSymbol ? Symbol['for']('react.return') : 0xeac9;\n    var REACT_PORTAL_TYPE = hasSymbol ? Symbol['for']('react.portal') : 0xeaca;\n    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol['for']('react.fragment') : 0xeacb;\n    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator';\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable === 'undefined') {\n        return null;\n      }\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n      if (typeof maybeIterator === 'function') {\n        return maybeIterator;\n      }\n      return null;\n    }\n\n    /**\n     * WARNING: DO NOT manually require this module.\n     * This is a replacement for `invariant(...)` used by the error code system\n     * and will _only_ be required by the corresponding babel pass.\n     * It always throws.\n     */\n\n    /**\n     * Forked from fbjs/warning:\n     * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n     *\n     * Only change is we use console.warn instead of console.error,\n     * and do nothing when 'console' is not supported.\n     * This really simplifies the code.\n     * ---\n     * Similar to invariant but only logs a warning if the condition is not met.\n     * This can be used to log issues in development environments in critical\n     * paths. Removing the logging code for production environments will keep the\n     * same logic and follow the same code paths.\n     */\n\n    var lowPriorityWarning = function () {};\n    {\n      var printWarning = function (format) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        var argIndex = 0;\n        var message = 'Warning: ' + format.replace(/%s/g, function () {\n          return args[argIndex++];\n        });\n        if (typeof console !== 'undefined') {\n          console.warn(message);\n        }\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {}\n      };\n      lowPriorityWarning = function (condition, format) {\n        if (format === undefined) {\n          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n        }\n        if (!condition) {\n          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n            args[_key2 - 2] = arguments[_key2];\n          }\n          printWarning.apply(undefined, [format].concat(args));\n        }\n      };\n    }\n    var lowPriorityWarning$1 = lowPriorityWarning;\n    var didWarnStateUpdateForUnmountedComponent = {};\n    function warnNoop(publicInstance, callerName) {\n      {\n        var constructor = publicInstance.constructor;\n        var componentName = constructor && (constructor.displayName || constructor.name) || 'ReactClass';\n        var warningKey = componentName + '.' + callerName;\n        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n          return;\n        }\n        warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op.\\n\\nPlease check the code for the %s component.', callerName, callerName, componentName);\n        didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n      }\n    }\n\n    /**\n     * This is the abstract API for an update queue.\n     */\n    var ReactNoopUpdateQueue = {\n      /**\n       * Checks whether or not this composite component is mounted.\n       * @param {ReactClass} publicInstance The instance we want to test.\n       * @return {boolean} True if mounted, false otherwise.\n       * @protected\n       * @final\n       */\n      isMounted: function (publicInstance) {\n        return false;\n      },\n      /**\n       * Forces an update. This should only be invoked when it is known with\n       * certainty that we are **not** in a DOM transaction.\n       *\n       * You may want to call this when you know that some deeper aspect of the\n       * component's state has changed but `setState` was not called.\n       *\n       * This will not invoke `shouldComponentUpdate`, but it will invoke\n       * `componentWillUpdate` and `componentDidUpdate`.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueForceUpdate: function (publicInstance, callback, callerName) {\n        warnNoop(publicInstance, 'forceUpdate');\n      },\n      /**\n       * Replaces all of the state. Always use this or `setState` to mutate state.\n       * You should treat `this.state` as immutable.\n       *\n       * There is no guarantee that `this.state` will be immediately updated, so\n       * accessing `this.state` after calling this method may return the old value.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} completeState Next state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n        warnNoop(publicInstance, 'replaceState');\n      },\n      /**\n       * Sets a subset of the state. This only exists because _pendingState is\n       * internal. This provides a merging strategy that is not available to deep\n       * properties which is confusing. TODO: Expose pendingState or don't use it\n       * during the merge.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} partialState Next partial state to be merged with state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} Name of the calling function in the public API.\n       * @internal\n       */\n      enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n        warnNoop(publicInstance, 'setState');\n      }\n    };\n\n    /**\n     * Base class helpers for the updating state of a component.\n     */\n    function Component(props, context, updater) {\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      // We initialize the default updater but the real one gets injected by the\n      // renderer.\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    Component.prototype.isReactComponent = {};\n\n    /**\n     * Sets a subset of the state. Always use this to mutate\n     * state. You should treat `this.state` as immutable.\n     *\n     * There is no guarantee that `this.state` will be immediately updated, so\n     * accessing `this.state` after calling this method may return the old value.\n     *\n     * There is no guarantee that calls to `setState` will run synchronously,\n     * as they may eventually be batched together.  You can provide an optional\n     * callback that will be executed when the call to setState is actually\n     * completed.\n     *\n     * When a function is provided to setState, it will be called at some point in\n     * the future (not synchronously). It will be called with the up to date\n     * component arguments (state, props, context). These values can be different\n     * from this.* because your function may be called after receiveProps but before\n     * shouldComponentUpdate, and this new state, props, and context will not yet be\n     * assigned to this.\n     *\n     * @param {object|function} partialState Next partial state or function to\n     *        produce next partial state to be merged with current state.\n     * @param {?function} callback Called after state is updated.\n     * @final\n     * @protected\n     */\n    Component.prototype.setState = function (partialState, callback) {\n      !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\n      this.updater.enqueueSetState(this, partialState, callback, 'setState');\n    };\n\n    /**\n     * Forces an update. This should only be invoked when it is known with\n     * certainty that we are **not** in a DOM transaction.\n     *\n     * You may want to call this when you know that some deeper aspect of the\n     * component's state has changed but `setState` was not called.\n     *\n     * This will not invoke `shouldComponentUpdate`, but it will invoke\n     * `componentWillUpdate` and `componentDidUpdate`.\n     *\n     * @param {?function} callback Called after update is complete.\n     * @final\n     * @protected\n     */\n    Component.prototype.forceUpdate = function (callback) {\n      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n    };\n\n    /**\n     * Deprecated APIs. These APIs used to exist on classic React classes but since\n     * we would like to deprecate them, we're not going to move them over to this\n     * modern base class. Instead, we define a getter that warns if it's accessed.\n     */\n    {\n      var deprecatedAPIs = {\n        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n      };\n      var defineDeprecationWarning = function (methodName, info) {\n        Object.defineProperty(Component.prototype, methodName, {\n          get: function () {\n            lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n            return undefined;\n          }\n        });\n      };\n      for (var fnName in deprecatedAPIs) {\n        if (deprecatedAPIs.hasOwnProperty(fnName)) {\n          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n        }\n      }\n    }\n\n    /**\n     * Base class helpers for the updating state of a component.\n     */\n    function PureComponent(props, context, updater) {\n      // Duplicated from Component.\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      // We initialize the default updater but the real one gets injected by the\n      // renderer.\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    function ComponentDummy() {}\n    ComponentDummy.prototype = Component.prototype;\n    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\n    pureComponentPrototype.constructor = PureComponent;\n    // Avoid an extra prototype jump for these methods.\n    _assign(pureComponentPrototype, Component.prototype);\n    pureComponentPrototype.isPureReactComponent = true;\n    function AsyncComponent(props, context, updater) {\n      // Duplicated from Component.\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      // We initialize the default updater but the real one gets injected by the\n      // renderer.\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    var asyncComponentPrototype = AsyncComponent.prototype = new ComponentDummy();\n    asyncComponentPrototype.constructor = AsyncComponent;\n    // Avoid an extra prototype jump for these methods.\n    _assign(asyncComponentPrototype, Component.prototype);\n    asyncComponentPrototype.unstable_isAsyncReactComponent = true;\n    asyncComponentPrototype.render = function () {\n      return this.props.children;\n    };\n\n    /**\n     * Keeps track of the current owner.\n     *\n     * The current owner is the component who should own any components that are\n     * currently being constructed.\n     */\n    var ReactCurrentOwner = {\n      /**\n       * @internal\n       * @type {ReactComponent}\n       */\n      current: null\n    };\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var RESERVED_PROPS = {\n      key: true,\n      ref: true,\n      __self: true,\n      __source: true\n    };\n    var specialPropKeyWarningShown;\n    var specialPropRefWarningShown;\n    function hasValidRef(config) {\n      {\n        if (hasOwnProperty.call(config, 'ref')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.ref !== undefined;\n    }\n    function hasValidKey(config) {\n      {\n        if (hasOwnProperty.call(config, 'key')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.key !== undefined;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      var warnAboutAccessingKey = function () {\n        if (!specialPropKeyWarningShown) {\n          specialPropKeyWarningShown = true;\n          warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n        }\n      };\n      warnAboutAccessingKey.isReactWarning = true;\n      Object.defineProperty(props, 'key', {\n        get: warnAboutAccessingKey,\n        configurable: true\n      });\n    }\n    function defineRefPropWarningGetter(props, displayName) {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n          warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n        }\n      };\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n\n    /**\n     * Factory method to create a new React element. This no longer adheres to\n     * the class pattern, so do not use new to call it. Also, no instanceof check\n     * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n     * if something is a React Element.\n     *\n     * @param {*} type\n     * @param {*} key\n     * @param {string|object} ref\n     * @param {*} self A *temporary* helper to detect places where `this` is\n     * different from the `owner` when React.createElement is called, so that we\n     * can warn. We want to get rid of owner and replace string `ref`s with arrow\n     * functions, and as long as `this` and owner are the same, there will be no\n     * change in behavior.\n     * @param {*} source An annotation object (added by a transpiler or otherwise)\n     * indicating filename, line number, and/or other information.\n     * @param {*} owner\n     * @param {*} props\n     * @internal\n     */\n    var ReactElement = function (type, key, ref, self, source, owner, props) {\n      var element = {\n        // This tag allow us to uniquely identify this as a React Element\n        $$typeof: REACT_ELEMENT_TYPE,\n        // Built-in properties that belong on the element\n        type: type,\n        key: key,\n        ref: ref,\n        props: props,\n        // Record the component responsible for creating this element.\n        _owner: owner\n      };\n      {\n        // The validation flag is currently mutative. We put it on\n        // an external backing store so that we can freeze the whole object.\n        // This can be replaced with a WeakMap once they are implemented in\n        // commonly used development environments.\n        element._store = {};\n\n        // To make comparing ReactElements easier for testing purposes, we make\n        // the validation flag non-enumerable (where possible, which should\n        // include every environment we run tests in), so the test framework\n        // ignores it.\n        Object.defineProperty(element._store, 'validated', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: false\n        });\n        // self and source are DEV only properties.\n        Object.defineProperty(element, '_self', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: self\n        });\n        // Two elements created in two different places should be considered\n        // equal for testing purposes and therefore we hide it from enumeration.\n        Object.defineProperty(element, '_source', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: source\n        });\n        if (Object.freeze) {\n          Object.freeze(element.props);\n          Object.freeze(element);\n        }\n      }\n      return element;\n    };\n\n    /**\n     * Create and return a new ReactElement of the given type.\n     * See https://reactjs.org/docs/react-api.html#createelement\n     */\n    function createElement(type, config, children) {\n      var propName;\n\n      // Reserved names are extracted\n      var props = {};\n      var key = null;\n      var ref = null;\n      var self = null;\n      var source = null;\n      if (config != null) {\n        if (hasValidRef(config)) {\n          ref = config.ref;\n        }\n        if (hasValidKey(config)) {\n          key = '' + config.key;\n        }\n        self = config.__self === undefined ? null : config.__self;\n        source = config.__source === undefined ? null : config.__source;\n        // Remaining properties are added to a new props object\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n            props[propName] = config[propName];\n          }\n        }\n      }\n\n      // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n      var childrenLength = arguments.length - 2;\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n        {\n          if (Object.freeze) {\n            Object.freeze(childArray);\n          }\n        }\n        props.children = childArray;\n      }\n\n      // Resolve default props\n      if (type && type.defaultProps) {\n        var defaultProps = type.defaultProps;\n        for (propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      }\n      {\n        if (key || ref) {\n          if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n            if (key) {\n              defineKeyPropWarningGetter(props, displayName);\n            }\n            if (ref) {\n              defineRefPropWarningGetter(props, displayName);\n            }\n          }\n        }\n      }\n      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n    }\n\n    /**\n     * Return a function that produces ReactElements of a given type.\n     * See https://reactjs.org/docs/react-api.html#createfactory\n     */\n\n    function cloneAndReplaceKey(oldElement, newKey) {\n      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n      return newElement;\n    }\n\n    /**\n     * Clone and return a new ReactElement using element as the starting point.\n     * See https://reactjs.org/docs/react-api.html#cloneelement\n     */\n    function cloneElement(element, config, children) {\n      var propName;\n\n      // Original props are copied\n      var props = _assign({}, element.props);\n\n      // Reserved names are extracted\n      var key = element.key;\n      var ref = element.ref;\n      // Self is preserved since the owner is preserved.\n      var self = element._self;\n      // Source is preserved since cloneElement is unlikely to be targeted by a\n      // transpiler, and the original source is probably a better indicator of the\n      // true owner.\n      var source = element._source;\n\n      // Owner will be preserved, unless ref is overridden\n      var owner = element._owner;\n      if (config != null) {\n        if (hasValidRef(config)) {\n          // Silently steal the ref from the parent.\n          ref = config.ref;\n          owner = ReactCurrentOwner.current;\n        }\n        if (hasValidKey(config)) {\n          key = '' + config.key;\n        }\n\n        // Remaining properties override existing props\n        var defaultProps;\n        if (element.type && element.type.defaultProps) {\n          defaultProps = element.type.defaultProps;\n        }\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n            if (config[propName] === undefined && defaultProps !== undefined) {\n              // Resolve default props\n              props[propName] = defaultProps[propName];\n            } else {\n              props[propName] = config[propName];\n            }\n          }\n        }\n      }\n\n      // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n      var childrenLength = arguments.length - 2;\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n        props.children = childArray;\n      }\n      return ReactElement(element.type, key, ref, self, source, owner, props);\n    }\n\n    /**\n     * Verifies the object is a ReactElement.\n     * See https://reactjs.org/docs/react-api.html#isvalidelement\n     * @param {?object} object\n     * @return {boolean} True if `object` is a valid component.\n     * @final\n     */\n    function isValidElement(object) {\n      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n    }\n    var ReactDebugCurrentFrame = {};\n    {\n      // Component that is being worked on\n      ReactDebugCurrentFrame.getCurrentStack = null;\n      ReactDebugCurrentFrame.getStackAddendum = function () {\n        var impl = ReactDebugCurrentFrame.getCurrentStack;\n        if (impl) {\n          return impl();\n        }\n        return null;\n      };\n    }\n    var SEPARATOR = '.';\n    var SUBSEPARATOR = ':';\n\n    /**\n     * Escape and wrap key so it is safe to use as a reactid\n     *\n     * @param {string} key to be escaped.\n     * @return {string} the escaped key.\n     */\n    function escape(key) {\n      var escapeRegex = /[=:]/g;\n      var escaperLookup = {\n        '=': '=0',\n        ':': '=2'\n      };\n      var escapedString = ('' + key).replace(escapeRegex, function (match) {\n        return escaperLookup[match];\n      });\n      return '$' + escapedString;\n    }\n\n    /**\n     * TODO: Test that a single child and an array with one item have the same key\n     * pattern.\n     */\n\n    var didWarnAboutMaps = false;\n    var userProvidedKeyEscapeRegex = /\\/+/g;\n    function escapeUserProvidedKey(text) {\n      return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n    }\n    var POOL_SIZE = 10;\n    var traverseContextPool = [];\n    function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n      if (traverseContextPool.length) {\n        var traverseContext = traverseContextPool.pop();\n        traverseContext.result = mapResult;\n        traverseContext.keyPrefix = keyPrefix;\n        traverseContext.func = mapFunction;\n        traverseContext.context = mapContext;\n        traverseContext.count = 0;\n        return traverseContext;\n      } else {\n        return {\n          result: mapResult,\n          keyPrefix: keyPrefix,\n          func: mapFunction,\n          context: mapContext,\n          count: 0\n        };\n      }\n    }\n    function releaseTraverseContext(traverseContext) {\n      traverseContext.result = null;\n      traverseContext.keyPrefix = null;\n      traverseContext.func = null;\n      traverseContext.context = null;\n      traverseContext.count = 0;\n      if (traverseContextPool.length < POOL_SIZE) {\n        traverseContextPool.push(traverseContext);\n      }\n    }\n\n    /**\n     * @param {?*} children Children tree container.\n     * @param {!string} nameSoFar Name of the key path so far.\n     * @param {!function} callback Callback to invoke with each child found.\n     * @param {?*} traverseContext Used to pass information throughout the traversal\n     * process.\n     * @return {!number} The number of children in this subtree.\n     */\n    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n      var type = typeof children;\n      if (type === 'undefined' || type === 'boolean') {\n        // All of the above are perceived as null.\n        children = null;\n      }\n      var invokeCallback = false;\n      if (children === null) {\n        invokeCallback = true;\n      } else {\n        switch (type) {\n          case 'string':\n          case 'number':\n            invokeCallback = true;\n            break;\n          case 'object':\n            switch (children.$$typeof) {\n              case REACT_ELEMENT_TYPE:\n              case REACT_CALL_TYPE:\n              case REACT_RETURN_TYPE:\n              case REACT_PORTAL_TYPE:\n                invokeCallback = true;\n            }\n        }\n      }\n      if (invokeCallback) {\n        callback(traverseContext, children,\n        // If it's the only child, treat the name as if it was wrapped in an array\n        // so that it's consistent if the number of children grows.\n        nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n        return 1;\n      }\n      var child;\n      var nextName;\n      var subtreeCount = 0; // Count of children found in the current subtree.\n      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n      if (Array.isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          nextName = nextNamePrefix + getComponentKey(child, i);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          {\n            // Warn about using Maps as children\n            if (iteratorFn === children.entries) {\n              warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum());\n              didWarnAboutMaps = true;\n            }\n          }\n          var iterator = iteratorFn.call(children);\n          var step;\n          var ii = 0;\n          while (!(step = iterator.next()).done) {\n            child = step.value;\n            nextName = nextNamePrefix + getComponentKey(child, ii++);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        } else if (type === 'object') {\n          var addendum = '';\n          {\n            addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n          }\n          var childrenString = '' + children;\n          invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\n        }\n      }\n      return subtreeCount;\n    }\n\n    /**\n     * Traverses children that are typically specified as `props.children`, but\n     * might also be specified through attributes:\n     *\n     * - `traverseAllChildren(this.props.children, ...)`\n     * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n     *\n     * The `traverseContext` is an optional argument that is passed through the\n     * entire traversal. It can be used to store accumulations or anything else that\n     * the callback might find relevant.\n     *\n     * @param {?*} children Children tree object.\n     * @param {!function} callback To invoke upon traversing each child.\n     * @param {?*} traverseContext Context for traversal.\n     * @return {!number} The number of children in this subtree.\n     */\n    function traverseAllChildren(children, callback, traverseContext) {\n      if (children == null) {\n        return 0;\n      }\n      return traverseAllChildrenImpl(children, '', callback, traverseContext);\n    }\n\n    /**\n     * Generate a key string that identifies a component within a set.\n     *\n     * @param {*} component A component that could contain a manual key.\n     * @param {number} index Index that is used if a manual key is not provided.\n     * @return {string}\n     */\n    function getComponentKey(component, index) {\n      // Do some typechecking here since we call this blindly. We want to ensure\n      // that we don't block potential future ES APIs.\n      if (typeof component === 'object' && component !== null && component.key != null) {\n        // Explicit key\n        return escape(component.key);\n      }\n      // Implicit key determined by the index in the set\n      return index.toString(36);\n    }\n    function forEachSingleChild(bookKeeping, child, name) {\n      var func = bookKeeping.func,\n        context = bookKeeping.context;\n      func.call(context, child, bookKeeping.count++);\n    }\n\n    /**\n     * Iterates through children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#react.children.foreach\n     *\n     * The provided forEachFunc(child, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} forEachFunc\n     * @param {*} forEachContext Context for forEachContext.\n     */\n    function forEachChildren(children, forEachFunc, forEachContext) {\n      if (children == null) {\n        return children;\n      }\n      var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n      traverseAllChildren(children, forEachSingleChild, traverseContext);\n      releaseTraverseContext(traverseContext);\n    }\n    function mapSingleChildIntoContext(bookKeeping, child, childKey) {\n      var result = bookKeeping.result,\n        keyPrefix = bookKeeping.keyPrefix,\n        func = bookKeeping.func,\n        context = bookKeeping.context;\n      var mappedChild = func.call(context, child, bookKeeping.count++);\n      if (Array.isArray(mappedChild)) {\n        mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n      } else if (mappedChild != null) {\n        if (isValidElement(mappedChild)) {\n          mappedChild = cloneAndReplaceKey(mappedChild,\n          // Keep both the (mapped) and old keys if they differ, just as\n          // traverseAllChildren used to do for objects as children\n          keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n        }\n        result.push(mappedChild);\n      }\n    }\n    function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n      var escapedPrefix = '';\n      if (prefix != null) {\n        escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n      }\n      var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n      traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n      releaseTraverseContext(traverseContext);\n    }\n\n    /**\n     * Maps children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#react.children.map\n     *\n     * The provided mapFunction(child, key, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} func The map function.\n     * @param {*} context Context for mapFunction.\n     * @return {object} Object containing the ordered map of results.\n     */\n    function mapChildren(children, func, context) {\n      if (children == null) {\n        return children;\n      }\n      var result = [];\n      mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n      return result;\n    }\n\n    /**\n     * Count the number of children that are typically specified as\n     * `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#react.children.count\n     *\n     * @param {?*} children Children tree container.\n     * @return {number} The number of children.\n     */\n    function countChildren(children, context) {\n      return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);\n    }\n\n    /**\n     * Flatten a children object (typically specified as `props.children`) and\n     * return an array with appropriately re-keyed children.\n     *\n     * See https://reactjs.org/docs/react-api.html#react.children.toarray\n     */\n    function toArray(children) {\n      var result = [];\n      mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n      return result;\n    }\n\n    /**\n     * Returns the first child in a collection of children and verifies that there\n     * is only one child in the collection.\n     *\n     * See https://reactjs.org/docs/react-api.html#react.children.only\n     *\n     * The current implementation of this function assumes that a single child gets\n     * passed without a wrapper, but the purpose of this helper function is to\n     * abstract away the particular structure of children.\n     *\n     * @param {?object} children Child collection structure.\n     * @return {ReactElement} The first and only `ReactElement` contained in the\n     * structure.\n     */\n    function onlyChild(children) {\n      !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\n      return children;\n    }\n    var describeComponentFrame = function (name, source, ownerName) {\n      return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n    };\n    function getComponentName(fiber) {\n      var type = fiber.type;\n      if (typeof type === 'string') {\n        return type;\n      }\n      if (typeof type === 'function') {\n        return type.displayName || type.name;\n      }\n      return null;\n    }\n\n    /**\n     * ReactElementValidator provides a wrapper around a element factory\n     * which validates the props passed to the element. This is intended to be\n     * used only in DEV and could be replaced by a static type checker for languages\n     * that support it.\n     */\n\n    {\n      var currentlyValidatingElement = null;\n      var propTypesMisspellWarningShown = false;\n      var getDisplayName = function (element) {\n        if (element == null) {\n          return '#empty';\n        } else if (typeof element === 'string' || typeof element === 'number') {\n          return '#text';\n        } else if (typeof element.type === 'string') {\n          return element.type;\n        } else if (element.type === REACT_FRAGMENT_TYPE) {\n          return 'React.Fragment';\n        } else {\n          return element.type.displayName || element.type.name || 'Unknown';\n        }\n      };\n      var getStackAddendum = function () {\n        var stack = '';\n        if (currentlyValidatingElement) {\n          var name = getDisplayName(currentlyValidatingElement);\n          var owner = currentlyValidatingElement._owner;\n          stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));\n        }\n        stack += ReactDebugCurrentFrame.getStackAddendum() || '';\n        return stack;\n      };\n      var VALID_FRAGMENT_PROPS = new Map([['children', true], ['key', true]]);\n    }\n    function getDeclarationErrorAddendum() {\n      if (ReactCurrentOwner.current) {\n        var name = getComponentName(ReactCurrentOwner.current);\n        if (name) {\n          return '\\n\\nCheck the render method of `' + name + '`.';\n        }\n      }\n      return '';\n    }\n    function getSourceInfoErrorAddendum(elementProps) {\n      if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\n        var source = elementProps.__source;\n        var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n        var lineNumber = source.lineNumber;\n        return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n      }\n      return '';\n    }\n\n    /**\n     * Warn if there's no key explicitly set on dynamic arrays of children or\n     * object keys are not valid. This allows us to keep track of children between\n     * updates.\n     */\n    var ownerHasKeyUseWarning = {};\n    function getCurrentComponentErrorInfo(parentType) {\n      var info = getDeclarationErrorAddendum();\n      if (!info) {\n        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n        if (parentName) {\n          info = '\\n\\nCheck the top-level render call using <' + parentName + '>.';\n        }\n      }\n      return info;\n    }\n\n    /**\n     * Warn if the element doesn't have an explicit key assigned to it.\n     * This element is in an array. The array could grow and shrink or be\n     * reordered. All children that haven't already been validated are required to\n     * have a \"key\" property assigned to it. Error statuses are cached so a warning\n     * will only be shown once.\n     *\n     * @internal\n     * @param {ReactElement} element Element that requires a key.\n     * @param {*} parentType element's parent's type.\n     */\n    function validateExplicitKey(element, parentType) {\n      if (!element._store || element._store.validated || element.key != null) {\n        return;\n      }\n      element._store.validated = true;\n      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n        return;\n      }\n      ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n      // Usually the current owner is the offender, but if it accepts children as a\n      // property, it may be the creator of the child that's responsible for\n      // assigning it a key.\n      var childOwner = '';\n      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n        // Give the component that originally created this child.\n        childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';\n      }\n      currentlyValidatingElement = element;\n      {\n        warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());\n      }\n      currentlyValidatingElement = null;\n    }\n\n    /**\n     * Ensure that every element either is passed in a static location, in an\n     * array with an explicit keys property defined, or in an object literal\n     * with valid key property.\n     *\n     * @internal\n     * @param {ReactNode} node Statically passed child of any type.\n     * @param {*} parentType node's parent's type.\n     */\n    function validateChildKeys(node, parentType) {\n      if (typeof node !== 'object') {\n        return;\n      }\n      if (Array.isArray(node)) {\n        for (var i = 0; i < node.length; i++) {\n          var child = node[i];\n          if (isValidElement(child)) {\n            validateExplicitKey(child, parentType);\n          }\n        }\n      } else if (isValidElement(node)) {\n        // This element was passed in a valid location.\n        if (node._store) {\n          node._store.validated = true;\n        }\n      } else if (node) {\n        var iteratorFn = getIteratorFn(node);\n        if (typeof iteratorFn === 'function') {\n          // Entry iterators used to provide implicit keys,\n          // but now we print a separate warning for them later.\n          if (iteratorFn !== node.entries) {\n            var iterator = iteratorFn.call(node);\n            var step;\n            while (!(step = iterator.next()).done) {\n              if (isValidElement(step.value)) {\n                validateExplicitKey(step.value, parentType);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Given an element, validate that its props follow the propTypes definition,\n     * provided by the type.\n     *\n     * @param {ReactElement} element\n     */\n    function validatePropTypes(element) {\n      var componentClass = element.type;\n      if (typeof componentClass !== 'function') {\n        return;\n      }\n      var name = componentClass.displayName || componentClass.name;\n      var propTypes = componentClass.propTypes;\n      if (propTypes) {\n        currentlyValidatingElement = element;\n        checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);\n        currentlyValidatingElement = null;\n      } else if (componentClass.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n        propTypesMisspellWarningShown = true;\n        warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n      }\n      if (typeof componentClass.getDefaultProps === 'function') {\n        warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n      }\n    }\n\n    /**\n     * Given a fragment, validate that it can only be provided with fragment props\n     * @param {ReactElement} fragment\n     */\n    function validateFragmentProps(fragment) {\n      currentlyValidatingElement = fragment;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n      try {\n        for (var _iterator = Object.keys(fragment.props)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n          if (!VALID_FRAGMENT_PROPS.has(key)) {\n            warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator['return']) {\n            _iterator['return']();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      if (fragment.ref !== null) {\n        warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());\n      }\n      currentlyValidatingElement = null;\n    }\n    function createElementWithValidation(type, props, children) {\n      var validType = typeof type === 'string' || typeof type === 'function' || typeof type === 'symbol' || typeof type === 'number';\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      if (!validType) {\n        var info = '';\n        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n          info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n        }\n        var sourceInfo = getSourceInfoErrorAddendum(props);\n        if (sourceInfo) {\n          info += sourceInfo;\n        } else {\n          info += getDeclarationErrorAddendum();\n        }\n        info += getStackAddendum() || '';\n        warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info);\n      }\n      var element = createElement.apply(this, arguments);\n\n      // The result can be nullish if a mock or a custom function is used.\n      // TODO: Drop this when these are no longer allowed as the type argument.\n      if (element == null) {\n        return element;\n      }\n\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing errors.\n      // We don't want exception behavior to differ between dev and prod.\n      // (Rendering will throw with a helpful message and as soon as the type is\n      // fixed, the key warnings will appear.)\n      if (validType) {\n        for (var i = 2; i < arguments.length; i++) {\n          validateChildKeys(arguments[i], type);\n        }\n      }\n      if (typeof type === 'symbol' && type === REACT_FRAGMENT_TYPE) {\n        validateFragmentProps(element);\n      } else {\n        validatePropTypes(element);\n      }\n      return element;\n    }\n    function createFactoryWithValidation(type) {\n      var validatedFactory = createElementWithValidation.bind(null, type);\n      // Legacy hook TODO: Warn if this is accessed\n      validatedFactory.type = type;\n      {\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function () {\n            lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      }\n      return validatedFactory;\n    }\n    function cloneElementWithValidation(element, props, children) {\n      var newElement = cloneElement.apply(this, arguments);\n      for (var i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], newElement.type);\n      }\n      validatePropTypes(newElement);\n      return newElement;\n    }\n    var React = {\n      Children: {\n        map: mapChildren,\n        forEach: forEachChildren,\n        count: countChildren,\n        toArray: toArray,\n        only: onlyChild\n      },\n      Component: Component,\n      PureComponent: PureComponent,\n      unstable_AsyncComponent: AsyncComponent,\n      Fragment: REACT_FRAGMENT_TYPE,\n      createElement: createElementWithValidation,\n      cloneElement: cloneElementWithValidation,\n      createFactory: createFactoryWithValidation,\n      isValidElement: isValidElement,\n      version: ReactVersion,\n      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n        ReactCurrentOwner: ReactCurrentOwner,\n        // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n        assign: _assign\n      }\n    };\n    {\n      _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {\n        // These should not be included in production.\n        ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n        // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n        // TODO: remove in React 17.0.\n        ReactComponentTreeHook: {}\n      });\n    }\n    var React$2 = Object.freeze({\n      default: React\n    });\n    var React$3 = React$2 && React || React$2;\n\n    // TODO: decide on the top-level export form.\n    // This is hacky but makes it work with both Rollup and Jest.\n    var react = React$3['default'] ? React$3['default'] : React$3;\n    module.exports = react;\n  })();\n}","map":{"version":3,"names":["process","env","NODE_ENV","_assign","require","emptyObject","invariant","warning","emptyFunction","checkPropTypes","ReactVersion","hasSymbol","Symbol","REACT_ELEMENT_TYPE","REACT_CALL_TYPE","REACT_RETURN_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","lowPriorityWarning","printWarning","format","_len","arguments","length","args","Array","_key","argIndex","message","replace","console","warn","Error","x","condition","undefined","_len2","_key2","apply","concat","lowPriorityWarning$1","didWarnStateUpdateForUnmountedComponent","warnNoop","publicInstance","callerName","constructor","componentName","displayName","name","warningKey","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","callback","enqueueReplaceState","completeState","enqueueSetState","partialState","Component","props","context","updater","refs","prototype","isReactComponent","setState","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","methodName","info","Object","defineProperty","get","fnName","hasOwnProperty","PureComponent","ComponentDummy","pureComponentPrototype","isPureReactComponent","AsyncComponent","asyncComponentPrototype","unstable_isAsyncReactComponent","render","children","ReactCurrentOwner","current","RESERVED_PROPS","key","ref","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","hasValidRef","config","call","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","defineKeyPropWarningGetter","warnAboutAccessingKey","configurable","defineRefPropWarningGetter","warnAboutAccessingRef","ReactElement","type","self","source","owner","element","$$typeof","_owner","_store","enumerable","writable","value","freeze","createElement","propName","childrenLength","childArray","i","defaultProps","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","ReactDebugCurrentFrame","getCurrentStack","getStackAddendum","impl","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","match","didWarnAboutMaps","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","POOL_SIZE","traverseContextPool","getPooledTraverseContext","mapResult","keyPrefix","mapFunction","mapContext","traverseContext","pop","result","func","count","releaseTraverseContext","push","traverseAllChildrenImpl","nameSoFar","invokeCallback","getComponentKey","child","nextName","subtreeCount","nextNamePrefix","isArray","iteratorFn","entries","step","ii","next","done","addendum","childrenString","keys","join","traverseAllChildren","component","index","toString","forEachSingleChild","bookKeeping","forEachChildren","forEachFunc","forEachContext","mapSingleChildIntoContext","childKey","mappedChild","mapIntoWithKeyPrefixInternal","thatReturnsArgument","array","prefix","escapedPrefix","mapChildren","countChildren","thatReturnsNull","toArray","onlyChild","describeComponentFrame","ownerName","fileName","lineNumber","getComponentName","fiber","currentlyValidatingElement","propTypesMisspellWarningShown","getDisplayName","stack","VALID_FRAGMENT_PROPS","Map","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","elementProps","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","parentName","validateExplicitKey","validated","currentComponentErrorInfo","childOwner","validateChildKeys","node","validatePropTypes","componentClass","propTypes","PropTypes","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","has","err","createElementWithValidation","validType","sourceInfo","createFactoryWithValidation","validatedFactory","bind","cloneElementWithValidation","React","Children","map","forEach","only","unstable_AsyncComponent","Fragment","createFactory","version","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","assign","ReactComponentTreeHook","React$2","default","React$3","react","module","exports"],"sources":["/Users/azminds/Documents/five-g/frontend/node_modules/terminal-in-react/node_modules/react/cjs/react.development.js"],"sourcesContent":["/** @license React v16.2.0\n * react.development.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar _assign = require('object-assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar checkPropTypes = require('prop-types/checkPropTypes');\n\n// TODO: this is special because it gets imported during build.\n\nvar ReactVersion = '16.2.0';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol['for'];\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol['for']('react.element') : 0xeac7;\nvar REACT_CALL_TYPE = hasSymbol ? Symbol['for']('react.call') : 0xeac8;\nvar REACT_RETURN_TYPE = hasSymbol ? Symbol['for']('react.return') : 0xeac9;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol['for']('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol['for']('react.fragment') : 0xeacb;\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable === 'undefined') {\n    return null;\n  }\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var constructor = publicInstance.constructor;\n    var componentName = constructor && (constructor.displayName || constructor.name) || 'ReactClass';\n    var warningKey = componentName + '.' + callerName;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op.\\n\\nPlease check the code for the %s component.', callerName, callerName, componentName);\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n        return undefined;\n      }\n    });\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction PureComponent(props, context, updater) {\n  // Duplicated from Component.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\nfunction AsyncComponent(props, context, updater) {\n  // Duplicated from Component.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar asyncComponentPrototype = AsyncComponent.prototype = new ComponentDummy();\nasyncComponentPrototype.constructor = AsyncComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(asyncComponentPrototype, Component.prototype);\nasyncComponentPrototype.unstable_isAsyncReactComponent = true;\nasyncComponentPrototype.render = function () {\n  return this.props.children;\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nfunction createElement(type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  {\n    if (key || ref) {\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n        if (key) {\n          defineKeyPropWarningGetter(props, displayName);\n        }\n        if (ref) {\n          defineRefPropWarningGetter(props, displayName);\n        }\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\n\n\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nfunction cloneElement(element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar ReactDebugCurrentFrame = {};\n\n{\n  // Component that is being worked on\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n    if (impl) {\n      return impl();\n    }\n    return null;\n  };\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_CALL_TYPE:\n          case REACT_RETURN_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum());\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step;\n      var ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n      var childrenString = '' + children;\n      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.foreach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.map\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.count\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.toarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\n  return children;\n}\n\nvar describeComponentFrame = function (name, source, ownerName) {\n  return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n};\n\nfunction getComponentName(fiber) {\n  var type = fiber.type;\n\n  if (typeof type === 'string') {\n    return type;\n  }\n  if (typeof type === 'function') {\n    return type.displayName || type.name;\n  }\n  return null;\n}\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n{\n  var currentlyValidatingElement = null;\n\n  var propTypesMisspellWarningShown = false;\n\n  var getDisplayName = function (element) {\n    if (element == null) {\n      return '#empty';\n    } else if (typeof element === 'string' || typeof element === 'number') {\n      return '#text';\n    } else if (typeof element.type === 'string') {\n      return element.type;\n    } else if (element.type === REACT_FRAGMENT_TYPE) {\n      return 'React.Fragment';\n    } else {\n      return element.type.displayName || element.type.name || 'Unknown';\n    }\n  };\n\n  var getStackAddendum = function () {\n    var stack = '';\n    if (currentlyValidatingElement) {\n      var name = getDisplayName(currentlyValidatingElement);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));\n    }\n    stack += ReactDebugCurrentFrame.getStackAddendum() || '';\n    return stack;\n  };\n\n  var VALID_FRAGMENT_PROPS = new Map([['children', true], ['key', true]]);\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current);\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(elementProps) {\n  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\n    var source = elementProps.__source;\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = '\\n\\nCheck the top-level render call using <' + parentName + '>.';\n    }\n  }\n  return info;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwner = '';\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';\n  }\n\n  currentlyValidatingElement = element;\n  {\n    warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());\n  }\n  currentlyValidatingElement = null;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var componentClass = element.type;\n  if (typeof componentClass !== 'function') {\n    return;\n  }\n  var name = componentClass.displayName || componentClass.name;\n  var propTypes = componentClass.propTypes;\n  if (propTypes) {\n    currentlyValidatingElement = element;\n    checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);\n    currentlyValidatingElement = null;\n  } else if (componentClass.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n    propTypesMisspellWarningShown = true;\n    warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n  }\n}\n\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\nfunction validateFragmentProps(fragment) {\n  currentlyValidatingElement = fragment;\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = Object.keys(fragment.props)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var key = _step.value;\n\n      if (!VALID_FRAGMENT_PROPS.has(key)) {\n        warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator['return']) {\n        _iterator['return']();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  if (fragment.ref !== null) {\n    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());\n  }\n\n  currentlyValidatingElement = null;\n}\n\nfunction createElementWithValidation(type, props, children) {\n  var validType = typeof type === 'string' || typeof type === 'function' || typeof type === 'symbol' || typeof type === 'number';\n  // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n  if (!validType) {\n    var info = '';\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendum(props);\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    info += getStackAddendum() || '';\n\n    warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info);\n  }\n\n  var element = createElement.apply(this, arguments);\n\n  // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n  if (element == null) {\n    return element;\n  }\n\n  // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (typeof type === 'symbol' && type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\n\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  // Legacy hook TODO: Warn if this is accessed\n  validatedFactory.type = type;\n\n  {\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\n\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nvar React = {\n  Children: {\n    map: mapChildren,\n    forEach: forEachChildren,\n    count: countChildren,\n    toArray: toArray,\n    only: onlyChild\n  },\n\n  Component: Component,\n  PureComponent: PureComponent,\n  unstable_AsyncComponent: AsyncComponent,\n\n  Fragment: REACT_FRAGMENT_TYPE,\n\n  createElement: createElementWithValidation,\n  cloneElement: cloneElementWithValidation,\n  createFactory: createFactoryWithValidation,\n  isValidElement: isValidElement,\n\n  version: ReactVersion,\n\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentOwner: ReactCurrentOwner,\n    // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n    assign: _assign\n  }\n};\n\n{\n  _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n\n\nvar React$2 = Object.freeze({\n\tdefault: React\n});\n\nvar React$3 = ( React$2 && React ) || React$2;\n\n// TODO: decide on the top-level export form.\n// This is hacky but makes it work with both Rollup and Jest.\nvar react = React$3['default'] ? React$3['default'] : React$3;\n\nmodule.exports = react;\n  })();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}