{"ast":null,"code":"var _jsxFileName = \"/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetworkElement/monitorNetworkElement.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport './monitorNetworkElement.scss';\nimport { Grid, Button, Dialog, DialogTitle, DialogContent, DialogActions, Radio, withStyles } from \"@material-ui/core\";\nimport * as Icons from \"@material-ui/icons\";\nimport { ResponsiveContainer, LineChart, Line, YAxis, XAxis, CartesianGrid, Tooltip, Legend, Brush, Area } from \"recharts\";\nimport moment from 'moment';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport loadingIcon from '../../images/home/loading.gif';\nimport Widget from \"../../components/Widget\";\nimport apiService from '../../services/apiService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyRadio = withStyles({\n  root: {\n    color: '#1F3BB3',\n    '&$checked': {\n      color: '#1F3BB3'\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Radio, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 15\n}, this));\n\nclass MonitorNetworkElement extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getElementDetails = () => {\n      var thisView = this;\n      if (this.monitorHomeToken) this.monitorHomeToken.cancel();\n      this.monitorHomeToken = axios.CancelToken.source();\n      axios.all([apiService.getElementDetails(this.monitorHomeToken.token, this.props.match.params.id)]).then(function (res) {\n        if (res[0]) {\n          let networkInfo = res[0][\"data\"] ? res[0][\"data\"] : {};\n          thisView.setState({\n            networkElementInfo: networkInfo\n          });\n          thisView.processChartData(networkInfo);\n          thisView.setState({\n            firstCallDone: true\n          });\n        }\n      }).catch(function (res) {\n        console.log(res);\n        console.log('An error occurred monitor element service');\n      });\n    };\n\n    this.processChartData = networkInfo => {\n      let chart1 = {},\n          chart2 = {},\n          chart3 = {};\n\n      if (networkInfo && networkInfo.NF_stats) {\n        if (networkInfo.NF_stats.chart1) chart1 = networkInfo.NF_stats.chart1;\n        if (networkInfo.NF_stats.chart2) chart2 = networkInfo.NF_stats.chart2;\n        if (networkInfo.NF_stats.chart3) chart3 = networkInfo.NF_stats.chart3;\n      }\n\n      if (chart1.data) {\n        chart1.data = chart1.data.map(eachPoint => {\n          return {\n            name: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n            value: eachPoint[Object.keys(eachPoint)[0]]\n          };\n        });\n        this.setState({\n          chart1\n        });\n      }\n\n      if (chart2.data) {\n        chart2.data = chart2.data.map(eachPoint => {\n          return {\n            name: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n            value: eachPoint[Object.keys(eachPoint)[0]]\n          };\n        });\n        this.setState({\n          chart2\n        });\n      }\n\n      if (chart3.data) {\n        chart3.dataTx = [];\n        chart3.dataRx = [];\n        chart3.data.map(eachPoint => {\n          if (Array.isArray(eachPoint[Object.keys(eachPoint)[0]])) {\n            chart3.dataTx.push({\n              category: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n              value: eachPoint[Object.keys(eachPoint)[0]][0]\n            });\n            chart3.dataRx.push({\n              category: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n              value: eachPoint[Object.keys(eachPoint)[0]][1]\n            });\n          } else {\n            chart3.dataTx.push({\n              name: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n              value: eachPoint[Object.keys(eachPoint)[0]]\n            });\n            chart3.dataRx = null;\n          }\n        });\n        this.setState({\n          chart3\n        });\n        console.log(chart3);\n      }\n    };\n\n    this.toggleHandOver = () => {\n      if (!this.state.handoverStatus) {\n        this.setState({\n          ueList: [],\n          handOverError: '',\n          selectedHandoverElement: null\n        });\n        this.getUEList();\n      }\n\n      this.setState({\n        handoverStatus: !this.state.handoverStatus\n      });\n    };\n\n    this.togglePathSwitch = () => {\n      if (!this.state.pathSwitchStatus) {\n        this.setState({\n          pathSwitch: [],\n          pathSwitchError: '',\n          selectedPathSwitchElement: null\n        });\n        this.getPathSwitch();\n      }\n\n      this.setState({\n        pathSwitchStatus: !this.state.pathSwitchStatus\n      });\n    };\n\n    this.handleHandoverChange = value => {\n      this.setState({\n        selectedHandoverElement: value\n      });\n    };\n\n    this.handlePathSwitchChange = value => {\n      this.setState({\n        selectedPathSwitchElement: value\n      });\n    };\n\n    this.getUEList = () => {\n      var thisView = this;\n      if (this.ueListToken) this.ueListToken.cancel();\n      this.ueListToken = axios.CancelToken.source();\n      this.setState({\n        callUnderProgress: true\n      });\n      axios.all([apiService.getUEList(this.ueListToken.token, this.props.match.params.id)]).then(function (res) {\n        if (res[0]) {\n          let ueList = res[0][\"data\"] && res[0][\"data\"][\"UElist\"] ? res[0][\"data\"][\"UElist\"] : [];\n\n          if (ueList && ueList.length > 0 && !ueList[0][\"- ue-id\"]) {\n            ueList = [];\n          }\n\n          thisView.setState({\n            ueList: ueList\n          });\n          thisView.setState({\n            callUnderProgress: false\n          });\n        }\n      }).catch(function (res) {\n        console.log(res);\n        console.log('An error occurred monitor element service');\n        thisView.setState({\n          callUnderProgress: false\n        });\n      });\n    };\n\n    this.submitHandOver = () => {\n      if (!this.state.selectedHandoverElement) {\n        this.setState({\n          handOverError: 'Please Select UE'\n        });\n        return;\n      } else {\n        this.setState({\n          handOverError: ''\n        });\n      }\n\n      var thisView = this;\n      if (this.prepareHandoverToken) this.prepareHandoverToken.cancel();\n      this.prepareHandoverToken = axios.CancelToken.source();\n      let data = {\n        containerId: this.props.match.params.id,\n        ueId: this.state.selectedHandoverElement.trim()\n      };\n      this.setState({\n        callUnderProgress: true\n      });\n      axios.all([apiService.prepareHandOver(this.prepareHandoverToken.token, data)]).then(function (res) {\n        if (res[0]) {\n          thisView.setState({\n            callUnderProgress: false\n          });\n          thisView.toggleHandOver();\n        }\n      }).catch(function (res) {\n        console.log(res);\n        console.log('An error occurred monitor element service');\n        thisView.setState({\n          callUnderProgress: false\n        });\n      });\n    };\n\n    this.getPathSwitch = () => {\n      var thisView = this;\n      if (this.pathSwitchToken) this.pathSwitchToken.cancel();\n      this.pathSwitchToken = axios.CancelToken.source();\n      this.setState({\n        callUnderProgress: true\n      });\n      axios.all([apiService.getPathSwitchList(this.pathSwitchToken.token)]).then(function (res) {\n        if (res[0]) {\n          let pathSwitchData = res[0][\"data\"] && res[0][\"data\"] ? res[0][\"data\"] : [];\n          pathSwitchData = pathSwitchData.map(eachSwitch => {\n            let temp = {};\n            eachSwitch.map(eachField => {\n              if (Object.keys(eachField)[0] === \"handover_key\") {\n                temp[\"key\"] = eachField[\"handover_key\"];\n              } else if (Object.keys(eachField)[0] === \"ueid\") {\n                temp[\"ueid\"] = eachField[\"ueid\"];\n              } else if (Object.keys(eachField)[0] === \"source_gnb\") {\n                temp[\"source\"] = eachField[\"source_gnb\"];\n              }\n            });\n            return temp;\n          });\n          thisView.setState({\n            pathSwitch: pathSwitchData\n          });\n          thisView.setState({\n            callUnderProgress: false\n          });\n        }\n      }).catch(function (res) {\n        console.log(res);\n        console.log('An error occurred monitor element service');\n        thisView.setState({\n          callUnderProgress: false\n        });\n      });\n    };\n\n    this.submitPathSwitch = () => {\n      if (!this.state.selectedPathSwitchElement) {\n        this.setState({\n          pathSwitchError: 'Please Select'\n        });\n        return;\n      }\n\n      var thisView = this;\n      if (this.submitPathSwitchToken) this.submitPathSwitchToken.cancel();\n      this.submitPathSwitchToken = axios.CancelToken.source();\n      let data = {\n        containerId: this.props.match.params.id,\n        id: this.state.selectedPathSwitchElement\n      };\n      this.setState({\n        callUnderProgress: true\n      });\n      axios.all([apiService.submitPathSwitch(this.submitPathSwitchToken.token, data)]).then(function (res) {\n        if (res[0]) {\n          thisView.setState({\n            callUnderProgress: false\n          });\n          thisView.togglePathSwitch();\n        }\n      }).catch(function (res) {\n        console.log(res);\n        console.log('An error occurred monitor element service');\n        thisView.setState({\n          callUnderProgress: false\n        });\n      });\n    };\n\n    this.state = {\n      lineData: [{\n        name: 'July 1',\n        uv: 4000\n      }, {\n        name: 'July 2',\n        uv: 3000\n      }, {\n        name: 'July 3',\n        uv: 2000\n      }, {\n        name: 'July 4',\n        uv: 1000\n      }, {\n        name: 'July 5',\n        uv: 1890\n      }],\n      chart1: {},\n      chart2: {},\n      chart3: {},\n      networkElementInfo: {},\n      handoverStatus: false,\n      pathSwitchStatus: false,\n      handOverError: '',\n      ueList: [],\n      selectedHandoverElement: null,\n      selectedPathSwitchElement: null,\n      pathSwitchError: '',\n      pathSwitch: [],\n      callUnderProgress: false,\n      firstCallDone: false\n    };\n    this.ueListToken = null;\n    this.prepareHandoverToken = null;\n    this.pathSwitchToken = null;\n    this.submitPathSwitchToken = null;\n  }\n\n  componentDidMount() {\n    this.getElementDetails();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.getElementDetails();\n    }\n  }\n\n  render() {\n    const {\n      lineData,\n      networkElementInfo,\n      handoverStatus,\n      selectedHandoverElement,\n      pathSwitchStatus,\n      selectedPathSwitchElement,\n      callUnderProgress,\n      ueList,\n      handOverError,\n      pathSwitch,\n      pathSwitchError,\n      chart1,\n      chart2,\n      chart3,\n      firstCallDone\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"five-g-monitor\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 4,\n          md: 6,\n          xs: 12,\n          className: \"fgm-inner-grid individual-grid-five-g\",\n          children: /*#__PURE__*/_jsxDEV(Widget, {\n            title: networkElementInfo.name_of_nf ? networkElementInfo.name_of_nf.toUpperCase() : \"-\",\n            upperTitle: true,\n            bodyclassName: '',\n            className: 'test',\n            disableWidgetMenu: true,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fgm-details-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fgmdc-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"fgmds-each\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"State\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: networkElementInfo.State ? networkElementInfo.State : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"fgmds-each\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Health\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: networkElementInfo.Health ? networkElementInfo.Health : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"fgmds-each\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"DNN\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: networkElementInfo.DNN ? networkElementInfo.DNN : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fgmdc-sensor-active\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"IP address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: networkElementInfo.hasOwnProperty(\"Management_IP\") ? networkElementInfo.Management_IP : '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fgmdc-served\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Number of UEs served:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: networkElementInfo.hasOwnProperty(\"no_UEsserved\") ? networkElementInfo.no_UEsserved : '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fgmdc-handover-container\",\n                children: [networkElementInfo[\"Handover-prepare_button\"] === \"True\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: this.toggleHandOver,\n                  children: \"Handover Prepare\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 41\n                }, this), networkElementInfo.Path_sw_req_button === \"True\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: this.togglePathSwitch,\n                  children: \"Path Switch Request\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 29\n            }, this), !firstCallDone && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"each-widget-loading\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: loadingIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 8,\n          md: 6,\n          xs: 12,\n          className: \"fgd-form individual-grid-five-g\",\n          children: /*#__PURE__*/_jsxDEV(Widget, {\n            title: \"Statistics\",\n            upperTitle: true,\n            bodyclassName: '',\n            className: '',\n            disableWidgetMenu: true,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fgm-stats-container\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  className: \"fgd-form\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"fgmsc-main\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: chart1 ? chart1.title : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fgscm-chart\",\n                      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                        width: \"100%\",\n                        height: 250,\n                        children: /*#__PURE__*/_jsxDEV(LineChart, {\n                          width: 500,\n                          height: 250,\n                          data: chart1 && chart1.data ? chart1.data : [],\n                          margin: {\n                            top: 10,\n                            right: 30,\n                            left: 0,\n                            bottom: 40\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                            strokeDasharray: \"3 3\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 431,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                            dataKey: \"name\",\n                            angle: -45,\n                            textAnchor: \"end\",\n                            interval: 2\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 432,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 433,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 434,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Line, {\n                            type: \"monotone\",\n                            dataKey: \"value\",\n                            stroke: \"#8884d8\",\n                            fill: \"#8884d8\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 435,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Brush, {\n                            stroke: \"#8784d8\",\n                            startIndex: 0,\n                            endIndex: chart1 && chart1.data ? chart1.data.length > 20 ? 19 : chart1.data.length - 1 : 0,\n                            height: 20,\n                            fill: \"rgba(0, 0, 0, 0)\",\n                            y: 220,\n                            children: /*#__PURE__*/_jsxDEV(Area, {\n                              x: 0,\n                              y: 30,\n                              type: \"monotone\",\n                              dataKey: \"value\",\n                              stroke: \"#000\",\n                              fill: \"url(#splitColor)\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 443,\n                              columnNumber: 58\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 436,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 420,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 419,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  className: \"fgd-form\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"fgmsc-main\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: chart2 ? chart2.title : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 452,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fgscm-chart\",\n                      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                        width: \"100%\",\n                        height: 250,\n                        children: /*#__PURE__*/_jsxDEV(LineChart, {\n                          width: 500,\n                          height: 250,\n                          data: chart2 && chart2.data ? chart2.data : [],\n                          margin: {\n                            top: 10,\n                            right: 30,\n                            left: 0,\n                            bottom: 40\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                            strokeDasharray: \"3 3\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 466,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                            dataKey: \"name\",\n                            angle: -45,\n                            textAnchor: \"end\",\n                            interval: 2\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 467,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 468,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 469,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Line, {\n                            type: \"monotone\",\n                            dataKey: \"value\",\n                            stroke: \"#8884d8\",\n                            fill: \"#8884d8\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 470,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Brush, {\n                            stroke: \"#8784d8\",\n                            startIndex: 0,\n                            endIndex: chart1 && chart1.data ? chart1.data.length > 20 ? 19 : chart1.data.length - 1 : 0,\n                            height: 20,\n                            fill: \"rgba(0, 0, 0, 0)\",\n                            y: 220,\n                            children: /*#__PURE__*/_jsxDEV(Area, {\n                              type: \"monotone\",\n                              dataKey: \"value\",\n                              stroke: \"#000\",\n                              fill: \"url(#splitColor)\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 478,\n                              columnNumber: 58\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 471,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 455,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 454,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  className: \"fgd-form\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"fgmsc-main\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: chart3 ? chart3.title : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fgscm-chart\",\n                      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                        width: \"100%\",\n                        height: 250,\n                        children: chart3 && chart3.dataRx ? /*#__PURE__*/_jsxDEV(LineChart, {\n                          width: 500,\n                          height: 250,\n                          margin: {\n                            top: 10,\n                            right: 30,\n                            left: 0,\n                            bottom: 40\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                            strokeDasharray: \"3 3\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 503,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                            dataKey: \"category\",\n                            type: \"category\",\n                            allowDuplicatedCategory: false,\n                            angle: -45,\n                            textAnchor: \"end\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 504,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                            dataKey: \"value\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 505,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 506,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(Line, {\n                            dataKey: \"value\",\n                            data: chart3 && chart3.dataTx ? chart3.dataTx : [],\n                            name: \"TX\",\n                            stroke: \"#8884d8\",\n                            fill: \"#8884d8\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 507,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(Line, {\n                            dataKey: \"value\",\n                            data: chart3 && chart3.dataRx ? chart3.dataRx : [],\n                            name: \"RX\",\n                            stroke: \"#8884d8\",\n                            fill: \"#8884d8\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 508,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(Brush, {\n                            stroke: \"green\",\n                            startIndex: 0,\n                            endIndex: 20,\n                            height: 20,\n                            fill: \"rgba(0, 0, 0, 0)\",\n                            y: 220,\n                            children: /*#__PURE__*/_jsxDEV(Area, {\n                              data: chart3 && chart3.dataTx ? chart3.dataTx : [],\n                              stroke: \"#000\",\n                              fill: \"url(#splitColor)\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 516,\n                              columnNumber: 66\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 509,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 493,\n                          columnNumber: 61\n                        }, this) : /*#__PURE__*/_jsxDEV(LineChart, {\n                          width: 500,\n                          height: 250,\n                          data: chart3 && chart3.dataTx ? chart3.dataTx : [],\n                          margin: {\n                            top: 10,\n                            right: 30,\n                            left: 0,\n                            bottom: 40\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                            strokeDasharray: \"3 3\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 530,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                            dataKey: \"name\",\n                            angle: -45,\n                            textAnchor: \"end\",\n                            interval: 2\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 531,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 532,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 533,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(Line, {\n                            type: \"monotone\",\n                            dataKey: \"value\",\n                            stroke: \"#8884d8\",\n                            fill: \"#8884d8\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 534,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(Brush, {\n                            stroke: \"#8784d8\",\n                            startIndex: 0,\n                            endIndex: chart3 && chart3.dataTx ? chart3.dataTx.length > 20 ? 19 : chart3.dataTx.length - 1 : 0,\n                            height: 20,\n                            fill: \"rgba(0, 0, 0, 0)\",\n                            y: 220,\n                            children: /*#__PURE__*/_jsxDEV(Area, {\n                              x: 0,\n                              y: 30,\n                              type: \"monotone\",\n                              dataKey: \"value\",\n                              stroke: \"#000\",\n                              fill: \"url(#splitColor)\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 542,\n                              columnNumber: 66\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 535,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 519,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 489,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 29\n            }, this), !firstCallDone && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"each-widget-loading\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: loadingIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: \"fgd-form individual-grid-five-g\",\n          children: /*#__PURE__*/_jsxDEV(Widget, {\n            title: \"\",\n            upperTitle: true,\n            bodyclassName: '',\n            className: '',\n            disableWidgetMenu: true,\n            children: [/*#__PURE__*/_jsxDEV(Tabs, {\n              className: \"ne-tabs\",\n              children: [/*#__PURE__*/_jsxDEV(TabList, {\n                children: [/*#__PURE__*/_jsxDEV(Tab, {\n                  children: \"Packets\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  children: \"Logs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  children: \"Console\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"fdg-packets-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"fdgpc-head\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fdgpce-row\",\n                      children: \"Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 579,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fdgpce-row\",\n                      children: \"Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 580,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fdgpce-row\",\n                      children: \"Source\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 581,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fdgpce-row\",\n                      children: \"Destination\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 582,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fdgpce-row\",\n                      children: \"Protocol\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 583,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fdgpce-row\",\n                      children: \"Details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 584,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 41\n                  }, this), networkElementInfo && networkElementInfo.NF_packets && networkElementInfo.NF_packets.length > 0 && networkElementInfo.NF_packets.map((eachPacket, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"fdgpc-each\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fdgpce-row\",\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 591,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fdgpce-row\",\n                        children: eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"frame.time\"] && eachPacket._source.layers[\"frame.time\"][0] && moment(eachPacket._source.layers[\"frame.time\"][0]).format('MM-DD-YYYY hh:mm:ss')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 592,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fdgpce-row\",\n                        children: eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"ip.src\"] && eachPacket._source.layers[\"ip.src\"][0]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 598,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fdgpce-row\",\n                        children: eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"ip.src\"] && eachPacket._source.layers[\"ip.dst\"][0]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 604,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fdgpce-row\",\n                        children: eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"_ws.col.Protocol\"] && eachPacket._source.layers[\"_ws.col.Protocol\"][0]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 610,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"fdgpce-row\",\n                        children: eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"_ws.col.Info\"] && eachPacket._source.layers[\"_ws.col.Info\"][0]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 616,\n                        columnNumber: 57\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 590,\n                      columnNumber: 53\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"fdg-logs-container\",\n                  children: networkElementInfo && networkElementInfo.NF_Logs && networkElementInfo.NF_Logs.length > 0 && networkElementInfo.NF_Logs.map((eachLog, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: eachLog\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 635,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \" Terminal \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 29\n            }, this), !firstCallDone && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"each-widget-loading\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: loadingIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: handoverStatus,\n        id: \"handover-prepare\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: [\"Handover Prepare\", /*#__PURE__*/_jsxDEV(Icons.Close, {\n            fontSize: \"small\",\n            className: \"hp-close-icon\",\n            onClick: this.toggleHandOver\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: \"hp-container\",\n            container: true,\n            spacing: 2,\n            children: [handOverError && handOverError !== '' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hpc-error\",\n              children: handOverError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              className: \"fgd-form\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"hpc-content\",\n                children: [ueList && ueList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"hpc-table-each\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"hpct-row\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 671,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"hpct-row\",\n                    children: \"UEID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"hpct-row\",\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 673,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 41\n                }, this), !callUnderProgress && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: ueList && ueList.length > 0 ? ueList.map((eachUe, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"hpc-table-each\",\n                      onClick: () => {\n                        this.handleHandoverChange(eachUe[\"- ue-id\"]);\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"hpct-row\",\n                        children: /*#__PURE__*/_jsxDEV(MyRadio, {\n                          checked: selectedHandoverElement === eachUe[\"- ue-id\"],\n                          onChange: () => {\n                            this.handleHandoverChange(eachUe[\"- ue-id\"]);\n                          },\n                          value: eachUe[\"- ue-id\"],\n                          name: \"radio-button-demo\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 686,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 685,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"hpct-row\",\n                        children: eachUe[\"- ue-id\"]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 693,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"hpct-row\",\n                        children: \"Connected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 694,\n                        columnNumber: 65\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 684,\n                      columnNumber: 61\n                    }, this);\n                  }) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"no_ue\",\n                    children: \"No UE to handover\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 697,\n                    columnNumber: 58\n                  }, this)\n                }, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: callUnderProgress ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: loadingIcon,\n            className: \"call_under_progress_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: ueList && ueList.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.submitHandOver,\n              color: \"primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 45\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: pathSwitchStatus,\n        id: \"path-switch\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: [\"Path Switch Request\", /*#__PURE__*/_jsxDEV(Icons.Close, {\n            fontSize: \"small\",\n            className: \"hp-close-icon\",\n            onClick: this.togglePathSwitch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: \"hp-container\",\n            container: true,\n            spacing: 2,\n            children: [pathSwitchError && pathSwitchError !== '' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hpc-error\",\n              children: pathSwitchError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              className: \"fgd-form\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"hpc-content\",\n                children: [pathSwitch && pathSwitch.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"hpc-table-each\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"hpct-row\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 740,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"hpct-row\",\n                    children: \"UEID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 741,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"hpct-row\",\n                    children: \"Source gNB ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 742,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 739,\n                  columnNumber: 41\n                }, this), !callUnderProgress && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: pathSwitch && pathSwitch.length > 0 ? pathSwitch.map((eachUe, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"hpc-table-each\",\n                      onClick: () => {\n                        this.handlePathSwitchChange(eachUe[\"key\"]);\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"hpct-row\",\n                        children: /*#__PURE__*/_jsxDEV(MyRadio, {\n                          checked: selectedPathSwitchElement === eachUe[\"key\"],\n                          onChange: () => {\n                            this.handlePathSwitchChange(eachUe[\"key\"]);\n                          },\n                          value: eachUe[\"key\"],\n                          name: \"radio-button-demo\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 754,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 753,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"hpct-row\",\n                        children: eachUe[\"ueid\"]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 761,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"hpct-row\",\n                        children: eachUe[\"source\"]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 762,\n                        columnNumber: 65\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 752,\n                      columnNumber: 61\n                    }, this);\n                  }) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"no_ue\",\n                    children: \"No UE to switch\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 765,\n                    columnNumber: 58\n                  }, this)\n                }, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: callUnderProgress ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: loadingIcon,\n            className: \"call_under_progress_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: pathSwitch && pathSwitch.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.submitPathSwitch,\n              color: \"primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 41\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  config: state.config\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonitorNetworkElement);","map":{"version":3,"sources":["/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetworkElement/monitorNetworkElement.js"],"names":["React","Component","connect","axios","Grid","Button","Dialog","DialogTitle","DialogContent","DialogActions","Radio","withStyles","Icons","ResponsiveContainer","LineChart","Line","YAxis","XAxis","CartesianGrid","Tooltip","Legend","Brush","Area","moment","Tab","Tabs","TabList","TabPanel","loadingIcon","Widget","apiService","MyRadio","root","color","checked","props","MonitorNetworkElement","constructor","getElementDetails","thisView","monitorHomeToken","cancel","CancelToken","source","all","token","match","params","id","then","res","networkInfo","setState","networkElementInfo","processChartData","firstCallDone","catch","console","log","chart1","chart2","chart3","NF_stats","data","map","eachPoint","name","Object","keys","format","value","dataTx","dataRx","Array","isArray","push","category","toggleHandOver","state","handoverStatus","ueList","handOverError","selectedHandoverElement","getUEList","togglePathSwitch","pathSwitchStatus","pathSwitch","pathSwitchError","selectedPathSwitchElement","getPathSwitch","handleHandoverChange","handlePathSwitchChange","ueListToken","callUnderProgress","length","submitHandOver","prepareHandoverToken","containerId","ueId","trim","prepareHandOver","pathSwitchToken","getPathSwitchList","pathSwitchData","eachSwitch","temp","eachField","submitPathSwitch","submitPathSwitchToken","lineData","uv","componentDidMount","componentDidUpdate","prevProps","prevState","render","name_of_nf","toUpperCase","State","Health","DNN","hasOwnProperty","Management_IP","no_UEsserved","Path_sw_req_button","title","top","right","left","bottom","NF_packets","eachPacket","index","_source","layers","NF_Logs","eachLog","eachUe","mapStateToProps","config","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;AAEA,SACIC,IADJ,EAEIC,MAFJ,EAGIC,MAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,aANJ,EAOIC,KAPJ,EAQIC,UARJ,QASO,mBATP;AAWA,OAAO,KAAKC,KAAZ,MAAuB,oBAAvB;AAEA,SACIC,mBADJ,EAEIC,SAFJ,EAGIC,IAHJ,EAIIC,KAJJ,EAKIC,KALJ,EAMIC,aANJ,EAOIC,OAPJ,EAQIC,MARJ,EASIC,KATJ,EAUIC,IAVJ,QAWO,UAXP;AAYA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,YAA7C;AACA,OAAO,iCAAP;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;;;AAGA,MAAMC,OAAO,GAAGpB,UAAU,CAAC;AACvBqB,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,SADL;AAEF,iBAAa;AACTA,MAAAA,KAAK,EAAE;AADE;AAFX,GADiB;AAOvBC,EAAAA,OAAO,EAAE;AAPc,CAAD,CAAV,CAQZC,KAAD,iBAAW,QAAC,KAAD;AAAO,EAAA,KAAK,EAAC,SAAb;AAAA,KAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,QARE,CAAhB;;AAUA,MAAMC,qBAAN,SAAoCnC,SAApC,CAA8C;AAE1CoC,EAAAA,WAAW,CAACF,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqCnBG,iBArCmB,GAqCC,MAAM;AAEtB,UAAIC,QAAQ,GAAG,IAAf;AACA,UAAI,KAAKC,gBAAT,EACI,KAAKA,gBAAL,CAAsBC,MAAtB;AACJ,WAAKD,gBAAL,GAAwBrC,KAAK,CAACuC,WAAN,CAAkBC,MAAlB,EAAxB;AAEAxC,MAAAA,KAAK,CAACyC,GAAN,CAAU,CAACd,UAAU,CAACQ,iBAAX,CAA6B,KAAKE,gBAAL,CAAsBK,KAAnD,EAA0D,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,EAAlF,CAAD,CAAV,EACKC,IADL,CACU,UAAUC,GAAV,EAAe;AACjB,YAAIA,GAAG,CAAC,CAAD,CAAP,EAAY;AACR,cAAIC,WAAW,GAAGD,GAAG,CAAC,CAAD,CAAH,CAAO,MAAP,IAAiBA,GAAG,CAAC,CAAD,CAAH,CAAO,MAAP,CAAjB,GAAkC,EAApD;AACAX,UAAAA,QAAQ,CAACa,QAAT,CAAkB;AAAEC,YAAAA,kBAAkB,EAAEF;AAAtB,WAAlB;AACAZ,UAAAA,QAAQ,CAACe,gBAAT,CAA0BH,WAA1B;AACAZ,UAAAA,QAAQ,CAACa,QAAT,CAAkB;AAAEG,YAAAA,aAAa,EAAE;AAAjB,WAAlB;AACH;AACJ,OARL,EAQOC,KARP,CAQa,UAAUN,GAAV,EAAe;AACpBO,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AAEH,OAZL;AAcH,KA1DkB;;AAAA,SA4DnBJ,gBA5DmB,GA4DCH,WAAD,IAAiB;AAEhC,UAAIQ,MAAM,GAAG,EAAb;AAAA,UAAiBC,MAAM,GAAG,EAA1B;AAAA,UAA8BC,MAAM,GAAG,EAAvC;;AACA,UAAIV,WAAW,IAAIA,WAAW,CAACW,QAA/B,EAAyC;AACrC,YAAIX,WAAW,CAACW,QAAZ,CAAqBH,MAAzB,EACIA,MAAM,GAAGR,WAAW,CAACW,QAAZ,CAAqBH,MAA9B;AACJ,YAAIR,WAAW,CAACW,QAAZ,CAAqBF,MAAzB,EACIA,MAAM,GAAGT,WAAW,CAACW,QAAZ,CAAqBF,MAA9B;AACJ,YAAIT,WAAW,CAACW,QAAZ,CAAqBD,MAAzB,EACIA,MAAM,GAAGV,WAAW,CAACW,QAAZ,CAAqBD,MAA9B;AACP;;AAED,UAAIF,MAAM,CAACI,IAAX,EAAiB;AACbJ,QAAAA,MAAM,CAACI,IAAP,GAAcJ,MAAM,CAACI,IAAP,CAAYC,GAAZ,CAAiBC,SAAD,IAAe;AAEzC,iBAAO;AACHC,YAAAA,IAAI,EAAE3C,MAAM,CAAC4C,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,CAAvB,CAAD,CAAN,CAAkCI,MAAlC,CAAyC,SAAzC,CADH;AAEHC,YAAAA,KAAK,EAAEL,SAAS,CAACE,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,CAAvB,CAAD;AAFb,WAAP;AAIH,SANa,CAAd;AAOA,aAAKb,QAAL,CAAc;AAAEO,UAAAA;AAAF,SAAd;AACH;;AAED,UAAIC,MAAM,CAACG,IAAX,EAAiB;AACbH,QAAAA,MAAM,CAACG,IAAP,GAAcH,MAAM,CAACG,IAAP,CAAYC,GAAZ,CAAiBC,SAAD,IAAe;AAEzC,iBAAO;AACHC,YAAAA,IAAI,EAAE3C,MAAM,CAAC4C,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,CAAvB,CAAD,CAAN,CAAkCI,MAAlC,CAAyC,SAAzC,CADH;AAEHC,YAAAA,KAAK,EAAEL,SAAS,CAACE,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,CAAvB,CAAD;AAFb,WAAP;AAIH,SANa,CAAd;AAOA,aAAKb,QAAL,CAAc;AAAEQ,UAAAA;AAAF,SAAd;AACH;;AAED,UAAIC,MAAM,CAACE,IAAX,EAAiB;AACbF,QAAAA,MAAM,CAACU,MAAP,GAAgB,EAAhB;AACAV,QAAAA,MAAM,CAACW,MAAP,GAAgB,EAAhB;AACAX,QAAAA,MAAM,CAACE,IAAP,CAAYC,GAAZ,CAAiBC,SAAD,IAAe;AAE3B,cAAIQ,KAAK,CAACC,OAAN,CAAcT,SAAS,CAACE,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,CAAvB,CAAD,CAAvB,CAAJ,EAAyD;AACrDJ,YAAAA,MAAM,CAACU,MAAP,CAAcI,IAAd,CAAmB;AACfC,cAAAA,QAAQ,EAAErD,MAAM,CAAC4C,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,CAAvB,CAAD,CAAN,CAAkCI,MAAlC,CAAyC,SAAzC,CADK;AAEfC,cAAAA,KAAK,EAAEL,SAAS,CAACE,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,CAAvB,CAAD,CAAT,CAAqC,CAArC;AAFQ,aAAnB;AAKAJ,YAAAA,MAAM,CAACW,MAAP,CAAcG,IAAd,CAAmB;AACfC,cAAAA,QAAQ,EAAErD,MAAM,CAAC4C,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,CAAvB,CAAD,CAAN,CAAkCI,MAAlC,CAAyC,SAAzC,CADK;AAEfC,cAAAA,KAAK,EAAEL,SAAS,CAACE,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,CAAvB,CAAD,CAAT,CAAqC,CAArC;AAFQ,aAAnB;AAIH,WAVD,MAUO;AACHJ,YAAAA,MAAM,CAACU,MAAP,CAAcI,IAAd,CAAmB;AACfT,cAAAA,IAAI,EAAE3C,MAAM,CAAC4C,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,CAAvB,CAAD,CAAN,CAAkCI,MAAlC,CAAyC,SAAzC,CADS;AAEfC,cAAAA,KAAK,EAAEL,SAAS,CAACE,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,CAAvB,CAAD;AAFD,aAAnB;AAIAJ,YAAAA,MAAM,CAACW,MAAP,GAAgB,IAAhB;AACH;AAGJ,SArBD;AAsBA,aAAKpB,QAAL,CAAc;AAAES,UAAAA;AAAF,SAAd;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACH;AAEJ,KA3HkB;;AAAA,SA6HnBgB,cA7HmB,GA6HF,MAAM;AACnB,UAAI,CAAC,KAAKC,KAAL,CAAWC,cAAhB,EAAgC;AAC5B,aAAK3B,QAAL,CAAc;AAAE4B,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,aAAa,EAAE,EAA7B;AAAiCC,UAAAA,uBAAuB,EAAE;AAA1D,SAAd;AACA,aAAKC,SAAL;AACH;;AAED,WAAK/B,QAAL,CAAc;AAAE2B,QAAAA,cAAc,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA9B,OAAd;AACH,KApIkB;;AAAA,SAsInBK,gBAtImB,GAsIA,MAAM;AACrB,UAAI,CAAC,KAAKN,KAAL,CAAWO,gBAAhB,EAAkC;AAC9B,aAAKjC,QAAL,CAAc;AAAEkC,UAAAA,UAAU,EAAE,EAAd;AAAkBC,UAAAA,eAAe,EAAE,EAAnC;AAAuCC,UAAAA,yBAAyB,EAAE;AAAlE,SAAd;AACA,aAAKC,aAAL;AACH;;AAED,WAAKrC,QAAL,CAAc;AAAEiC,QAAAA,gBAAgB,EAAE,CAAC,KAAKP,KAAL,CAAWO;AAAhC,OAAd;AACH,KA7IkB;;AAAA,SA+InBK,oBA/ImB,GA+IKpB,KAAD,IAAW;AAC9B,WAAKlB,QAAL,CAAc;AAAE8B,QAAAA,uBAAuB,EAAEZ;AAA3B,OAAd;AACH,KAjJkB;;AAAA,SAmJnBqB,sBAnJmB,GAmJOrB,KAAD,IAAW;AAChC,WAAKlB,QAAL,CAAc;AAAEoC,QAAAA,yBAAyB,EAAElB;AAA7B,OAAd;AACH,KArJkB;;AAAA,SAuJnBa,SAvJmB,GAuJP,MAAM;AAEd,UAAI5C,QAAQ,GAAG,IAAf;AACA,UAAI,KAAKqD,WAAT,EACI,KAAKA,WAAL,CAAiBnD,MAAjB;AACJ,WAAKmD,WAAL,GAAmBzF,KAAK,CAACuC,WAAN,CAAkBC,MAAlB,EAAnB;AAEA,WAAKS,QAAL,CAAc;AAAEyC,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACA1F,MAAAA,KAAK,CAACyC,GAAN,CAAU,CAACd,UAAU,CAACqD,SAAX,CAAqB,KAAKS,WAAL,CAAiB/C,KAAtC,EAA6C,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,EAArE,CAAD,CAAV,EACKC,IADL,CACU,UAAUC,GAAV,EAAe;AACjB,YAAIA,GAAG,CAAC,CAAD,CAAP,EAAY;AAGR,cAAI8B,MAAM,GAAI9B,GAAG,CAAC,CAAD,CAAH,CAAO,MAAP,KAAkBA,GAAG,CAAC,CAAD,CAAH,CAAO,MAAP,EAAe,QAAf,CAAnB,GAA+CA,GAAG,CAAC,CAAD,CAAH,CAAO,MAAP,EAAe,QAAf,CAA/C,GAA0E,EAAvF;;AACA,cAAI8B,MAAM,IAAIA,MAAM,CAACc,MAAP,GAAgB,CAA1B,IAA+B,CAACd,MAAM,CAAC,CAAD,CAAN,CAAU,SAAV,CAApC,EAA0D;AACtDA,YAAAA,MAAM,GAAG,EAAT;AACH;;AAEDzC,UAAAA,QAAQ,CAACa,QAAT,CAAkB;AAAE4B,YAAAA,MAAM,EAAEA;AAAV,WAAlB;AACAzC,UAAAA,QAAQ,CAACa,QAAT,CAAkB;AAAEyC,YAAAA,iBAAiB,EAAE;AAArB,WAAlB;AACH;AACJ,OAbL,EAaOrC,KAbP,CAaa,UAAUN,GAAV,EAAe;AACpBO,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAnB,QAAAA,QAAQ,CAACa,QAAT,CAAkB;AAAEyC,UAAAA,iBAAiB,EAAE;AAArB,SAAlB;AACH,OAjBL;AAmBH,KAlLkB;;AAAA,SAoLnBE,cApLmB,GAoLF,MAAM;AAGnB,UAAI,CAAC,KAAKjB,KAAL,CAAWI,uBAAhB,EAAyC;AACrC,aAAK9B,QAAL,CAAc;AAAE6B,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACA;AACH,OAHD,MAGO;AACH,aAAK7B,QAAL,CAAc;AAAE6B,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACH;;AAED,UAAI1C,QAAQ,GAAG,IAAf;AACA,UAAI,KAAKyD,oBAAT,EACI,KAAKA,oBAAL,CAA0BvD,MAA1B;AACJ,WAAKuD,oBAAL,GAA4B7F,KAAK,CAACuC,WAAN,CAAkBC,MAAlB,EAA5B;AAEA,UAAIoB,IAAI,GAAG;AACPkC,QAAAA,WAAW,EAAE,KAAK9D,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,EAD9B;AAEPkD,QAAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWI,uBAAX,CAAmCiB,IAAnC;AAFC,OAAX;AAKA,WAAK/C,QAAL,CAAc;AAAEyC,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACA1F,MAAAA,KAAK,CAACyC,GAAN,CAAU,CAACd,UAAU,CAACsE,eAAX,CAA2B,KAAKJ,oBAAL,CAA0BnD,KAArD,EAA4DkB,IAA5D,CAAD,CAAV,EACKd,IADL,CACU,UAAUC,GAAV,EAAe;AACjB,YAAIA,GAAG,CAAC,CAAD,CAAP,EAAY;AACRX,UAAAA,QAAQ,CAACa,QAAT,CAAkB;AAAEyC,YAAAA,iBAAiB,EAAE;AAArB,WAAlB;AACAtD,UAAAA,QAAQ,CAACsC,cAAT;AACH;AACJ,OANL,EAMOrB,KANP,CAMa,UAAUN,GAAV,EAAe;AACpBO,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAnB,QAAAA,QAAQ,CAACa,QAAT,CAAkB;AAAEyC,UAAAA,iBAAiB,EAAE;AAArB,SAAlB;AACH,OAVL;AAYH,KArNkB;;AAAA,SAuNnBJ,aAvNmB,GAuNH,MAAM;AAElB,UAAIlD,QAAQ,GAAG,IAAf;AACA,UAAI,KAAK8D,eAAT,EACI,KAAKA,eAAL,CAAqB5D,MAArB;AACJ,WAAK4D,eAAL,GAAuBlG,KAAK,CAACuC,WAAN,CAAkBC,MAAlB,EAAvB;AAEA,WAAKS,QAAL,CAAc;AAAEyC,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACA1F,MAAAA,KAAK,CAACyC,GAAN,CAAU,CAACd,UAAU,CAACwE,iBAAX,CAA6B,KAAKD,eAAL,CAAqBxD,KAAlD,CAAD,CAAV,EACKI,IADL,CACU,UAAUC,GAAV,EAAe;AACjB,YAAIA,GAAG,CAAC,CAAD,CAAP,EAAY;AAER,cAAIqD,cAAc,GAAIrD,GAAG,CAAC,CAAD,CAAH,CAAO,MAAP,KAAkBA,GAAG,CAAC,CAAD,CAAH,CAAO,MAAP,CAAnB,GAAqCA,GAAG,CAAC,CAAD,CAAH,CAAO,MAAP,CAArC,GAAsD,EAA3E;AAEAqD,UAAAA,cAAc,GAAGA,cAAc,CAACvC,GAAf,CAAoBwC,UAAD,IAAgB;AAChD,gBAAIC,IAAI,GAAG,EAAX;AACAD,YAAAA,UAAU,CAACxC,GAAX,CAAgB0C,SAAD,IAAe;AAC1B,kBAAIvC,MAAM,CAACC,IAAP,CAAYsC,SAAZ,EAAuB,CAAvB,MAA8B,cAAlC,EAAkD;AAC9CD,gBAAAA,IAAI,CAAC,KAAD,CAAJ,GAAcC,SAAS,CAAC,cAAD,CAAvB;AACH,eAFD,MAEO,IAAIvC,MAAM,CAACC,IAAP,CAAYsC,SAAZ,EAAuB,CAAvB,MAA8B,MAAlC,EAA0C;AAC7CD,gBAAAA,IAAI,CAAC,MAAD,CAAJ,GAAeC,SAAS,CAAC,MAAD,CAAxB;AACH,eAFM,MAEA,IAAIvC,MAAM,CAACC,IAAP,CAAYsC,SAAZ,EAAuB,CAAvB,MAA8B,YAAlC,EAAgD;AACnDD,gBAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiBC,SAAS,CAAC,YAAD,CAA1B;AACH;AACJ,aARD;AASA,mBAAOD,IAAP;AACH,WAZgB,CAAjB;AAeAlE,UAAAA,QAAQ,CAACa,QAAT,CAAkB;AAAEkC,YAAAA,UAAU,EAAEiB;AAAd,WAAlB;AACAhE,UAAAA,QAAQ,CAACa,QAAT,CAAkB;AAAEyC,YAAAA,iBAAiB,EAAE;AAArB,WAAlB;AACH;AACJ,OAxBL,EAwBOrC,KAxBP,CAwBa,UAAUN,GAAV,EAAe;AACpBO,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAnB,QAAAA,QAAQ,CAACa,QAAT,CAAkB;AAAEyC,UAAAA,iBAAiB,EAAE;AAArB,SAAlB;AACH,OA5BL;AA8BH,KA7PkB;;AAAA,SA+PnBc,gBA/PmB,GA+PA,MAAM;AAGrB,UAAI,CAAC,KAAK7B,KAAL,CAAWU,yBAAhB,EAA2C;AACvC,aAAKpC,QAAL,CAAc;AAAEmC,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACA;AACH;;AAED,UAAIhD,QAAQ,GAAG,IAAf;AACA,UAAI,KAAKqE,qBAAT,EACI,KAAKA,qBAAL,CAA2BnE,MAA3B;AACJ,WAAKmE,qBAAL,GAA6BzG,KAAK,CAACuC,WAAN,CAAkBC,MAAlB,EAA7B;AAEA,UAAIoB,IAAI,GAAG;AACPkC,QAAAA,WAAW,EAAE,KAAK9D,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,EAD9B;AAEPA,QAAAA,EAAE,EAAE,KAAK8B,KAAL,CAAWU;AAFR,OAAX;AAKA,WAAKpC,QAAL,CAAc;AAAEyC,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACA1F,MAAAA,KAAK,CAACyC,GAAN,CAAU,CAACd,UAAU,CAAC6E,gBAAX,CAA4B,KAAKC,qBAAL,CAA2B/D,KAAvD,EAA8DkB,IAA9D,CAAD,CAAV,EACKd,IADL,CACU,UAAUC,GAAV,EAAe;AACjB,YAAIA,GAAG,CAAC,CAAD,CAAP,EAAY;AACRX,UAAAA,QAAQ,CAACa,QAAT,CAAkB;AAAEyC,YAAAA,iBAAiB,EAAE;AAArB,WAAlB;AACAtD,UAAAA,QAAQ,CAAC6C,gBAAT;AACH;AACJ,OANL,EAMO5B,KANP,CAMa,UAAUN,GAAV,EAAe;AACpBO,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAnB,QAAAA,QAAQ,CAACa,QAAT,CAAkB;AAAEyC,UAAAA,iBAAiB,EAAE;AAArB,SAAlB;AACH,OAVL;AAYH,KA9RkB;;AAGf,SAAKf,KAAL,GAAa;AACT+B,MAAAA,QAAQ,EAAE,CACN;AAAE3C,QAAAA,IAAI,EAAE,QAAR;AAAkB4C,QAAAA,EAAE,EAAE;AAAtB,OADM,EAEN;AAAE5C,QAAAA,IAAI,EAAE,QAAR;AAAkB4C,QAAAA,EAAE,EAAE;AAAtB,OAFM,EAGN;AAAE5C,QAAAA,IAAI,EAAE,QAAR;AAAkB4C,QAAAA,EAAE,EAAE;AAAtB,OAHM,EAIN;AAAE5C,QAAAA,IAAI,EAAE,QAAR;AAAkB4C,QAAAA,EAAE,EAAE;AAAtB,OAJM,EAKN;AAAE5C,QAAAA,IAAI,EAAE,QAAR;AAAkB4C,QAAAA,EAAE,EAAE;AAAtB,OALM,CADD;AAQTnD,MAAAA,MAAM,EAAE,EARC;AAQGC,MAAAA,MAAM,EAAE,EARX;AAQeC,MAAAA,MAAM,EAAE,EARvB;AASPR,MAAAA,kBAAkB,EAAE,EATb;AAUT0B,MAAAA,cAAc,EAAE,KAVP;AAUcM,MAAAA,gBAAgB,EAAE,KAVhC;AAUuCJ,MAAAA,aAAa,EAAE,EAVtD;AAU0DD,MAAAA,MAAM,EAAE,EAVlE;AAWTE,MAAAA,uBAAuB,EAAE,IAXhB;AAWsBM,MAAAA,yBAAyB,EAAE,IAXjD;AAWuDD,MAAAA,eAAe,EAAE,EAXxE;AAW4ED,MAAAA,UAAU,EAAE,EAXxF;AAYTO,MAAAA,iBAAiB,EAAE,KAZV;AAaTtC,MAAAA,aAAa,EAAE;AAbN,KAAb;AAgBA,SAAKqC,WAAL,GAAmB,IAAnB;AACA,SAAKI,oBAAL,GAA4B,IAA5B;AACA,SAAKK,eAAL,GAAuB,IAAvB;AACA,SAAKO,qBAAL,GAA6B,IAA7B;AAEH;;AAEDG,EAAAA,iBAAiB,GAAG;AAEhB,SAAKzE,iBAAL;AACH;;AAED0E,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAID,SAAS,CAACnE,KAAV,CAAgBC,MAAhB,CAAuBC,EAAvB,KAA8B,KAAKb,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1D,EAA8D;AAC1D,WAAKV,iBAAL;AACH;AACJ;;AA8PD6E,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEN,MAAAA,QAAF;AAAYxD,MAAAA,kBAAZ;AAAgC0B,MAAAA,cAAhC;AAAgDG,MAAAA,uBAAhD;AACFG,MAAAA,gBADE;AACgBG,MAAAA,yBADhB;AAC2CK,MAAAA,iBAD3C;AAEFb,MAAAA,MAFE;AAEMC,MAAAA,aAFN;AAEqBK,MAAAA,UAFrB;AAEiCC,MAAAA,eAFjC;AAGF5B,MAAAA,MAHE;AAGMC,MAAAA,MAHN;AAGcC,MAAAA,MAHd;AAGsBN,MAAAA;AAHtB,QAGwC,KAAKuB,KAHnD;AAKA,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAyB,UAAA,EAAE,EAAE,EAA7B;AAAiC,UAAA,SAAS,EAAC,uCAA3C;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,KAAK,EAAEzB,kBAAkB,CAAC+D,UAAnB,GAAgC/D,kBAAkB,CAAC+D,UAAnB,CAA8BC,WAA9B,EAAhC,GAA8E,GADzF;AAEI,YAAA,UAAU,MAFd;AAGI,YAAA,aAAa,EAAE,EAHnB;AAII,YAAA,SAAS,EAAE,MAJf;AAKI,YAAA,iBAAiB,EAAE,IALvB;AAAA,oCAOI;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA,8BAAOhE,kBAAkB,CAACiE,KAAnB,GAA2BjE,kBAAkB,CAACiE,KAA9C,GAAsD;AAA7D;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA,8BAAOjE,kBAAkB,CAACkE,MAAnB,GAA4BlE,kBAAkB,CAACkE,MAA/C,GAAwD;AAA/D;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eASI;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA,8BAAOlE,kBAAkB,CAACmE,GAAnB,GAAyBnE,kBAAkB,CAACmE,GAA5C,GAAkD;AAAzD;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAeI;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAOnE,kBAAkB,CAACoE,cAAnB,CAAkC,eAAlC,IAAqDpE,kBAAkB,CAACqE,aAAxE,GAAwF;AAA/F;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfJ,eAoBI;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAOrE,kBAAkB,CAACoE,cAAnB,CAAkC,cAAlC,IAAoDpE,kBAAkB,CAACsE,YAAvE,GAAsF;AAA7F;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBJ,eAwBI;AAAK,gBAAA,SAAS,EAAC,0BAAf;AAAA,2BAEQtE,kBAAkB,CAAC,yBAAD,CAAlB,KAAkD,MAAlD,iBACA;AAAM,kBAAA,OAAO,EAAE,KAAKwB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHR,EAMQxB,kBAAkB,CAACuE,kBAAnB,KAA0C,MAA1C,iBACA;AAAM,kBAAA,OAAO,EAAE,KAAKxC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPR;AAAA;AAAA;AAAA;AAAA;AAAA,sBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,EA2CQ,CAAC7B,aAAD,iBACA;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,qCACI;AAAK,gBAAA,GAAG,EAAE3B;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBA5CR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAoDI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAyB,UAAA,EAAE,EAAE,EAA7B;AAAiC,UAAA,SAAS,EAAC,iCAA3C;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,KAAK,EAAC,YADV;AAEI,YAAA,UAAU,MAFd;AAGI,YAAA,aAAa,EAAE,EAHnB;AAII,YAAA,SAAS,EAAE,EAJf;AAKI,YAAA,iBAAiB,EAAE,IALvB;AAAA,oCAOI;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,OAAO,EAAE,CAAzB;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAkB,kBAAA,EAAE,EAAE,EAAtB;AAA0B,kBAAA,SAAS,EAAC,UAApC;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAA,gCAAO+B,MAAM,GAAGA,MAAM,CAACkE,KAAV,GAAkB;AAA/B;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAK,sBAAA,SAAS,EAAC,aAAf;AAAA,6CACI,QAAC,mBAAD;AAAqB,wBAAA,KAAK,EAAC,MAA3B;AAAkC,wBAAA,MAAM,EAAE,GAA1C;AAAA,+CACI,QAAC,SAAD;AACI,0BAAA,KAAK,EAAE,GADX;AAEI,0BAAA,MAAM,EAAE,GAFZ;AAGI,0BAAA,IAAI,EAAGlE,MAAM,IAAIA,MAAM,CAACI,IAAlB,GAA0BJ,MAAM,CAACI,IAAjC,GAAwC,EAHlD;AAII,0BAAA,MAAM,EAAE;AACJ+D,4BAAAA,GAAG,EAAE,EADD;AAEJC,4BAAAA,KAAK,EAAE,EAFH;AAGJC,4BAAAA,IAAI,EAAE,CAHF;AAIJC,4BAAAA,MAAM,EAAE;AAJJ,2BAJZ;AAAA,kDAWI,QAAC,aAAD;AAAe,4BAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kCAXJ,eAYI,QAAC,KAAD;AAAO,4BAAA,OAAO,EAAC,MAAf;AAAsB,4BAAA,KAAK,EAAE,CAAC,EAA9B;AAAkC,4BAAA,UAAU,EAAC,KAA7C;AAAmD,4BAAA,QAAQ,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA,kCAZJ,eAaI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kCAbJ,eAcI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kCAdJ,eAeI,QAAC,IAAD;AAAM,4BAAA,IAAI,EAAC,UAAX;AAAsB,4BAAA,OAAO,EAAC,OAA9B;AAAsC,4BAAA,MAAM,EAAC,SAA7C;AAAuD,4BAAA,IAAI,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,kCAfJ,eAgBI,QAAC,KAAD;AACI,4BAAA,MAAM,EAAC,SADX;AAEI,4BAAA,UAAU,EAAE,CAFhB;AAGI,4BAAA,QAAQ,EAAGtE,MAAM,IAAIA,MAAM,CAACI,IAAlB,GAA2BJ,MAAM,CAACI,IAAP,CAAY+B,MAAZ,GAAqB,EAArB,GAA0B,EAA1B,GAA+BnC,MAAM,CAACI,IAAP,CAAY+B,MAAZ,GAAqB,CAA/E,GAAoF,CAHlG;AAII,4BAAA,MAAM,EAAE,EAJZ;AAKI,4BAAA,IAAI,EAAC,kBALT;AAMI,4BAAA,CAAC,EAAE,GANP;AAAA,mDAOC,QAAC,IAAD;AAAM,8BAAA,CAAC,EAAE,CAAT;AAAY,8BAAA,CAAC,EAAE,EAAf;AAAmB,8BAAA,IAAI,EAAC,UAAxB;AAAmC,8BAAA,OAAO,EAAC,OAA3C;AAAmD,8BAAA,MAAM,EAAC,MAA1D;AAAiE,8BAAA,IAAI,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA;AAPD;AAAA;AAAA;AAAA;AAAA,kCAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAoCI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAkB,kBAAA,EAAE,EAAE,EAAtB;AAA0B,kBAAA,SAAS,EAAC,UAApC;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAA,gCAAOlC,MAAM,GAAGA,MAAM,CAACiE,KAAV,GAAkB;AAA/B;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAK,sBAAA,SAAS,EAAC,aAAf;AAAA,6CACI,QAAC,mBAAD;AAAqB,wBAAA,KAAK,EAAC,MAA3B;AAAkC,wBAAA,MAAM,EAAE,GAA1C;AAAA,+CACI,QAAC,SAAD;AACI,0BAAA,KAAK,EAAE,GADX;AAEI,0BAAA,MAAM,EAAE,GAFZ;AAGI,0BAAA,IAAI,EAAGjE,MAAM,IAAIA,MAAM,CAACG,IAAlB,GAA0BH,MAAM,CAACG,IAAjC,GAAwC,EAHlD;AAII,0BAAA,MAAM,EAAE;AACJ+D,4BAAAA,GAAG,EAAE,EADD;AAEJC,4BAAAA,KAAK,EAAE,EAFH;AAGJC,4BAAAA,IAAI,EAAE,CAHF;AAIJC,4BAAAA,MAAM,EAAE;AAJJ,2BAJZ;AAAA,kDAWI,QAAC,aAAD;AAAe,4BAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kCAXJ,eAYI,QAAC,KAAD;AAAO,4BAAA,OAAO,EAAC,MAAf;AAAsB,4BAAA,KAAK,EAAE,CAAC,EAA9B;AAAkC,4BAAA,UAAU,EAAC,KAA7C;AAAmD,4BAAA,QAAQ,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA,kCAZJ,eAaI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kCAbJ,eAcI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kCAdJ,eAeI,QAAC,IAAD;AAAM,4BAAA,IAAI,EAAC,UAAX;AAAsB,4BAAA,OAAO,EAAC,OAA9B;AAAsC,4BAAA,MAAM,EAAC,SAA7C;AAAuD,4BAAA,IAAI,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,kCAfJ,eAgBI,QAAC,KAAD;AACI,4BAAA,MAAM,EAAC,SADX;AAEI,4BAAA,UAAU,EAAE,CAFhB;AAGI,4BAAA,QAAQ,EAAGtE,MAAM,IAAIA,MAAM,CAACI,IAAlB,GAA2BJ,MAAM,CAACI,IAAP,CAAY+B,MAAZ,GAAqB,EAArB,GAA0B,EAA1B,GAA+BnC,MAAM,CAACI,IAAP,CAAY+B,MAAZ,GAAqB,CAA/E,GAAoF,CAHlG;AAII,4BAAA,MAAM,EAAE,EAJZ;AAKI,4BAAA,IAAI,EAAC,kBALT;AAMI,4BAAA,CAAC,EAAE,GANP;AAAA,mDAOC,QAAC,IAAD;AAAM,8BAAA,IAAI,EAAC,UAAX;AAAsB,8BAAA,OAAO,EAAC,OAA9B;AAAsC,8BAAA,MAAM,EAAC,MAA7C;AAAoD,8BAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA;AAPD;AAAA;AAAA;AAAA;AAAA,kCAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBApCJ,eAuEI,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAkB,kBAAA,EAAE,EAAE,EAAtB;AAA0B,kBAAA,SAAS,EAAC,UAApC;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAA,gCAAOjC,MAAM,GAAGA,MAAM,CAACgE,KAAV,GAAkB;AAA/B;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAK,sBAAA,SAAS,EAAC,aAAf;AAAA,6CACI,QAAC,mBAAD;AAAqB,wBAAA,KAAK,EAAC,MAA3B;AAAkC,wBAAA,MAAM,EAAE,GAA1C;AAAA,kCAEShE,MAAM,IAAIA,MAAM,CAACW,MAAlB,gBAEI,QAAC,SAAD;AACI,0BAAA,KAAK,EAAE,GADX;AAEI,0BAAA,MAAM,EAAE,GAFZ;AAGI,0BAAA,MAAM,EAAE;AACJsD,4BAAAA,GAAG,EAAE,EADD;AAEJC,4BAAAA,KAAK,EAAE,EAFH;AAGJC,4BAAAA,IAAI,EAAE,CAHF;AAIJC,4BAAAA,MAAM,EAAE;AAJJ,2BAHZ;AAAA,kDAUI,QAAC,aAAD;AAAe,4BAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kCAVJ,eAWI,QAAC,KAAD;AAAO,4BAAA,OAAO,EAAC,UAAf;AAA0B,4BAAA,IAAI,EAAC,UAA/B;AAA0C,4BAAA,uBAAuB,EAAE,KAAnE;AAA0E,4BAAA,KAAK,EAAE,CAAC,EAAlF;AAAsF,4BAAA,UAAU,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,kCAXJ,eAYI,QAAC,KAAD;AAAO,4BAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kCAZJ,eAaI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kCAbJ,eAcI,QAAC,IAAD;AAAM,4BAAA,OAAO,EAAC,OAAd;AAAsB,4BAAA,IAAI,EAAGpE,MAAM,IAAIA,MAAM,CAACU,MAAlB,GAA4BV,MAAM,CAACU,MAAnC,GAA4C,EAAxE;AAA4E,4BAAA,IAAI,EAAE,IAAlF;AAAwF,4BAAA,MAAM,EAAC,SAA/F;AAAyG,4BAAA,IAAI,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,kCAdJ,eAeI,QAAC,IAAD;AAAM,4BAAA,OAAO,EAAC,OAAd;AAAsB,4BAAA,IAAI,EAAGV,MAAM,IAAIA,MAAM,CAACW,MAAlB,GAA4BX,MAAM,CAACW,MAAnC,GAA4C,EAAxE;AAA4E,4BAAA,IAAI,EAAE,IAAlF;AAAwF,4BAAA,MAAM,EAAC,SAA/F;AAAyG,4BAAA,IAAI,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,kCAfJ,eAgBI,QAAC,KAAD;AACI,4BAAA,MAAM,EAAC,OADX;AAEI,4BAAA,UAAU,EAAE,CAFhB;AAGI,4BAAA,QAAQ,EAAE,EAHd;AAII,4BAAA,MAAM,EAAE,EAJZ;AAKI,4BAAA,IAAI,EAAC,kBALT;AAMI,4BAAA,CAAC,EAAE,GANP;AAAA,mDAOC,QAAC,IAAD;AAAM,8BAAA,IAAI,EAAGX,MAAM,IAAIA,MAAM,CAACU,MAAlB,GAA4BV,MAAM,CAACU,MAAnC,GAA4C,EAAxD;AAA4D,8BAAA,MAAM,EAAC,MAAnE;AAA0E,8BAAA,IAAI,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA;AAPD;AAAA;AAAA;AAAA;AAAA,kCAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,gBA4BI,QAAC,SAAD;AACI,0BAAA,KAAK,EAAE,GADX;AAEI,0BAAA,MAAM,EAAE,GAFZ;AAGI,0BAAA,IAAI,EAAGV,MAAM,IAAIA,MAAM,CAACU,MAAlB,GAA4BV,MAAM,CAACU,MAAnC,GAA4C,EAHtD;AAII,0BAAA,MAAM,EAAE;AACJuD,4BAAAA,GAAG,EAAE,EADD;AAEJC,4BAAAA,KAAK,EAAE,EAFH;AAGJC,4BAAAA,IAAI,EAAE,CAHF;AAIJC,4BAAAA,MAAM,EAAE;AAJJ,2BAJZ;AAAA,kDAWI,QAAC,aAAD;AAAe,4BAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kCAXJ,eAYI,QAAC,KAAD;AAAO,4BAAA,OAAO,EAAC,MAAf;AAAsB,4BAAA,KAAK,EAAE,CAAC,EAA9B;AAAkC,4BAAA,UAAU,EAAC,KAA7C;AAAmD,4BAAA,QAAQ,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA,kCAZJ,eAaI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kCAbJ,eAcI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kCAdJ,eAeI,QAAC,IAAD;AAAM,4BAAA,IAAI,EAAC,UAAX;AAAsB,4BAAA,OAAO,EAAC,OAA9B;AAAsC,4BAAA,MAAM,EAAC,SAA7C;AAAuD,4BAAA,IAAI,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,kCAfJ,eAgBI,QAAC,KAAD;AACI,4BAAA,MAAM,EAAC,SADX;AAEI,4BAAA,UAAU,EAAE,CAFhB;AAGI,4BAAA,QAAQ,EAAGpE,MAAM,IAAIA,MAAM,CAACU,MAAlB,GAA6BV,MAAM,CAACU,MAAP,CAAcuB,MAAd,GAAuB,EAAvB,GAA4B,EAA5B,GAAiCjC,MAAM,CAACU,MAAP,CAAcuB,MAAd,GAAuB,CAArF,GAA0F,CAHxG;AAII,4BAAA,MAAM,EAAE,EAJZ;AAKI,4BAAA,IAAI,EAAC,kBALT;AAMI,4BAAA,CAAC,EAAE,GANP;AAAA,mDAOC,QAAC,IAAD;AAAM,8BAAA,CAAC,EAAE,CAAT;AAAY,8BAAA,CAAC,EAAE,EAAf;AAAmB,8BAAA,IAAI,EAAC,UAAxB;AAAmC,8BAAA,OAAO,EAAC,OAA3C;AAAmD,8BAAA,MAAM,EAAC,MAA1D;AAAiE,8BAAA,IAAI,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA;AAPD;AAAA;AAAA;AAAA;AAAA,kCAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AA9BZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAvEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAPJ,EAoJQ,CAACvC,aAAD,iBACA;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,qCACI;AAAK,gBAAA,GAAG,EAAE3B;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBArJR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBApDJ,eAgNI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,SAAS,EAAC,iCAA7B;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,KAAK,EAAC,EADV;AAEI,YAAA,UAAU,MAFd;AAGI,YAAA,aAAa,EAAE,EAHnB;AAII,YAAA,SAAS,EAAE,EAJf;AAKI,YAAA,iBAAiB,EAAE,IALvB;AAAA,oCAOI,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,SAAhB;AAAA,sCACI,QAAC,OAAD;AAAA,wCACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAOI,QAAC,QAAD;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,uBAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACI;AAAK,sBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAK,sBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI;AAAK,sBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,eAII;AAAK,sBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ,eAKI;AAAK,sBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,eAMI;AAAK,sBAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAUQyB,kBAAkB,IAAIA,kBAAkB,CAAC6E,UAAzC,IAAuD7E,kBAAkB,CAAC6E,UAAnB,CAA8BpC,MAA9B,GAAuC,CAA9F,IACAzC,kBAAkB,CAAC6E,UAAnB,CAA8BlE,GAA9B,CAAkC,CAACmE,UAAD,EAAaC,KAAb,KAAuB;AACrD,wCACI;AAAiB,sBAAA,SAAS,EAAC,YAA3B;AAAA,8CACI;AAAK,wBAAA,SAAS,EAAC,YAAf;AAAA,kCAA6BA,KAAK,GAAG;AAArC;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAK,wBAAA,SAAS,EAAC,YAAf;AAAA,kCAEQD,UAAU,CAACE,OAAX,IAAsBF,UAAU,CAACE,OAAX,CAAmBC,MAAzC,IAAmDH,UAAU,CAACE,OAAX,CAAmBC,MAAnB,CAA0B,YAA1B,CAAnD,IAA8FH,UAAU,CAACE,OAAX,CAAmBC,MAAnB,CAA0B,YAA1B,EAAwC,CAAxC,CAA9F,IACA/G,MAAM,CAAC4G,UAAU,CAACE,OAAX,CAAmBC,MAAnB,CAA0B,YAA1B,EAAwC,CAAxC,CAAD,CAAN,CAAmDjE,MAAnD,CAA0D,qBAA1D;AAHR;AAAA;AAAA;AAAA;AAAA,8BAFJ,eAQI;AAAK,wBAAA,SAAS,EAAC,YAAf;AAAA,kCAEQ8D,UAAU,CAACE,OAAX,IAAsBF,UAAU,CAACE,OAAX,CAAmBC,MAAzC,IAAmDH,UAAU,CAACE,OAAX,CAAmBC,MAAnB,CAA0B,QAA1B,CAAnD,IACAH,UAAU,CAACE,OAAX,CAAmBC,MAAnB,CAA0B,QAA1B,EAAoC,CAApC;AAHR;AAAA;AAAA;AAAA;AAAA,8BARJ,eAcI;AAAK,wBAAA,SAAS,EAAC,YAAf;AAAA,kCAEQH,UAAU,CAACE,OAAX,IAAsBF,UAAU,CAACE,OAAX,CAAmBC,MAAzC,IAAmDH,UAAU,CAACE,OAAX,CAAmBC,MAAnB,CAA0B,QAA1B,CAAnD,IACAH,UAAU,CAACE,OAAX,CAAmBC,MAAnB,CAA0B,QAA1B,EAAoC,CAApC;AAHR;AAAA;AAAA;AAAA;AAAA,8BAdJ,eAoBI;AAAK,wBAAA,SAAS,EAAC,YAAf;AAAA,kCAEQH,UAAU,CAACE,OAAX,IAAsBF,UAAU,CAACE,OAAX,CAAmBC,MAAzC,IAAmDH,UAAU,CAACE,OAAX,CAAmBC,MAAnB,CAA0B,kBAA1B,CAAnD,IACAH,UAAU,CAACE,OAAX,CAAmBC,MAAnB,CAA0B,kBAA1B,EAA8C,CAA9C;AAHR;AAAA;AAAA;AAAA;AAAA,8BApBJ,eA0BI;AAAK,wBAAA,SAAS,EAAC,YAAf;AAAA,kCAEQH,UAAU,CAACE,OAAX,IAAsBF,UAAU,CAACE,OAAX,CAAmBC,MAAzC,IAAmDH,UAAU,CAACE,OAAX,CAAmBC,MAAnB,CAA0B,cAA1B,CAAnD,IACAH,UAAU,CAACE,OAAX,CAAmBC,MAAnB,CAA0B,cAA1B,EAA0C,CAA1C;AAHR;AAAA;AAAA;AAAA;AAAA,8BA1BJ;AAAA,uBAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,4BADJ;AAmCH,mBApCD,CAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAPJ,eA4DI,QAAC,QAAD;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,oBAAf;AAAA,4BAEQ/E,kBAAkB,IAAIA,kBAAkB,CAACkF,OAAzC,IAAoDlF,kBAAkB,CAACkF,OAAnB,CAA2BzC,MAA3B,GAAoC,CAAxF,IACAzC,kBAAkB,CAACkF,OAAnB,CAA2BvE,GAA3B,CAA+B,CAACwE,OAAD,EAAUJ,KAAV,KAAoB;AAC/C,wCACI;AAAA,gCAAmBI;AAAnB,uBAAWJ,KAAX;AAAA;AAAA;AAAA;AAAA,4BADJ;AAGH,mBAJD;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBA5DJ,eAwEI,QAAC,QAAD;AAAA,uCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAxEJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,EAoFQ,CAAC7E,aAAD,iBACA;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,qCACI;AAAK,gBAAA,GAAG,EAAE3B;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBArFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAhNJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eA+SI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEmD,cAAd;AAA8B,QAAA,EAAE,EAAC,kBAAjC;AAAA,gCACI,QAAC,WAAD;AAAA,sDAEI,QAAC,KAAD,CAAO,KAAP;AAAa,YAAA,QAAQ,EAAE,OAAvB;AAAgC,YAAA,SAAS,EAAC,eAA1C;AAA0D,YAAA,OAAO,EAAE,KAAKF;AAAxE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,aAAD;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,cAAhB;AAA+B,YAAA,SAAS,MAAxC;AAAyC,YAAA,OAAO,EAAE,CAAlD;AAAA,uBAEQI,aAAa,IAAIA,aAAa,KAAK,EAAnC,iBACA;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,wBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAHR,eAKI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,SAAS,EAAC,UAA7B;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,2BAEQD,MAAM,IAAIA,MAAM,CAACc,MAAP,GAAgB,CAA1B,iBACA;AAAK,kBAAA,SAAS,EAAC,gBAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHR,EAWQ,CAACD,iBAAD,iBACA;AAAA,4BAEQb,MAAM,IAAIA,MAAM,CAACc,MAAP,GAAgB,CAA1B,GACId,MAAM,CAAChB,GAAP,CAAW,CAACyE,MAAD,EAASL,KAAT,KAAmB;AAC1B,wCACI;AAAiB,sBAAA,SAAS,EAAC,gBAA3B;AAA4C,sBAAA,OAAO,EAAE,MAAM;AAAE,6BAAK1C,oBAAL,CAA0B+C,MAAM,CAAC,SAAD,CAAhC;AAA8C,uBAA3G;AAAA,8CACI;AAAK,wBAAA,SAAS,EAAC,UAAf;AAAA,+CACI,QAAC,OAAD;AACI,0BAAA,OAAO,EAAEvD,uBAAuB,KAAKuD,MAAM,CAAC,SAAD,CAD/C;AAEI,0BAAA,QAAQ,EAAE,MAAM;AAAE,iCAAK/C,oBAAL,CAA0B+C,MAAM,CAAC,SAAD,CAAhC;AAA8C,2BAFpE;AAGI,0BAAA,KAAK,EAAEA,MAAM,CAAC,SAAD,CAHjB;AAII,0BAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BADJ,eASI;AAAK,wBAAA,SAAS,EAAC,UAAf;AAAA,kCAA2BA,MAAM,CAAC,SAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,8BATJ,eAUI;AAAK,wBAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAVJ;AAAA,uBAAUL,KAAV;AAAA;AAAA;AAAA;AAAA,4BADJ;AAcH,mBAfD,CADJ,gBAgBS;AAAM,oBAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBjB,iCAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ,eAoDI,QAAC,aAAD;AAAA,oBAEQvC,iBAAiB,gBACb;AAAK,YAAA,GAAG,EAAEjE,WAAV;AAAuB,YAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADa,gBAET;AAAA,sBAEQoD,MAAM,IAAIA,MAAM,CAACc,MAAP,GAAgB,CAA1B,iBACA,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,KAAKC,cAAtB;AAAsC,cAAA,KAAK,EAAC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR;AAJhB;AAAA;AAAA;AAAA;AAAA,gBApDJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA/SJ,eAoXI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEV,gBAAd;AAAgC,QAAA,EAAE,EAAC,aAAnC;AAAA,gCACI,QAAC,WAAD;AAAA,yDAEI,QAAC,KAAD,CAAO,KAAP;AAAa,YAAA,QAAQ,EAAE,OAAvB;AAAgC,YAAA,SAAS,EAAC,eAA1C;AAA0D,YAAA,OAAO,EAAE,KAAKD;AAAxE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,aAAD;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,cAAhB;AAA+B,YAAA,SAAS,MAAxC;AAAyC,YAAA,OAAO,EAAE,CAAlD;AAAA,uBAEQG,eAAe,IAAIA,eAAe,KAAK,EAAvC,iBACA;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,wBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAHR,eAKI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,SAAS,EAAC,UAA7B;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,2BAEQD,UAAU,IAAIA,UAAU,CAACQ,MAAX,GAAoB,CAAlC,iBACA;AAAK,kBAAA,SAAS,EAAC,gBAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHR,EAUQ,CAACD,iBAAD,iBACA;AAAA,4BAEQP,UAAU,IAAIA,UAAU,CAACQ,MAAX,GAAoB,CAAlC,GACIR,UAAU,CAACtB,GAAX,CAAe,CAACyE,MAAD,EAASL,KAAT,KAAmB;AAC9B,wCACI;AAAiB,sBAAA,SAAS,EAAC,gBAA3B;AAA4C,sBAAA,OAAO,EAAE,MAAM;AAAE,6BAAKzC,sBAAL,CAA4B8C,MAAM,CAAC,KAAD,CAAlC;AAA4C,uBAAzG;AAAA,8CACI;AAAK,wBAAA,SAAS,EAAC,UAAf;AAAA,+CACI,QAAC,OAAD;AACI,0BAAA,OAAO,EAAEjD,yBAAyB,KAAKiD,MAAM,CAAC,KAAD,CADjD;AAEI,0BAAA,QAAQ,EAAE,MAAM;AAAE,iCAAK9C,sBAAL,CAA4B8C,MAAM,CAAC,KAAD,CAAlC;AAA4C,2BAFlE;AAGI,0BAAA,KAAK,EAAEA,MAAM,CAAC,KAAD,CAHjB;AAII,0BAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BADJ,eASI;AAAK,wBAAA,SAAS,EAAC,UAAf;AAAA,kCAA2BA,MAAM,CAAC,MAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,8BATJ,eAUI;AAAK,wBAAA,SAAS,EAAC,UAAf;AAAA,kCAA2BA,MAAM,CAAC,QAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,8BAVJ;AAAA,uBAAUL,KAAV;AAAA;AAAA;AAAA;AAAA,4BADJ;AAcH,mBAfD,CADJ,gBAgBS;AAAM,oBAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBjB,iCAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBALJ,eAiDI,QAAC,aAAD;AAAA,oBAEQvC,iBAAiB,gBACb;AAAK,YAAA,GAAG,EAAEjE,WAAV;AAAuB,YAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADa,gBAEb;AAAA,sBAEQ0D,UAAU,IAAIA,UAAU,CAACQ,MAAX,GAAoB,CAAlC,iBACA,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,KAAKa,gBAAtB;AAAwC,cAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAjDJ;AAAA;AAAA;AAAA;AAAA;AAAA,cApXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwbH;;AAluByC;;AAquB9C,MAAM+B,eAAe,GAAG5D,KAAK,KAAK;AAC9B6D,EAAAA,MAAM,EAAE7D,KAAK,CAAC6D;AADgB,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK,EAAL,CAAnC;;AAIA,eAAe3I,OAAO,CAACwI,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxG,qBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport './monitorNetworkElement.scss';\n\nimport {\n    Grid,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Radio,\n    withStyles\n} from \"@material-ui/core\";\n\nimport * as Icons from \"@material-ui/icons\";\n\nimport {\n    ResponsiveContainer,\n    LineChart,\n    Line,\n    YAxis,\n    XAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Brush,\n    Area\n} from \"recharts\";\nimport moment from 'moment';\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nimport loadingIcon from '../../images/home/loading.gif';\n\nimport Widget from \"../../components/Widget\";\n\nimport apiService from '../../services/apiService.js';\n\n\nconst MyRadio = withStyles({\n    root: {\n        color: '#1F3BB3',\n        '&$checked': {\n            color: '#1F3BB3',\n        },\n    },\n    checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nclass MonitorNetworkElement extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lineData: [\n                { name: 'July 1', uv: 4000 },\n                { name: 'July 2', uv: 3000 },\n                { name: 'July 3', uv: 2000 },\n                { name: 'July 4', uv: 1000 },\n                { name: 'July 5', uv: 1890 }\n            ],\n            chart1: {}, chart2: {}, chart3: {}\n            , networkElementInfo: {},\n            handoverStatus: false, pathSwitchStatus: false, handOverError: '', ueList: [],\n            selectedHandoverElement: null, selectedPathSwitchElement: null, pathSwitchError: '', pathSwitch: [],\n            callUnderProgress: false,\n            firstCallDone: false\n        }\n\n        this.ueListToken = null;\n        this.prepareHandoverToken = null;\n        this.pathSwitchToken = null;\n        this.submitPathSwitchToken = null;\n\n    }\n\n    componentDidMount() {\n\n        this.getElementDetails();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.match.params.id !== this.props.match.params.id) {\n            this.getElementDetails();\n        }\n    }\n\n    getElementDetails = () => {\n\n        var thisView = this;\n        if (this.monitorHomeToken)\n            this.monitorHomeToken.cancel();\n        this.monitorHomeToken = axios.CancelToken.source();\n\n        axios.all([apiService.getElementDetails(this.monitorHomeToken.token, this.props.match.params.id)])\n            .then(function (res) {\n                if (res[0]) {\n                    let networkInfo = res[0][\"data\"] ? res[0][\"data\"] : {};\n                    thisView.setState({ networkElementInfo: networkInfo });\n                    thisView.processChartData(networkInfo);\n                    thisView.setState({ firstCallDone: true });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor element service');\n\n            });\n\n    }\n\n    processChartData = (networkInfo) => {\n\n        let chart1 = {}, chart2 = {}, chart3 = {};\n        if (networkInfo && networkInfo.NF_stats) {\n            if (networkInfo.NF_stats.chart1)\n                chart1 = networkInfo.NF_stats.chart1;\n            if (networkInfo.NF_stats.chart2)\n                chart2 = networkInfo.NF_stats.chart2;\n            if (networkInfo.NF_stats.chart3)\n                chart3 = networkInfo.NF_stats.chart3;\n        }\n\n        if (chart1.data) {\n            chart1.data = chart1.data.map((eachPoint) => {\n\n                return {\n                    name: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n                    value: eachPoint[Object.keys(eachPoint)[0]]\n                };\n            });\n            this.setState({ chart1 });\n        }\n\n        if (chart2.data) {\n            chart2.data = chart2.data.map((eachPoint) => {\n\n                return {\n                    name: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n                    value: eachPoint[Object.keys(eachPoint)[0]]\n                };\n            });\n            this.setState({ chart2 });\n        }\n\n        if (chart3.data) {\n            chart3.dataTx = [];\n            chart3.dataRx = [];\n            chart3.data.map((eachPoint) => {\n\n                if (Array.isArray(eachPoint[Object.keys(eachPoint)[0]])) {\n                    chart3.dataTx.push({\n                        category: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n                        value: eachPoint[Object.keys(eachPoint)[0]][0]\n                    });\n\n                    chart3.dataRx.push({\n                        category: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n                        value: eachPoint[Object.keys(eachPoint)[0]][1]\n                    });\n                } else {\n                    chart3.dataTx.push({\n                        name: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n                        value: eachPoint[Object.keys(eachPoint)[0]]\n                    });\n                    chart3.dataRx = null;\n                }\n\n\n            });\n            this.setState({ chart3 });\n            console.log(chart3);\n        }\n\n    }\n\n    toggleHandOver = () => {\n        if (!this.state.handoverStatus) {\n            this.setState({ ueList: [], handOverError: '', selectedHandoverElement: null });\n            this.getUEList();\n        }\n\n        this.setState({ handoverStatus: !this.state.handoverStatus });\n    }\n\n    togglePathSwitch = () => {\n        if (!this.state.pathSwitchStatus) {\n            this.setState({ pathSwitch: [], pathSwitchError: '', selectedPathSwitchElement: null });\n            this.getPathSwitch();\n        }\n\n        this.setState({ pathSwitchStatus: !this.state.pathSwitchStatus });\n    }\n\n    handleHandoverChange = (value) => {\n        this.setState({ selectedHandoverElement: value });\n    }\n\n    handlePathSwitchChange = (value) => {\n        this.setState({ selectedPathSwitchElement: value });\n    }\n\n    getUEList = () => {\n\n        var thisView = this;\n        if (this.ueListToken)\n            this.ueListToken.cancel();\n        this.ueListToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getUEList(this.ueListToken.token, this.props.match.params.id)])\n            .then(function (res) {\n                if (res[0]) {\n\n\n                    let ueList = (res[0][\"data\"] && res[0][\"data\"][\"UElist\"]) ? res[0][\"data\"][\"UElist\"] : [];\n                    if (ueList && ueList.length > 0 && !ueList[0][\"- ue-id\"]) {\n                        ueList = [];\n                    }\n\n                    thisView.setState({ ueList: ueList });\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n    submitHandOver = () => {\n\n\n        if (!this.state.selectedHandoverElement) {\n            this.setState({ handOverError: 'Please Select UE' });\n            return;\n        } else {\n            this.setState({ handOverError: '' });\n        }\n\n        var thisView = this;\n        if (this.prepareHandoverToken)\n            this.prepareHandoverToken.cancel();\n        this.prepareHandoverToken = axios.CancelToken.source();\n\n        let data = {\n            containerId: this.props.match.params.id,\n            ueId: this.state.selectedHandoverElement.trim()\n        }\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.prepareHandOver(this.prepareHandoverToken.token, data)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ callUnderProgress: false });\n                    thisView.toggleHandOver();\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n    getPathSwitch = () => {\n\n        var thisView = this;\n        if (this.pathSwitchToken)\n            this.pathSwitchToken.cancel();\n        this.pathSwitchToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getPathSwitchList(this.pathSwitchToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n\n                    let pathSwitchData = (res[0][\"data\"] && res[0][\"data\"]) ? res[0][\"data\"] : [];\n\n                    pathSwitchData = pathSwitchData.map((eachSwitch) => {\n                        let temp = {};\n                        eachSwitch.map((eachField) => {\n                            if (Object.keys(eachField)[0] === \"handover_key\") {\n                                temp[\"key\"] = eachField[\"handover_key\"];\n                            } else if (Object.keys(eachField)[0] === \"ueid\") {\n                                temp[\"ueid\"] = eachField[\"ueid\"];\n                            } else if (Object.keys(eachField)[0] === \"source_gnb\") {\n                                temp[\"source\"] = eachField[\"source_gnb\"];\n                            }\n                        })\n                        return temp;\n                    })\n\n\n                    thisView.setState({ pathSwitch: pathSwitchData });\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n    submitPathSwitch = () => {\n\n\n        if (!this.state.selectedPathSwitchElement) {\n            this.setState({ pathSwitchError: 'Please Select' });\n            return;\n        }\n\n        var thisView = this;\n        if (this.submitPathSwitchToken)\n            this.submitPathSwitchToken.cancel();\n        this.submitPathSwitchToken = axios.CancelToken.source();\n\n        let data = {\n            containerId: this.props.match.params.id,\n            id: this.state.selectedPathSwitchElement\n        }\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.submitPathSwitch(this.submitPathSwitchToken.token, data)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ callUnderProgress: false });\n                    thisView.togglePathSwitch();\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n\n    render() {\n\n        const { lineData, networkElementInfo, handoverStatus, selectedHandoverElement,\n            pathSwitchStatus, selectedPathSwitchElement, callUnderProgress,\n            ueList, handOverError, pathSwitch, pathSwitchError,\n            chart1, chart2, chart3, firstCallDone } = this.state;\n\n        return (\n            <div className=\"five-g-monitor\">\n                <Grid container spacing={4}>\n                    <Grid item lg={4} md={6} xs={12} className=\"fgm-inner-grid individual-grid-five-g\">\n                        <Widget\n                            title={networkElementInfo.name_of_nf ? networkElementInfo.name_of_nf.toUpperCase() : \"-\"}\n                            upperTitle\n                            bodyclassName={''}\n                            className={'test'}\n                            disableWidgetMenu={true}\n                        >\n                            <div className=\"fgm-details-container\">\n                                <div className=\"fgmdc-stats\">\n                                    <div className=\"fgmds-each\">\n                                        <span>State</span>\n                                        <span>{networkElementInfo.State ? networkElementInfo.State : '-'}</span>\n                                    </div>\n                                    <div className=\"fgmds-each\">\n                                        <span>Health</span>\n                                        <span>{networkElementInfo.Health ? networkElementInfo.Health : '-'}</span>\n                                    </div>\n                                    <div className=\"fgmds-each\">\n                                        <span>DNN</span>\n                                        <span>{networkElementInfo.DNN ? networkElementInfo.DNN : '-'}</span>\n                                    </div>\n                                </div>\n                                <div className=\"fgmdc-sensor-active\">\n                                    <span>IP address:</span>\n                                    <span>{networkElementInfo.hasOwnProperty(\"Management_IP\") ? networkElementInfo.Management_IP : '-'}</span>\n                                </div>\n\n                                <div className=\"fgmdc-served\">\n                                    <span>Number of UEs served:</span>\n                                    <span>{networkElementInfo.hasOwnProperty(\"no_UEsserved\") ? networkElementInfo.no_UEsserved : '-'}</span>\n                                </div>\n                                <div className=\"fgmdc-handover-container\">\n                                    {\n                                        networkElementInfo[\"Handover-prepare_button\"] === \"True\" &&\n                                        <span onClick={this.toggleHandOver}>Handover Prepare</span>\n                                    }\n                                    {\n                                        networkElementInfo.Path_sw_req_button === \"True\" &&\n                                        <span onClick={this.togglePathSwitch}>Path Switch Request</span>\n                                    }\n                                </div>\n                            </div>\n                            {\n                                !firstCallDone &&\n                                <div className=\"each-widget-loading\">\n                                    <img src={loadingIcon} />\n                                </div>\n                            }\n                        </Widget>\n                    </Grid>\n                    <Grid item lg={8} md={6} xs={12} className=\"fgd-form individual-grid-five-g\">\n                        <Widget\n                            title=\"Statistics\"\n                            upperTitle\n                            bodyclassName={''}\n                            className={''}\n                            disableWidgetMenu={true}\n                        >\n                            <div className=\"fgm-stats-container\">\n                                <Grid container spacing={4}>\n                                    <Grid item md={4} xs={12} className=\"fgd-form\">\n                                        <div className=\"fgmsc-main\">\n                                            <span>{chart1 ? chart1.title : ''}</span>\n                                            <div className=\"fgscm-chart\">\n                                                <ResponsiveContainer width=\"100%\" height={250}>\n                                                    <LineChart\n                                                        width={500}\n                                                        height={250}\n                                                        data={(chart1 && chart1.data) ? chart1.data : []}\n                                                        margin={{\n                                                            top: 10,\n                                                            right: 30,\n                                                            left: 0,\n                                                            bottom: 40,\n                                                        }}\n                                                    >\n                                                        <CartesianGrid strokeDasharray=\"3 3\" />\n                                                        <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" interval={2} />\n                                                        <YAxis />\n                                                        <Tooltip />\n                                                        <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                                        <Brush\n                                                            stroke=\"#8784d8\"\n                                                            startIndex={0}\n                                                            endIndex={(chart1 && chart1.data) ? (chart1.data.length > 20 ? 19 : chart1.data.length - 1) : 0}\n                                                            height={20}\n                                                            fill='rgba(0, 0, 0, 0)'\n                                                            y={220}\n                                                        ><Area x={0} y={30} type=\"monotone\" dataKey=\"value\" stroke=\"#000\" fill=\"url(#splitColor)\" />\n                                                        </Brush>\n                                                    </LineChart>\n                                                </ResponsiveContainer>\n                                            </div>\n                                        </div>\n                                    </Grid>\n                                    <Grid item md={4} xs={12} className=\"fgd-form\">\n                                        <div className=\"fgmsc-main\">\n                                            <span>{chart2 ? chart2.title : ''}</span>\n                                            <div className=\"fgscm-chart\">\n                                                <ResponsiveContainer width=\"100%\" height={250}>\n                                                    <LineChart\n                                                        width={500}\n                                                        height={250}\n                                                        data={(chart2 && chart2.data) ? chart2.data : []}\n                                                        margin={{\n                                                            top: 10,\n                                                            right: 30,\n                                                            left: 0,\n                                                            bottom: 40,\n                                                        }}\n                                                    >\n                                                        <CartesianGrid strokeDasharray=\"3 3\" />\n                                                        <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" interval={2} />\n                                                        <YAxis />\n                                                        <Tooltip />\n                                                        <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                                        <Brush\n                                                            stroke=\"#8784d8\"\n                                                            startIndex={0}\n                                                            endIndex={(chart1 && chart1.data) ? (chart1.data.length > 20 ? 19 : chart1.data.length - 1) : 0}\n                                                            height={20}\n                                                            fill='rgba(0, 0, 0, 0)'\n                                                            y={220}\n                                                        ><Area type=\"monotone\" dataKey=\"value\" stroke=\"#000\" fill=\"url(#splitColor)\" />\n                                                        </Brush>\n                                                    </LineChart>\n                                                </ResponsiveContainer>\n                                            </div>\n                                        </div>\n                                    </Grid>\n                                    <Grid item md={4} xs={12} className=\"fgd-form\">\n                                        <div className=\"fgmsc-main\">\n                                            <span>{chart3 ? chart3.title : ''}</span>\n                                            <div className=\"fgscm-chart\">\n                                                <ResponsiveContainer width=\"100%\" height={250}>\n                                                    {\n                                                        (chart3 && chart3.dataRx) ?\n\n                                                            <LineChart\n                                                                width={500}\n                                                                height={250}\n                                                                margin={{\n                                                                    top: 10,\n                                                                    right: 30,\n                                                                    left: 0,\n                                                                    bottom: 40,\n                                                                }}\n                                                            >\n                                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                                <XAxis dataKey=\"category\" type=\"category\" allowDuplicatedCategory={false} angle={-45} textAnchor=\"end\" />\n                                                                <YAxis dataKey=\"value\" />\n                                                                <Tooltip />\n                                                                <Line dataKey=\"value\" data={(chart3 && chart3.dataTx) ? chart3.dataTx : []} name={\"TX\"} stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                                                <Line dataKey=\"value\" data={(chart3 && chart3.dataRx) ? chart3.dataRx : []} name={\"RX\"} stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                                                <Brush\n                                                                    stroke=\"green\"\n                                                                    startIndex={0}\n                                                                    endIndex={20}\n                                                                    height={20}\n                                                                    fill='rgba(0, 0, 0, 0)'\n                                                                    y={220}\n                                                                ><Area data={(chart3 && chart3.dataTx) ? chart3.dataTx : []} stroke=\"#000\" fill=\"url(#splitColor)\" />\n                                                                </Brush>\n                                                            </LineChart> :\n                                                            <LineChart\n                                                                width={500}\n                                                                height={250}\n                                                                data={(chart3 && chart3.dataTx) ? chart3.dataTx : []}\n                                                                margin={{\n                                                                    top: 10,\n                                                                    right: 30,\n                                                                    left: 0,\n                                                                    bottom: 40,\n                                                                }}\n                                                            >\n                                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                                <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" interval={2} />\n                                                                <YAxis />\n                                                                <Tooltip />\n                                                                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                                                <Brush\n                                                                    stroke=\"#8784d8\"\n                                                                    startIndex={0}\n                                                                    endIndex={(chart3 && chart3.dataTx) ? (chart3.dataTx.length > 20 ? 19 : chart3.dataTx.length - 1) : 0}\n                                                                    height={20}\n                                                                    fill='rgba(0, 0, 0, 0)'\n                                                                    y={220}\n                                                                ><Area x={0} y={30} type=\"monotone\" dataKey=\"value\" stroke=\"#000\" fill=\"url(#splitColor)\" />\n                                                                </Brush>\n                                                            </LineChart>\n                                                    }\n\n                                                </ResponsiveContainer>\n                                            </div>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                            {\n                                !firstCallDone &&\n                                <div className=\"each-widget-loading\">\n                                    <img src={loadingIcon} />\n                                </div>\n                            }\n                        </Widget>\n                    </Grid>\n                    <Grid item xs={12} className=\"fgd-form individual-grid-five-g\">\n                        <Widget\n                            title=\"\"\n                            upperTitle\n                            bodyclassName={''}\n                            className={''}\n                            disableWidgetMenu={true}\n                        >\n                            <Tabs className=\"ne-tabs\">\n                                <TabList>\n                                    <Tab>Packets</Tab>\n                                    <Tab>Logs</Tab>\n                                    <Tab>Console</Tab>\n                                </TabList>\n\n                                <TabPanel>\n                                    <div className=\"fdg-packets-container\">\n                                        <div className=\"fdgpc-head\">\n                                            <div className=\"fdgpce-row\">Number</div>\n                                            <div className=\"fdgpce-row\">Time</div>\n                                            <div className=\"fdgpce-row\">Source</div>\n                                            <div className=\"fdgpce-row\">Destination</div>\n                                            <div className=\"fdgpce-row\">Protocol</div>\n                                            <div className=\"fdgpce-row\">Details</div>\n                                        </div>\n                                        {\n                                            networkElementInfo && networkElementInfo.NF_packets && networkElementInfo.NF_packets.length > 0 &&\n                                            networkElementInfo.NF_packets.map((eachPacket, index) => {\n                                                return (\n                                                    <div key={index} className=\"fdgpc-each\">\n                                                        <div className=\"fdgpce-row\">{index + 1}</div>\n                                                        <div className=\"fdgpce-row\">\n                                                            {\n                                                                eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"frame.time\"] && eachPacket._source.layers[\"frame.time\"][0] &&\n                                                                moment(eachPacket._source.layers[\"frame.time\"][0]).format('MM-DD-YYYY hh:mm:ss')\n                                                            }\n                                                        </div>\n                                                        <div className=\"fdgpce-row\">\n                                                            {\n                                                                eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"ip.src\"] &&\n                                                                eachPacket._source.layers[\"ip.src\"][0]\n                                                            }\n                                                        </div>\n                                                        <div className=\"fdgpce-row\">\n                                                            {\n                                                                eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"ip.src\"] &&\n                                                                eachPacket._source.layers[\"ip.dst\"][0]\n                                                            }\n                                                        </div>\n                                                        <div className=\"fdgpce-row\">\n                                                            {\n                                                                eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"_ws.col.Protocol\"] &&\n                                                                eachPacket._source.layers[\"_ws.col.Protocol\"][0]\n                                                            }\n                                                        </div>\n                                                        <div className=\"fdgpce-row\">\n                                                            {\n                                                                eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"_ws.col.Info\"] &&\n                                                                eachPacket._source.layers[\"_ws.col.Info\"][0]\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                )\n                                            })\n                                        }\n\n                                    </div>\n                                </TabPanel>\n                                <TabPanel>\n                                    <div className=\"fdg-logs-container\">\n                                        {\n                                            networkElementInfo && networkElementInfo.NF_Logs && networkElementInfo.NF_Logs.length > 0 &&\n                                            networkElementInfo.NF_Logs.map((eachLog, index) => {\n                                                return (\n                                                    <span key={index}>{eachLog}</span>\n                                                )\n                                            })\n                                        }\n                                    </div>\n                                </TabPanel>\n                                <TabPanel>\n                                    <h2> Terminal </h2>\n                                </TabPanel>\n                            </Tabs>\n                            {\n                                !firstCallDone &&\n                                <div className=\"each-widget-loading\">\n                                    <img src={loadingIcon} />\n                                </div>\n                            }\n                        </Widget>\n                    </Grid>\n                </Grid>\n\n                <Dialog open={handoverStatus} id=\"handover-prepare\">\n                    <DialogTitle>\n                        Handover Prepare\n                        <Icons.Close fontSize={\"small\"} className=\"hp-close-icon\" onClick={this.toggleHandOver} />\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid className=\"hp-container\" container spacing={2}>\n                            {\n                                handOverError && handOverError !== '' &&\n                                <span className=\"hpc-error\">{handOverError}</span>\n                            }\n                            <Grid item xs={12} className=\"fgd-form\">\n                                <div className=\"hpc-content\">\n                                    {\n                                        ueList && ueList.length > 0 &&\n                                        <div className=\"hpc-table-each\">\n                                            <div className=\"hpct-row\"></div>\n                                            <div className=\"hpct-row\">UEID</div>\n                                            <div className=\"hpct-row\">Status</div>\n                                        </div>\n                                    }\n\n                                    {\n                                        !callUnderProgress &&\n                                        <>\n                                            {\n                                                ueList && ueList.length > 0 ?\n                                                    ueList.map((eachUe, index) => {\n                                                        return (\n                                                            <div key={index} className=\"hpc-table-each\" onClick={() => { this.handleHandoverChange(eachUe[\"- ue-id\"]) }}>\n                                                                <div className=\"hpct-row\">\n                                                                    <MyRadio\n                                                                        checked={selectedHandoverElement === eachUe[\"- ue-id\"]}\n                                                                        onChange={() => { this.handleHandoverChange(eachUe[\"- ue-id\"]) }}\n                                                                        value={eachUe[\"- ue-id\"]}\n                                                                        name=\"radio-button-demo\"\n                                                                    />\n                                                                </div>\n                                                                <div className=\"hpct-row\">{eachUe[\"- ue-id\"]}</div>\n                                                                <div className=\"hpct-row\">Connected</div>\n                                                            </div>\n                                                        )\n                                                    }) : <span className=\"no_ue\">No UE to handover</span>\n                                            }\n                                        </>\n                                    }\n\n\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <DialogActions>\n                        {\n                            callUnderProgress ?\n                                <img src={loadingIcon} className=\"call_under_progress_icon\" /> : (\n                                    <>\n                                        {\n                                            ueList && ueList.length > 0 &&\n                                            <Button onClick={this.submitHandOver} color=\"primary\">\n                                                Submit\n                                            </Button>\n                                        }\n                                    </>\n                                )\n                        }\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog open={pathSwitchStatus} id=\"path-switch\">\n                    <DialogTitle>\n                        Path Switch Request\n                        <Icons.Close fontSize={\"small\"} className=\"hp-close-icon\" onClick={this.togglePathSwitch} />\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid className=\"hp-container\" container spacing={2}>\n                            {\n                                pathSwitchError && pathSwitchError !== '' &&\n                                <span className=\"hpc-error\">{pathSwitchError}</span>\n                            }\n                            <Grid item xs={12} className=\"fgd-form\">\n                                <div className=\"hpc-content\">\n                                    {\n                                        pathSwitch && pathSwitch.length > 0 &&\n                                        <div className=\"hpc-table-each\">\n                                            <div className=\"hpct-row\"></div>\n                                            <div className=\"hpct-row\">UEID</div>\n                                            <div className=\"hpct-row\">Source gNB ID</div>\n                                        </div>\n                                    }\n                                    {\n                                        !callUnderProgress &&\n                                        <>\n                                            {\n                                                pathSwitch && pathSwitch.length > 0 ?\n                                                    pathSwitch.map((eachUe, index) => {\n                                                        return (\n                                                            <div key={index} className=\"hpc-table-each\" onClick={() => { this.handlePathSwitchChange(eachUe[\"key\"]) }}>\n                                                                <div className=\"hpct-row\">\n                                                                    <MyRadio\n                                                                        checked={selectedPathSwitchElement === eachUe[\"key\"]}\n                                                                        onChange={() => { this.handlePathSwitchChange(eachUe[\"key\"]) }}\n                                                                        value={eachUe[\"key\"]}\n                                                                        name=\"radio-button-demo\"\n                                                                    />\n                                                                </div>\n                                                                <div className=\"hpct-row\">{eachUe[\"ueid\"]}</div>\n                                                                <div className=\"hpct-row\">{eachUe[\"source\"]}</div>\n                                                            </div>\n                                                        )\n                                                    }) : <span className=\"no_ue\">No UE to switch</span>\n                                            }\n                                        </>\n                                    }\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <DialogActions>\n                        {\n                            callUnderProgress ?\n                                <img src={loadingIcon} className=\"call_under_progress_icon\" /> :\n                                <>\n                                    {\n                                        pathSwitch && pathSwitch.length > 0 &&\n                                        <Button onClick={this.submitPathSwitch} color=\"primary\">\n                                            Submit\n                                        </Button>\n                                    }\n                                </>\n\n                        }\n                    </DialogActions>\n                </Dialog>\n            </div >\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    config: state.config\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonitorNetworkElement);"]},"metadata":{},"sourceType":"module"}