{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport shallowEqual from '../utils/shallowEqual';\nexport function isEveryChildChecked(node, nodes, props) {\n  var childrenKey = props.childrenKey;\n  var children = null;\n  if (node[childrenKey]) {\n    children = node[childrenKey].filter(function (child) {\n      return nodes[child.refKey] && !nodes[child.refKey].uncheckable;\n    });\n    if (!children.length) {\n      return nodes[node.refKey].check;\n    }\n    return children.every(function (child) {\n      var _child$childrenKey;\n      if ((_child$childrenKey = child[childrenKey]) === null || _child$childrenKey === void 0 ? void 0 : _child$childrenKey.length) {\n        return isEveryChildChecked(child, nodes, props);\n      }\n      return nodes[child.refKey].check;\n    });\n  }\n  return nodes[node.refKey].check;\n}\nexport function isSomeChildChecked(node, nodes, props) {\n  var childrenKey = props.childrenKey;\n  if (!node[childrenKey]) {\n    return false;\n  }\n  return node[childrenKey].some(function (child) {\n    var _nodes$child$refKey;\n    if ((_nodes$child$refKey = nodes[child.refKey]) === null || _nodes$child$refKey === void 0 ? void 0 : _nodes$child$refKey.check) {\n      return true;\n    }\n    return isSomeChildChecked(child, nodes, props);\n  });\n}\n/**\n * 判断第一层节点是否存在有children的节点\n * @param {*} data\n */\n\nexport function isSomeNodeHasChildren(data, childrenKey) {\n  return data.some(function (node) {\n    return node[childrenKey];\n  });\n}\n/**\n * 获取该节点的兄弟节点是否都为 uncheckable\n * @param {*} node\n */\n\nexport function getSiblingNodeUncheckable(node, nodes) {\n  var list = [];\n  var parentNodeRefkey = node.parentNode ? node.parentNode.refKey : '';\n  Object.keys(nodes).forEach(function (refKey) {\n    var _curNode$parentNode;\n    var curNode = nodes[refKey];\n    if (_isUndefined(node.parentNode) && _isUndefined(curNode.parentNode)) {\n      list.push(curNode);\n    } else if (((_curNode$parentNode = curNode.parentNode) === null || _curNode$parentNode === void 0 ? void 0 : _curNode$parentNode.refKey) === parentNodeRefkey) {\n      list.push(curNode);\n    }\n  });\n  return list.every(function (node) {\n    return node.uncheckable;\n  });\n}\n/**\n * 获取第一层节点是否全部都为 uncheckable\n */\n\nexport function getEveryFisrtLevelNodeUncheckable(nodes) {\n  var list = [];\n  Object.keys(nodes).forEach(function (refKey) {\n    var curNode = nodes[refKey];\n    if (!curNode.parentNode) {\n      list.push(curNode);\n    }\n  });\n  return list.every(function (node) {\n    return node.uncheckable;\n  });\n}\n/**\n * 获取节点的是否需要隐藏checkbox\n * @param {*} node\n */\n\nexport function getUncheckableState(node, props) {\n  var _props$uncheckableIte = props.uncheckableItemValues,\n    uncheckableItemValues = _props$uncheckableIte === void 0 ? [] : _props$uncheckableIte,\n    valueKey = props.valueKey;\n  return uncheckableItemValues.some(function (value) {\n    return shallowEqual(node[valueKey], value);\n  });\n}\n/**\n * 获取格式化后的树\n * @param data\n * @param nodes\n * @param props\n */\n\nexport function getFormattedTree(data, nodes, props) {\n  var childrenKey = props.childrenKey;\n  return data.map(function (node) {\n    var formatted = _extends({}, node);\n    var curNode = nodes[node.refKey];\n    if (curNode) {\n      var _node$childrenKey;\n      formatted.check = curNode.check;\n      formatted.expand = curNode.expand;\n      formatted.uncheckable = curNode.uncheckable;\n      formatted.parentNode = curNode.parentNode;\n      if (((_node$childrenKey = node[childrenKey]) === null || _node$childrenKey === void 0 ? void 0 : _node$childrenKey.length) > 0) {\n        formatted[childrenKey] = getFormattedTree(formatted[childrenKey], nodes, props);\n      }\n    }\n    return formatted;\n  });\n}\n/**\n * 获取每个节点的disable状态\n * @param {*} node\n */\n\nexport function getDisabledState(nodes, node, props) {\n  var _props$disabledItemVa = props.disabledItemValues,\n    disabledItemValues = _props$disabledItemVa === void 0 ? [] : _props$disabledItemVa,\n    valueKey = props.valueKey;\n  return disabledItemValues.some(function (value) {\n    return shallowEqual(nodes[node.refKey][valueKey], value);\n  });\n}","map":{"version":3,"names":["_extends","_isUndefined","shallowEqual","isEveryChildChecked","node","nodes","props","childrenKey","children","filter","child","refKey","uncheckable","length","check","every","_child$childrenKey","isSomeChildChecked","some","_nodes$child$refKey","isSomeNodeHasChildren","data","getSiblingNodeUncheckable","list","parentNodeRefkey","parentNode","Object","keys","forEach","_curNode$parentNode","curNode","push","getEveryFisrtLevelNodeUncheckable","getUncheckableState","_props$uncheckableIte","uncheckableItemValues","valueKey","value","getFormattedTree","map","formatted","_node$childrenKey","expand","getDisabledState","_props$disabledItemVa","disabledItemValues"],"sources":["/Users/azminds/Documents/five-g/frontend/node_modules/rsuite/es/CheckTreePicker/utils.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport shallowEqual from '../utils/shallowEqual';\nexport function isEveryChildChecked(node, nodes, props) {\n  var childrenKey = props.childrenKey;\n  var children = null;\n\n  if (node[childrenKey]) {\n    children = node[childrenKey].filter(function (child) {\n      return nodes[child.refKey] && !nodes[child.refKey].uncheckable;\n    });\n\n    if (!children.length) {\n      return nodes[node.refKey].check;\n    }\n\n    return children.every(function (child) {\n      var _child$childrenKey;\n\n      if ((_child$childrenKey = child[childrenKey]) === null || _child$childrenKey === void 0 ? void 0 : _child$childrenKey.length) {\n        return isEveryChildChecked(child, nodes, props);\n      }\n\n      return nodes[child.refKey].check;\n    });\n  }\n\n  return nodes[node.refKey].check;\n}\nexport function isSomeChildChecked(node, nodes, props) {\n  var childrenKey = props.childrenKey;\n\n  if (!node[childrenKey]) {\n    return false;\n  }\n\n  return node[childrenKey].some(function (child) {\n    var _nodes$child$refKey;\n\n    if ((_nodes$child$refKey = nodes[child.refKey]) === null || _nodes$child$refKey === void 0 ? void 0 : _nodes$child$refKey.check) {\n      return true;\n    }\n\n    return isSomeChildChecked(child, nodes, props);\n  });\n}\n/**\n * 判断第一层节点是否存在有children的节点\n * @param {*} data\n */\n\nexport function isSomeNodeHasChildren(data, childrenKey) {\n  return data.some(function (node) {\n    return node[childrenKey];\n  });\n}\n/**\n * 获取该节点的兄弟节点是否都为 uncheckable\n * @param {*} node\n */\n\nexport function getSiblingNodeUncheckable(node, nodes) {\n  var list = [];\n  var parentNodeRefkey = node.parentNode ? node.parentNode.refKey : '';\n  Object.keys(nodes).forEach(function (refKey) {\n    var _curNode$parentNode;\n\n    var curNode = nodes[refKey];\n\n    if (_isUndefined(node.parentNode) && _isUndefined(curNode.parentNode)) {\n      list.push(curNode);\n    } else if (((_curNode$parentNode = curNode.parentNode) === null || _curNode$parentNode === void 0 ? void 0 : _curNode$parentNode.refKey) === parentNodeRefkey) {\n      list.push(curNode);\n    }\n  });\n  return list.every(function (node) {\n    return node.uncheckable;\n  });\n}\n/**\n * 获取第一层节点是否全部都为 uncheckable\n */\n\nexport function getEveryFisrtLevelNodeUncheckable(nodes) {\n  var list = [];\n  Object.keys(nodes).forEach(function (refKey) {\n    var curNode = nodes[refKey];\n\n    if (!curNode.parentNode) {\n      list.push(curNode);\n    }\n  });\n  return list.every(function (node) {\n    return node.uncheckable;\n  });\n}\n/**\n * 获取节点的是否需要隐藏checkbox\n * @param {*} node\n */\n\nexport function getUncheckableState(node, props) {\n  var _props$uncheckableIte = props.uncheckableItemValues,\n      uncheckableItemValues = _props$uncheckableIte === void 0 ? [] : _props$uncheckableIte,\n      valueKey = props.valueKey;\n  return uncheckableItemValues.some(function (value) {\n    return shallowEqual(node[valueKey], value);\n  });\n}\n/**\n * 获取格式化后的树\n * @param data\n * @param nodes\n * @param props\n */\n\nexport function getFormattedTree(data, nodes, props) {\n  var childrenKey = props.childrenKey;\n  return data.map(function (node) {\n    var formatted = _extends({}, node);\n\n    var curNode = nodes[node.refKey];\n\n    if (curNode) {\n      var _node$childrenKey;\n\n      formatted.check = curNode.check;\n      formatted.expand = curNode.expand;\n      formatted.uncheckable = curNode.uncheckable;\n      formatted.parentNode = curNode.parentNode;\n\n      if (((_node$childrenKey = node[childrenKey]) === null || _node$childrenKey === void 0 ? void 0 : _node$childrenKey.length) > 0) {\n        formatted[childrenKey] = getFormattedTree(formatted[childrenKey], nodes, props);\n      }\n    }\n\n    return formatted;\n  });\n}\n/**\n * 获取每个节点的disable状态\n * @param {*} node\n */\n\nexport function getDisabledState(nodes, node, props) {\n  var _props$disabledItemVa = props.disabledItemValues,\n      disabledItemValues = _props$disabledItemVa === void 0 ? [] : _props$disabledItemVa,\n      valueKey = props.valueKey;\n  return disabledItemValues.some(function (value) {\n    return shallowEqual(nodes[node.refKey][valueKey], value);\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}