[{"/Users/azminds/Documents/five-g/frontend/src/index.js":"1","/Users/azminds/Documents/five-g/frontend/src/App.js":"2","/Users/azminds/Documents/five-g/frontend/src/home.js":"3","/Users/azminds/Documents/five-g/frontend/src/themes/index.js":"4","/Users/azminds/Documents/five-g/frontend/src/store/index.js":"5","/Users/azminds/Documents/five-g/frontend/src/themes/default.js":"6","/Users/azminds/Documents/five-g/frontend/src/tools/five-g/index.js":"7","/Users/azminds/Documents/five-g/frontend/src/tools/five-g/five-g.js":"8","/Users/azminds/Documents/five-g/frontend/src/components/defaultLoading/defaultLoading.jsx":"9","/Users/azminds/Documents/five-g/frontend/src/Layout/Layout.js":"10","/Users/azminds/Documents/five-g/frontend/src/pages/error/Error.js":"11","/Users/azminds/Documents/five-g/frontend/src/pages/login/Login.js":"12","/Users/azminds/Documents/five-g/frontend/src/pages/login/styles.js":"13","/Users/azminds/Documents/five-g/frontend/src/pages/error/styles.js":"14","/Users/azminds/Documents/five-g/frontend/src/Layout/styles.js":"15","/Users/azminds/Documents/five-g/frontend/src/context/UserContext.js":"16","/Users/azminds/Documents/five-g/frontend/src/pages/charts/Charts.js":"17","/Users/azminds/Documents/five-g/frontend/src/pages/maps/Maps.js":"18","/Users/azminds/Documents/five-g/frontend/src/pages/tables/Tables.js":"19","/Users/azminds/Documents/five-g/frontend/src/pages/typography/Typography.js":"20","/Users/azminds/Documents/five-g/frontend/src/components/Header/Header.js":"21","/Users/azminds/Documents/five-g/frontend/src/pages/icons/Icons.js":"22","/Users/azminds/Documents/five-g/frontend/src/pages/dashboard/Dashboard.js":"23","/Users/azminds/Documents/five-g/frontend/src/pages/notifications/Notifications.js":"24","/Users/azminds/Documents/five-g/frontend/src/pages/manage/index.js":"25","/Users/azminds/Documents/five-g/frontend/src/pages/monitor/index.js":"26","/Users/azminds/Documents/five-g/frontend/src/pages/deployNetwork/index.js":"27","/Users/azminds/Documents/five-g/frontend/src/pages/charts/components/ApexHeatmap.js":"28","/Users/azminds/Documents/five-g/frontend/src/pages/charts/components/ApexLineChart.js":"29","/Users/azminds/Documents/five-g/frontend/src/pages/notifications/styles.js":"30","/Users/azminds/Documents/five-g/frontend/src/pages/dashboard/mock.js":"31","/Users/azminds/Documents/five-g/frontend/src/pages/dashboard/styles.js":"32","/Users/azminds/Documents/five-g/frontend/src/pages/icons/styles.js":"33","/Users/azminds/Documents/five-g/frontend/src/pages/dashboard/components/Table/Table.js":"34","/Users/azminds/Documents/five-g/frontend/src/pages/dashboard/components/BigStat/BigStat.js":"35","/Users/azminds/Documents/five-g/frontend/src/components/PageTitle/PageTitle.js":"36","/Users/azminds/Documents/five-g/frontend/src/components/Widget/Widget.js":"37","/Users/azminds/Documents/five-g/frontend/src/components/Header/styles.js":"38","/Users/azminds/Documents/five-g/frontend/src/pages/typography/styles.js":"39","/Users/azminds/Documents/five-g/frontend/src/pages/manage/manage.js":"40","/Users/azminds/Documents/five-g/frontend/src/pages/deployNetwork/deployNetwork.js":"41","/Users/azminds/Documents/five-g/frontend/src/components/Wrappers/Wrappers.js":"42","/Users/azminds/Documents/five-g/frontend/src/pages/monitor/monitor.js":"43","/Users/azminds/Documents/five-g/frontend/src/components/Notification/Notification.js":"44","/Users/azminds/Documents/five-g/frontend/src/components/Sidebar/components/Dot.js":"45","/Users/azminds/Documents/five-g/frontend/src/components/UserAvatar/UserAvatar.js":"46","/Users/azminds/Documents/five-g/frontend/src/pages/maps/styles.js":"47","/Users/azminds/Documents/five-g/frontend/src/pages/dashboard/components/BigStat/styles.js":"48","/Users/azminds/Documents/five-g/frontend/src/components/PageTitle/styles.js":"49","/Users/azminds/Documents/five-g/frontend/src/components/Widget/styles.js":"50","/Users/azminds/Documents/five-g/frontend/src/services/apiService.js":"51","/Users/azminds/Documents/five-g/frontend/src/components/Notification/styles.js":"52","/Users/azminds/Documents/five-g/frontend/src/components/UserAvatar/styles.js":"53","/Users/azminds/Documents/five-g/frontend/src/pages/addEdgeNode/index.js":"54","/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetworkElement/index.js":"55","/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetwork/index.js":"56","/Users/azminds/Documents/five-g/frontend/src/pages/manageNetworkNodes/index.js":"57","/Users/azminds/Documents/five-g/frontend/src/pages/manageNetwork/index.js":"58","/Users/azminds/Documents/five-g/frontend/src/pages/addEdgeNode/addEdgeNode.js":"59","/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetworkElement/monitorNetworkElement.js":"60","/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetwork/monitorNetwork.js":"61","/Users/azminds/Documents/five-g/frontend/src/pages/manageNetworkNodes/manageNetworkNodes.js":"62","/Users/azminds/Documents/five-g/frontend/src/pages/manageNetwork/manageNetwork.js":"63","/Users/azminds/Documents/five-g/frontend/src/config.js":"64","/Users/azminds/Documents/five-g/frontend/src/store/siteCoordinator/siteCoordinator.actions.js":"65","/Users/azminds/Documents/five-g/frontend/src/store/root-reducer.js":"66","/Users/azminds/Documents/five-g/frontend/src/store/root-saga.js":"67","/Users/azminds/Documents/five-g/frontend/src/store/siteCoordinator/siteCoordinator.reducer.js":"68","/Users/azminds/Documents/five-g/frontend/src/store/auth/auth.reducer.js":"69","/Users/azminds/Documents/five-g/frontend/src/store/auth/auth.actions.js":"70","/Users/azminds/Documents/five-g/frontend/src/store/auth/auth.sagas.js":"71","/Users/azminds/Documents/five-g/frontend/src/store/siteCoordinator/siteCoordinator.types.js":"72","/Users/azminds/Documents/five-g/frontend/src/Layout/PublicRoute.js":"73","/Users/azminds/Documents/five-g/frontend/src/Layout/PrivateRoute.js":"74","/Users/azminds/Documents/five-g/frontend/src/pages/addAP/addAP.js":"75","/Users/azminds/Documents/five-g/frontend/src/pages/showOutput/showOutput.js":"76","/Users/azminds/Documents/five-g/frontend/src/pages/signUp/index.js":"77","/Users/azminds/Documents/five-g/frontend/src/store/auth/auth.types.js":"78","/Users/azminds/Documents/five-g/frontend/src/pages/stepperCoreFlow/index.js":"79","/Users/azminds/Documents/five-g/frontend/src/pages/inspect/index.js":"80","/Users/azminds/Documents/five-g/frontend/src/pages/stepperAddAP/index.js":"81","/Users/azminds/Documents/five-g/frontend/src/pages/loginForm/index.js":"82","/Users/azminds/Documents/five-g/frontend/src/pages/device/index.js":"83","/Users/azminds/Documents/five-g/frontend/src/pages/addDevice/index.js":"84","/Users/azminds/Documents/five-g/frontend/src/components/common/Button/button.js":"85","/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetworkNew/index.js":"86","/Users/azminds/Documents/five-g/frontend/src/pages/manageAppDeployment/index.js":"87","/Users/azminds/Documents/five-g/frontend/src/pages/signUp/signUPForm.js":"88","/Users/azminds/Documents/five-g/frontend/src/pages/stepperCoreFlow/stepperCoreFlow.js":"89","/Users/azminds/Documents/five-g/frontend/src/pages/stepperAddAP/stepperAddAP.js":"90","/Users/azminds/Documents/five-g/frontend/src/pages/inspect/inspect.js":"91","/Users/azminds/Documents/five-g/frontend/src/pages/device/device.js":"92","/Users/azminds/Documents/five-g/frontend/src/pages/loginForm/loginForm.js":"93","/Users/azminds/Documents/five-g/frontend/src/pages/addDevice/addDevice.js":"94","/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetworkNew/monitorNetworkNew.js":"95","/Users/azminds/Documents/five-g/frontend/src/pages/manageAppDeployment/manageAppDeployment.js":"96","/Users/azminds/Documents/five-g/frontend/src/pages/stepperCoreFlow/linearStepper.js":"97","/Users/azminds/Documents/five-g/frontend/src/pages/stepperAddAP/linearStepper.js":"98","/Users/azminds/Documents/five-g/frontend/src/pages/device/components/CustomTable.jsx":"99","/Users/azminds/Documents/five-g/frontend/src/pages/inspectManage/index.js":"100","/Users/azminds/Documents/five-g/frontend/src/pages/stepperAddAP/Accordion.js":"101","/Users/azminds/Documents/five-g/frontend/src/pages/inspectManage/inspectManageNetwork.js":"102","/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/index.js":"103","/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/HomeView.component.js":"104","/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/components/Stepper/Stepper.js":"105","/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/components/Stepper/Steps/Step4.js":"106","/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/components/Stepper/Steps/Step3.js":"107","/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/components/Stepper/Steps/Step2.js":"108","/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/components/Stepper/Steps/Step1.js":"109","/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/components/Stepper/Steps/components/Wrapper.js":"110","/Users/azminds/Documents/five-g/frontend/src/components/CustomButton.js":"111"},{"size":726,"mtime":1681361487900,"results":"112","hashOfConfig":"113"},{"size":1349,"mtime":1681361487881,"results":"114","hashOfConfig":"113"},{"size":1618,"mtime":1681361487882,"results":"115","hashOfConfig":"113"},{"size":611,"mtime":1681361487908,"results":"116","hashOfConfig":"113"},{"size":697,"mtime":1681361487907,"results":"117","hashOfConfig":"113"},{"size":2991,"mtime":1681361487908,"results":"118","hashOfConfig":"113"},{"size":243,"mtime":1681361275521,"results":"119","hashOfConfig":"113"},{"size":2333,"mtime":1681361487908,"results":"120","hashOfConfig":"113"},{"size":364,"mtime":1681361275504,"results":"121","hashOfConfig":"113"},{"size":7234,"mtime":1681363451884,"results":"122","hashOfConfig":"113"},{"size":1579,"mtime":1681361275516,"results":"123","hashOfConfig":"113"},{"size":8886,"mtime":1681361275517,"results":"124","hashOfConfig":"113"},{"size":3133,"mtime":1681361275517,"results":"125","hashOfConfig":"113"},{"size":1334,"mtime":1681361275516,"results":"126","hashOfConfig":"113"},{"size":680,"mtime":1681361275502,"results":"127","hashOfConfig":"113"},{"size":2086,"mtime":1681361487882,"results":"128","hashOfConfig":"113"},{"size":5556,"mtime":1681361275514,"results":"129","hashOfConfig":"113"},{"size":971,"mtime":1681361275518,"results":"130","hashOfConfig":"113"},{"size":2082,"mtime":1681361275520,"results":"131","hashOfConfig":"113"},{"size":4506,"mtime":1681361275520,"results":"132","hashOfConfig":"113"},{"size":13879,"mtime":1681361487881,"results":"133","hashOfConfig":"113"},{"size":377833,"mtime":1681361275517,"results":"134","hashOfConfig":"113"},{"size":15753,"mtime":1681361275515,"results":"135","hashOfConfig":"113"},{"size":13470,"mtime":1681361275519,"results":"136","hashOfConfig":"113"},{"size":244,"mtime":1681361275517,"results":"137","hashOfConfig":"113"},{"size":245,"mtime":1681361275519,"results":"138","hashOfConfig":"113"},{"size":251,"mtime":1681361275516,"results":"139","hashOfConfig":"140"},{"size":1794,"mtime":1681361275515,"results":"141","hashOfConfig":"113"},{"size":1328,"mtime":1681361275515,"results":"142","hashOfConfig":"113"},{"size":1858,"mtime":1681361275520,"results":"143","hashOfConfig":"113"},{"size":4105,"mtime":1681361275515,"results":"144","hashOfConfig":"113"},{"size":2870,"mtime":1681361275516,"results":"145","hashOfConfig":"113"},{"size":780,"mtime":1681361275517,"results":"146","hashOfConfig":"113"},{"size":1274,"mtime":1681361275515,"results":"147","hashOfConfig":"113"},{"size":4039,"mtime":1681361275515,"results":"148","hashOfConfig":"113"},{"size":427,"mtime":1681361275503,"results":"149","hashOfConfig":"113"},{"size":2646,"mtime":1681361487882,"results":"150","hashOfConfig":"113"},{"size":4900,"mtime":1681361487882,"results":"151","hashOfConfig":"113"},{"size":374,"mtime":1681361275520,"results":"152","hashOfConfig":"113"},{"size":1483,"mtime":1681361487903,"results":"153","hashOfConfig":"113"},{"size":8855,"mtime":1681361275516,"results":"154","hashOfConfig":"140"},{"size":3790,"mtime":1681361275504,"results":"155","hashOfConfig":"113"},{"size":1120,"mtime":1681361487905,"results":"156","hashOfConfig":"113"},{"size":3296,"mtime":1681361275503,"results":"157","hashOfConfig":"113"},{"size":862,"mtime":1681361275503,"results":"158","hashOfConfig":"113"},{"size":593,"mtime":1681361275504,"results":"159","hashOfConfig":"113"},{"size":171,"mtime":1681361275519,"results":"160","hashOfConfig":"113"},{"size":1027,"mtime":1681361275515,"results":"161","hashOfConfig":"113"},{"size":462,"mtime":1681361275503,"results":"162","hashOfConfig":"113"},{"size":969,"mtime":1681361275504,"results":"163","hashOfConfig":"113"},{"size":18321,"mtime":1681361967823,"results":"164","hashOfConfig":"113"},{"size":993,"mtime":1681361275503,"results":"165","hashOfConfig":"113"},{"size":276,"mtime":1681361275504,"results":"166","hashOfConfig":"113"},{"size":249,"mtime":1681361275514,"results":"167","hashOfConfig":"113"},{"size":259,"mtime":1681361275519,"results":"168","hashOfConfig":"113"},{"size":252,"mtime":1681361275519,"results":"169","hashOfConfig":"140"},{"size":256,"mtime":1681361275518,"results":"170","hashOfConfig":"113"},{"size":251,"mtime":1681361275518,"results":"171","hashOfConfig":"113"},{"size":10318,"mtime":1681361275514,"results":"172","hashOfConfig":"113"},{"size":41235,"mtime":1681361275519,"results":"173","hashOfConfig":"113"},{"size":26050,"mtime":1681361275519,"results":"174","hashOfConfig":"140"},{"size":7946,"mtime":1681361275518,"results":"175","hashOfConfig":"113"},{"size":36709,"mtime":1681361487904,"results":"176","hashOfConfig":"113"},{"size":150,"mtime":1681361487882,"results":"177","hashOfConfig":"113"},{"size":260,"mtime":1681361487907,"results":"178","hashOfConfig":"113"},{"size":304,"mtime":1681361487907,"results":"179","hashOfConfig":"113"},{"size":178,"mtime":1681361487907,"results":"180","hashOfConfig":"113"},{"size":671,"mtime":1681361487908,"results":"181","hashOfConfig":"113"},{"size":1320,"mtime":1681361487907,"results":"182","hashOfConfig":"113"},{"size":1682,"mtime":1681361487907,"results":"183","hashOfConfig":"113"},{"size":4242,"mtime":1681361487907,"results":"184","hashOfConfig":"113"},{"size":101,"mtime":1681361487908,"results":"185","hashOfConfig":"113"},{"size":640,"mtime":1681361487881,"results":"186","hashOfConfig":"113"},{"size":986,"mtime":1681361487881,"results":"187","hashOfConfig":"113"},{"size":7529,"mtime":1681361487900,"results":"188","hashOfConfig":"113"},{"size":3055,"mtime":1681361487905,"results":"189","hashOfConfig":"113"},{"size":248,"mtime":1681361487905,"results":"190","hashOfConfig":"113"},{"size":827,"mtime":1681361487907,"results":"191","hashOfConfig":"113"},{"size":253,"mtime":1681361487906,"results":"192","hashOfConfig":"113"},{"size":245,"mtime":1681361487901,"results":"193","hashOfConfig":"113"},{"size":250,"mtime":1681361487906,"results":"194","hashOfConfig":"113"},{"size":37,"mtime":1681361487903,"results":"195","hashOfConfig":"113"},{"size":243,"mtime":1681361487901,"results":"196","hashOfConfig":"113"},{"size":246,"mtime":1681361487901,"results":"197","hashOfConfig":"113"},{"size":263,"mtime":1681361487882,"results":"198","hashOfConfig":"113"},{"size":255,"mtime":1681361487905,"results":"199","hashOfConfig":"113"},{"size":257,"mtime":1681361487904,"results":"200","hashOfConfig":"113"},{"size":5842,"mtime":1681361487906,"results":"201","hashOfConfig":"113"},{"size":737,"mtime":1681361487906,"results":"202","hashOfConfig":"113"},{"size":700,"mtime":1681361487906,"results":"203","hashOfConfig":"113"},{"size":797,"mtime":1681361487901,"results":"204","hashOfConfig":"113"},{"size":1704,"mtime":1681361487901,"results":"205","hashOfConfig":"113"},{"size":3033,"mtime":1681361487903,"results":"206","hashOfConfig":"113"},{"size":4810,"mtime":1681361487901,"results":"207","hashOfConfig":"113"},{"size":46594,"mtime":1681361487905,"results":"208","hashOfConfig":"113"},{"size":26366,"mtime":1681361487904,"results":"209","hashOfConfig":"113"},{"size":33489,"mtime":1681361487906,"results":"210","hashOfConfig":"113"},{"size":15651,"mtime":1681361487906,"results":"211","hashOfConfig":"113"},{"size":1943,"mtime":1681361487901,"results":"212","hashOfConfig":"113"},{"size":258,"mtime":1681361487901,"results":"213","hashOfConfig":"113"},{"size":1608,"mtime":1681361487906,"results":"214","hashOfConfig":"113"},{"size":37583,"mtime":1681361487903,"results":"215","hashOfConfig":"113"},{"size":48,"mtime":1680958149000,"results":"216","hashOfConfig":"113"},{"size":399,"mtime":1681218761000,"results":"217","hashOfConfig":"113"},{"size":5844,"mtime":1681365696649,"results":"218","hashOfConfig":"113"},{"size":3642,"mtime":1681365848684,"results":"219","hashOfConfig":"113"},{"size":18151,"mtime":1681366149945,"results":"220","hashOfConfig":"113"},{"size":1829,"mtime":1681365762998,"results":"221","hashOfConfig":"113"},{"size":40304,"mtime":1681366442007,"results":"222","hashOfConfig":"113"},{"size":708,"mtime":1681365375695,"results":"223","hashOfConfig":"113"},{"size":577,"mtime":1681363688522,"results":"224","hashOfConfig":"113"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},"12zx58q",{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"227"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"227"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"227"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"227"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wrl6yp",{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"227"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"227"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"227"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"227"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"227"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"227"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"227"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"227"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"227"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"227"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"227"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"227"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"227"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"227"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"227"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"227"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":5,"source":"450","usedDeprecatedRules":"227"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"227"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},"/Users/azminds/Documents/five-g/frontend/src/index.js",[],["470","471"],"/Users/azminds/Documents/five-g/frontend/src/App.js",["472"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport axios from 'axios';\n\nimport Themes from \"./themes\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome/styles.css';\n\nimport Home from './home';\nimport { updateConfig } from './store/siteCoordinator/siteCoordinator.actions'\n\n\nfunction App() {\n    const dispatch = useDispatch()\n\n    const [state, setState] = useState({\n        config: {},\n        doneFetchingData: false\n    });\n\n    useEffect(() => {\n        getConfig();\n\n\n    }, [])\n\n    const getConfig = () => {\n        axios.get('configure.json')\n            .then(function (res) {\n\n                var config = res.data;\n                setState({ config, doneFetchingData: true });\n                dispatch(updateConfig(config))\n\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred config in appjs');\n            });\n    }\n\n    const { doneFetchingData } = state;\n\n    return (\n        doneFetchingData ?\n            <ThemeProvider theme={Themes.default}>\n                <CssBaseline />\n                <Home />\n            </ThemeProvider>\n            : ''\n    );\n\n}\n\nexport default App;\n","/Users/azminds/Documents/five-g/frontend/src/home.js",[],"/Users/azminds/Documents/five-g/frontend/src/themes/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/store/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/themes/default.js",[],"/Users/azminds/Documents/five-g/frontend/src/tools/five-g/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/tools/five-g/five-g.js",["473","474","475","476","477"],"import React from \"react\";\nimport { HashRouter, Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport Notifications from 'react-notify-toast';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { loadUserStart } from '../../store/auth/auth.actions';\n// components\nimport Layout from \"../../Layout\";\n\n// pages\nimport Error from \"../../pages/error\";\nimport Login from \"../../pages/login\";\nimport SignUpPage from \"../../pages/signUp\";\nimport { FastfoodOutlined } from \"@material-ui/icons\";\nimport { Auth, Hub } from \"aws-amplify\";\n\n\n// context\n// import { useUserState } from \"../../context/UserContext\";\n\nexport default function App(props) {\n  // global\n  // var { isAuthenticated } = useUserState();\n\n  const login = useSelector(state => state.login);\n\n  const router = useHistory()\n\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    console.log('load user start')\n    dispatch(loadUserStart())\n  }, [dispatch])\n\n  // Hub.listen('auth', ({ payload }) => {\n  //   const { event } = payload;\n  //   console.log(payload)\n  //   if (event === 'autoSignIn') {\n  //     const { username, attributes } = payload.data\n\n  //     if (username && attributes) {\n\n  //       dispatch(authActions.updateUserAuthenticated({ username, uid: attributes.sub, name: attributes.name, company: attributes.company }))\n\n\n  //     }\n  //     // assign user\n  //   } else if (event === 'autoSignIn_failure') {\n  //     // redirect to sign in page\n  //   }\n  // })\n\n  return (\n    <HashRouter>\n      <Notifications options={{ zIndex: 1, top: '64px' }} />\n      <Switch>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/deploy\" />} />\n        {/* <Route\n          exact\n          path=\"/app\"\n          render={() => <Redirect to=\"/app/dashboard\" />}\n        /> */}\n        <Route path=\"/\" component={(currProps) => { return <Layout {...props} {...currProps} /> }} />\n        <Route component={Error} />\n      </Switch>\n\n      {\n        login &&\n        <div className=\"login-main-container\">\n          <div className=\"login_overlay_panel\" onClick={() => console.log('click')}></div>\n          <div className=\"login_main_block\">\n            <SignUpPage></SignUpPage>\n          </div>\n        </div>\n      }\n    </HashRouter>\n  );\n\n  // #######################################################################\n\n}","/Users/azminds/Documents/five-g/frontend/src/components/defaultLoading/defaultLoading.jsx",["478"],"import React, { Component } from 'react'\nimport loading_icon from '../../images/home/loading.gif';\nimport './defaultLoading.css';\nclass DefaultLoading extends Component {\n    constructor(props) {\n      super(props);\n    }\n  \n    render() {\n      return <img src={loading_icon} className=\"initial_loading\" alt=\"loading...\" />\n    }\n}\n\nexport default DefaultLoading;","/Users/azminds/Documents/five-g/frontend/src/Layout/Layout.js",["479","480"],"/Users/azminds/Documents/five-g/frontend/src/pages/error/Error.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/login/Login.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/login/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/error/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/Layout/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/context/UserContext.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/charts/Charts.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/maps/Maps.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/tables/Tables.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/typography/Typography.js",[],"/Users/azminds/Documents/five-g/frontend/src/components/Header/Header.js",["481","482","483","484","485","486","487","488","489","490","491"],"import React, { Fragment, useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { connect, useSelector, useDispatch, } from 'react-redux';\n\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  // InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Box,\n  Divider,\n  List,\n  ListItem,\n  Drawer,\n  Container,\n  Button,\n  Hidden,\n  // Link\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  Person as AccountIcon,\n  Send as SendIcon,\n  Clear\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport './header.scss';\nimport Logo from '../../images/app/5Fi_logo_white.svg';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\nimport * as authActions from '../../store/auth/auth.actions';\nimport { Auth } from \"aws-amplify\";\n\n// context\n// import {\n//   useLayoutState,\n//   useLayoutDispatch,\n//   toggleSidebar,\n// } from \"../../context/LayoutContext\";\n// import { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header({ ...props }) {\n  var classes = useStyles();\n  const router = useHistory()\n\n  const authState = useSelector(state => state.auth);\n\n\n  console.log(props, router);\n\n  // global\n  // var layoutState = useLayoutState();\n  // var layoutDispatch = useLayoutDispatch();\n  // var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  // var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  // var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  // var [isSearchOpen, setSearchOpen] = useState(false);\n\n  var [signUp, setSignUp] = useState(null);\n\n\n  const dispatch = useDispatch()\n\n\n\n\n  //   const handleSignUpSection = () => {\n  //     var thisView = this;\n  //     console.log(\"updatingLogin props: \", props);\n  //     console.log(\"I am from signUp Component :\");\n  //     thisView.props.updatingLogin(true);\n  // };\n\n  const handleSignUpSection = useDispatch();\n  const handleSignOut = async () => {\n    dispatch(authActions.signoutStart(router))\n    setProfileMenu(null)\n  }\n\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n\n  const drawerWidth = 840;\n\n  const handleSignIn = async () => {\n    router.push({ pathname: \"/login\" })\n\n  }\n  const handleSignUp = async () => {\n    router.push({ pathname: \"/deploy\" })\n\n  }\n\n  return (\n    <AppBar position=\"fixed\" className=\"app-header\">\n      <Toolbar className={classes.toolbar}>\n        {/* <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton> */}\n        <Typography variant=\"h4\" weight=\"medium\" className={classes.logotype}>\n          <NavLink to=\"/monitor\" className={\"app-name-header\"}>\n            <img src={Logo} className=\"app_logo_header\" />\n          </NavLink>\n        </Typography>\n        <div className={classes.grow} />\n\n        <Box className={classes.navItems}>\n          {!router.location.pathname.includes('show') ? <div className={\"h-options\"}>\n            <NavLink to=\"/monitor\"><span>Monitor Network</span></NavLink>\n            <NavLink to=\"/manage\"><span>Manage Network</span></NavLink>\n            <NavLink to=\"/inspect\"><span>Inspect</span></NavLink>\n\n            {/* <NavLink to=\"/deploy\"><span>Deploy</span></NavLink>\n          <NavLink to=\"/monitor\"><span>Monitor</span></NavLink>\n          <NavLink to=\"/manage\"><span>Manage</span></NavLink> */}\n          </div>\n            :\n            <span className=\"header\">Agri-Vision</span>\n          }\n        </Box>\n\n\n\n        <div className={classes.grow} />\n        {/* <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setMailMenu(e.currentTarget);\n            setIsMailsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <MailIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton> */}\n\n        <Box className={classes.navItems}>\n\n          {!authState.isAuthenticated && !router.location.pathname.includes('show') && <div className=\"sign-up-button\" onClick={() => {\n            handleSignUp()\n          }}>Sign Up </div>}\n        </Box>\n\n\n        {authState.isAuthenticated && !router.location.pathname.includes('show') &&\n          <IconButton\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            className={classes.headerMenuButton}\n            aria-controls=\"profile-menu\"\n            onClick={e => setProfileMenu(e.currentTarget)}\n          >\n            <AccountIcon classes={{ root: classes.headerIcon }} />\n          </IconButton>}\n\n        <Hidden mdUp>\n          <IconButton\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            className={classes.headerMenuButton}\n            aria-controls=\"profile-menu\"\n            onClick={handleDrawerToggle}\n          >\n            <MenuIcon classes={{ root: classes.headerIcon }} />\n          </IconButton>\n        </Hidden>\n\n\n\n\n\n\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map(message => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map(notification => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          {authState.isAuthenticated &&\n\n            <div className={classes.profileMenuUser}>\n              <Typography variant=\"h4\" weight=\"medium\">\n                {authState.currentUser.name}\n              </Typography>\n              <Typography\n                className={classes.profileMenuLink}\n                component=\"a\"\n                color=\"primary\"\n              >\n                {authState.currentUser.email}\n              </Typography>\n            </div>\n          }\n          {/* <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\n          </MenuItem> */}\n          {!authState?.isAuthenticated\n            ?\n            <div onClick={handleSignIn} className={classes.profileMenuUser}>\n              <Typography\n                className={classes.profileMenuLink}\n                color=\"primary\"\n              // onClick={() => signOut(userDispatch, props.history)}\n              >\n                Sign In\n              </Typography>\n            </div>\n            :\n            <div onClick={handleSignOut} className={classes.profileMenuUser}>\n              <Typography\n                className={classes.profileMenuLink}\n                color=\"primary\"\n              // onClick={() => signOut(userDispatch, props.history)}\n              >\n                Sign Out\n              </Typography>\n            </div>}\n        </Menu>\n        <Drawer\n          variant=\"temporary\"\n          open={mobileOpen}\n          anchor={\"right\"}\n          onClose={handleDrawerToggle}\n\n          sx={{\n            display: { xs: 'block', sm: 'none', },\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: '600px' },\n          }}\n        >\n\n          <Box className={classes.drawerComp}>\n            <Container>\n              <Box className={classes.clrIconWrapper}>\n\n                <IconButton >\n                  <Clear style={{ color: '#2c2c6e' }} fontSize=\"large\" onClick={handleDrawerToggle} />\n                </IconButton>\n              </Box>\n\n              {!router.location.pathname.includes('show') ?\n                <Box className={classes.resMenuItems}>\n                  <NavLink to=\"/monitor\">\n                    <Typography variant=\"h3\">Monitor Network</Typography>\n                  </NavLink>\n                  <NavLink to=\"/manage\">\n                    <Typography variant=\"h3\">Manage Network</Typography>\n                  </NavLink>\n                  <NavLink to=\"/inspect\">\n                    <Typography variant=\"h3\">Inspect</Typography>\n                  </NavLink>\n                </Box>\n                :\n                <Box className={classes.resMenuItems}>\n                  <Typography variant=\"h3\">\n                    Agri-Vision\n                  </Typography>\n                </Box>\n              }\n\n              <Box className={classes.resMenuFooter}>\n\n                {!authState.isAuthenticated && !router.location.pathname.includes('show') && <Button\n                  onClick={handleSignUp}\n                  variant=\"contained\" className={classes.signUpBtn}>\n                  Sign Up\n                </Button>}\n\n              </Box>\n            </Container>\n          </Box>\n        </Drawer>\n      </Toolbar>\n    </AppBar>\n  );\n}","/Users/azminds/Documents/five-g/frontend/src/pages/icons/Icons.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/dashboard/Dashboard.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/notifications/Notifications.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/manage/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/monitor/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/deployNetwork/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/charts/components/ApexHeatmap.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/charts/components/ApexLineChart.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/notifications/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/dashboard/mock.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/dashboard/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/icons/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/dashboard/components/Table/Table.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/dashboard/components/BigStat/BigStat.js",[],"/Users/azminds/Documents/five-g/frontend/src/components/PageTitle/PageTitle.js",[],"/Users/azminds/Documents/five-g/frontend/src/components/Widget/Widget.js",["492"],"import React, { useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nexport default function Widget({\n  children,\n  title,\n  noBodyPadding,\n  bodyClass,\n  disableWidgetMenu,\n  header,\n  noHeaderPadding,\n  headerClass,\n  style,\n  noWidgetShadow,\n  customeClass,\n  fontBold,\n  ...props\n}) {\n  var classes = useStyles();\n\n  // local\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\n\n  return (\n    <div className={classes.widgetWrapper +\" \"+ props.className} style={style && {...style}}>\n      <Paper className={classes.paper} classes={{ root: classnames(classes.widgetRoot, {\n        [classes.noWidgetShadow]: noWidgetShadow\n        }, customeClass ? customeClass : \"\") }}>\n        <div className={classnames(classes.widgetHeader, {\n          [classes.noPadding]: noHeaderPadding,\n          [headerClass]: headerClass\n        })}>\n          {header ? (\n            header\n          ) : (\n            <React.Fragment>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\" style={{color:'#14395E'}, fontBold ? {fontFamily:'five-g-bold'} : {}} noWrap>\n                {title}\n              </Typography>\n              {!disableWidgetMenu && (\n                <IconButton\n                  color=\"primary\"\n                  classes={{ root: classes.moreButton }}\n                  aria-owns=\"widget-menu\"\n                  aria-haspopup=\"true\"\n                  onClick={() => setMoreMenuOpen(true)}\n                  buttonRef={setMoreButtonRef}\n                >\n                  <MoreIcon />\n                </IconButton>\n              )}\n            </React.Fragment>\n          )}\n        </div>\n        <div\n          className={classnames(classes.widgetBody, {\n            [classes.noPadding]: noBodyPadding,\n            [bodyClass]: bodyClass,\n          })}\n        >\n          {children}\n        </div>\n      </Paper>\n      <Menu\n        id=\"widget-menu\"\n        open={isMoreMenuOpen}\n        anchorEl={moreButtonRef}\n        onClose={() => setMoreMenuOpen(false)}\n        disableAutoFocusItem\n      >\n        <MenuItem>\n          <Typography>Edit</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Copy</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Delete</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Print</Typography>\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","/Users/azminds/Documents/five-g/frontend/src/components/Header/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/typography/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/manage/manage.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/deployNetwork/deployNetwork.js",["493","494"],"/Users/azminds/Documents/five-g/frontend/src/components/Wrappers/Wrappers.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/monitor/monitor.js",[],"/Users/azminds/Documents/five-g/frontend/src/components/Notification/Notification.js",[],"/Users/azminds/Documents/five-g/frontend/src/components/Sidebar/components/Dot.js",[],"/Users/azminds/Documents/five-g/frontend/src/components/UserAvatar/UserAvatar.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/maps/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/dashboard/components/BigStat/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/components/PageTitle/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/components/Widget/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/services/apiService.js",["495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534"],"import qs from 'qs';\nimport axios from 'axios';\nimport { getAppConfig } from '../store';\n\nvar apiServices = {\n\n    getMonitorHomeData: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/home\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getElementDetails: function (token, containerId) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/element\",\n            data: qs.stringify({\n                source: config.source,\n                containerId: containerId\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    addSubscriber: function (token, data) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/manage/addsubscriber\",\n            data: qs.stringify({\n                source: config.source,\n                ...data\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getSubscribers: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/manage/subscribers\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    deleteSubscriber: function (token, ueId) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/manage/delete_subscriber\",\n            data: qs.stringify({\n                source: config.source,\n                ueId\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    modifySubscriber: function (token, data) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/manage/modify_subscriber\",\n            data: qs.stringify({\n                source: config.source,\n                ...data\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getAccessPoints: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/manage/access_points\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getUEList: function (token, containerId) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/uelist\",\n            data: qs.stringify({\n                source: config.source,\n                containerId\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    prepareHandOver: function (token, data) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/prepare_handover\",\n            data: qs.stringify({\n                source: config.source,\n                ...data\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getPathSwitchList: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/path_switch_list\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    submitPathSwitch: function (token, data) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/submit_path_switch\",\n            data: qs.stringify({\n                source: config.source,\n                ...data\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    buildADemo: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/manage/build_a_demo\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    suggestedActionUE: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/manage/suggested_actions_core\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    suggestedActionUESubmit: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/manage/execute_sug_action\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getCoresList: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/deploy/cn_list\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getAccessPointsList: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/deploy/ran_list\",\n            data: qs.stringify({\n                source: config.source\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    deployNetwork: function (token, data) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/deploy/deploy_network\",\n            data: qs.stringify({\n                ...data\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getMonitorHomeStats: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/get_network_stats\",\n            data: qs.stringify({\n\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getMonitorHomeSummary: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/get_network_summary\",\n            data: qs.stringify({\n\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getNetWorkList: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/get_network_list\",\n            data: qs.stringify({\n\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getDeployStats: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/manage/get_app_stats\",\n            data: qs.stringify({\n\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getEndPoints: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/manage/ue_details\",\n            data: qs.stringify({\n\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getInspectList: function (token) {\n\n        const config = getAppConfig();\n\n        return axios({\n            cancelToken: token,\n            cancelPreviousRequest: true,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/inspect_list\",\n            data: qs.stringify({\n\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getLogsData: function (id, dataType) {\n\n        const config = getAppConfig();\n\n        let url = \"get_logs\";\n        if (dataType === \"packets\") {\n            url = \"get_packets\";\n        } else if (dataType === \"consoles\") {\n            url = \"get_console\";\n        } else if (dataType === \"terminals\") {\n            url = \"get_terminals\";\n        }\n\n        console.log(id);\n        return axios({\n            // cancelToken: token,\n            cancelPreviousRequest: false,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/\" + url,\n            data: qs.stringify({\n                id\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n    getApplicationUEList: function (id, dataType) {\n\n        const config = getAppConfig();\n\n        console.log(id);\n        return axios({\n            // cancelToken: token,\n            cancelPreviousRequest: false,\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/manage/app_ue_list\",\n            data: qs.stringify({\n                id\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n    demoLogin: function (username, password) {\n\n        const config = getAppConfig();\n\n        return axios({\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/auth/login\",\n            data: qs.stringify({\n                username: username, password: password\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n    validateAP: function () {\n\n        const config = getAppConfig();\n\n        return axios({\n            method: 'get',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/validate_ap\",\n            data: qs.stringify({\n                source: config.source,\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n    getRanParameters: function () {\n\n        const config = getAppConfig();\n\n        return axios({\n            method: 'get',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/get_ran_parameter\",\n            data: qs.stringify({\n                source: config.source,\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n    deployAP: function (params) {\n\n        const config = getAppConfig();\n        console.log(Number(params.AMF_IP))\n        return axios({\n            method: 'post',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/ran_deployment\",\n            data: qs.stringify({\n                source: config.source,\n                Band: params.Band,\n                AMF_IP: params.AMF_IP,\n                MCC: params.MCC,\n                MNC: params.MNC,\n                TAC: params.TAC,\n                SST: params.SST,\n                SD: params.SD,\n                Gain: params.Gain,\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n    tuning: function () {\n\n        const config = getAppConfig();\n\n        return axios({\n            method: 'get',\n            url: 'http://45.112.28.125:3002' + \"/api/monitor/tuning\",\n            data: qs.stringify({\n                source: config.source,\n            })\n        }).then(function (response) {\n\n            return response.data;\n\n        }).catch(function (res) {\n            console.log(res);\n            console.log('An error occurred in get solr query service');\n        });\n    },\n\n}\n\nexport default apiServices;","/Users/azminds/Documents/five-g/frontend/src/components/Notification/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/components/UserAvatar/styles.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/addEdgeNode/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetworkElement/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetwork/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/manageNetworkNodes/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/manageNetwork/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/addEdgeNode/addEdgeNode.js",["535","536","537","538","539","540","541","542","543","544","545"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport './addEdgeNode.scss';\n\nimport {\n    Grid,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    FormControl,\n    MenuItem\n} from \"@material-ui/core\";\n\nimport Select from 'react-select';\n\nimport * as Icons from \"@material-ui/icons\";\nimport gnodeb from '../../images/app/gNodeB.svg';\n\nimport apiService from '../../services/apiService';\n\nclass AddEdgeNode extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            facilityType : [\n                { value: 'warehouse', label: 'warehouse' },\n                { value: 'factory', label: 'factory' },\n                { value: 'facilty', label: 'facilty' }\n            ],\n            nrband: [\n                { value: 'Band 1', label: 'Band 1' },\n                { value: 'Band 3', label: 'Band 3' },\n                { value: 'Band 7', label: 'Band 7' },\n                { value: 'Band 41', label: 'Band 41' },\n                { value: 'Band 78', label: 'Band 78' }\n            ],\n            selectedNrband: { value: 'Band 1', label: 'Band 1' },\n            duplexMode: [\n                { value: 'TDD', label: 'TDD' },\n                { value: 'FDD', label: 'FDD' }\n            ],\n            selectedDuplexMode: { value: 'TDD', label: 'TDD' },\n            bandwidth: [\n                { value: '40', label: '40' },\n                { value: '50', label: '50' },\n                { value: '60', label: '60' },\n                { value: '70', label: '70' },\n                { value: '80', label: '80' },\n                { value: '100', label: '100' }\n            ],\n            selectedBandwidth:  { value: '40', label: '40' },\n            superCarrierSpacing: [\n                { value: '15', label: '15' },\n                { value: '30', label: '30' },\n                { value: '60', label: '60' },\n                { value: '120', label: '120' }\n            ],\n            selectedSuperCarrierSpacing: { value: '15', label: '15' },\n            deployement: [\n                { value: 'indoor', label: 'Indoor' },\n                { value: 'outdoor', label: 'Outdoor' }\n            ],\n            selectedDeployement: { value: 'indoor', label: 'Indoor' },\n            ranHardware: [\n                { value: '8210', label: '8210' },\n                { value: 'x310', label: 'x310' },\n                { value: 'n300', label: 'N300' },\n                { value: 'Amarisoft', label: 'Amarisoft' }\n            ],\n            selectedRanHardware: { value: '8210', label: '8210' },\n            ciphering: [\n                { value: 'yes', label: 'Yes' },\n                { value: 'no', label: 'No' }\n            ],\n            selectedCiphering: { value: 'yes', label: 'Yes' },\n            integrity: [\n                { value: 'yes', label: 'Yes' },\n                { value: 'no', label: 'No' }\n            ],\n            selectedInegrity: { value: 'yes', label: 'Yes' },\n            mimoUpto: [\n                { value: '2x2', label: '2X2' },\n                { value: '4x4', label: '4X4' }\n            ],\n            selectedMimoUpto: { value: '2x2', label: '2X2' },\n            carrierAggregation: [\n                { value: 'enable', label: 'Enable' },\n                { value: 'disable', label: 'Disable' }\n            ],\n            selectedCarrierAggregation: { value: 'enable', label: 'Enable' }\n        }\n\n        this.getAccessPointsToken = null;\n\n    }\n\n    componentDidMount(){\n    }\n\n    render() {\n\n        const { nrband, superCarrierSpacing, duplexMode, bandwidth, deployement, \n                    ranHardware, mimoUpto, carrierAggregation, ciphering, integrity } = this.state;\n        const { selectedNrband, selectedDuplexMode, selectedSuperCarrierSpacing, selectedBandwidth, selectedDeployement,\n                    selectedRanHardware, selectedMimoUpto, selectedCarrierAggregation, selectedCiphering, selectedInegrity  } = this.state;\n\n        return (\n            <div className=\"five-g-manage-edge-nodes\">\n                <Grid container spacing={4}>\n                    <Grid item lg={4} xs={12} className=\"fgm-inner-grid-left\">\n                        <Grid container spacing={4} className=\"fgm-inner-grid-li\" >\n                            <Grid item md={6} xs={12} className=\"fgm-inner-grid-inner\">\n                                <img src={gnodeb} className=\"fgmigr-img\" />\n                                <span className='fgmigr-span'>gNodeB</span>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item lg={8} xs={12} className=\"fgm-inner-grid-right\">\n                        <Grid container spacing={4} className=\"each-form-sub\">\n                            <span className='fen-form-head'>General</span>\n                            <Grid item md={6} xs={12} className=\"fgm-inner-grid\">\n                                <div className=\"fdmen-each\">\n                                    <span>NR Band</span>\n                                    <Select options={nrband} className=\"selections\" value={selectedNrband} />\n                                </div>\n                                <div className=\"fdmen-each\">\n                                    <span>Operating Frequency</span>\n                                    <input type=\"text\" placeholder=\"6400008 (n78)\" />\n                                </div>\n                                <div className=\"fdmen-each\">\n                                    <span>Subcarrier Spacing (kHZ)</span>\n                                    <Select options={superCarrierSpacing} className=\"selections\" value={selectedSuperCarrierSpacing} />\n                                </div>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgm-inner-grid\">\n                                <div className=\"fdmen-each\">\n                                    <span>Duplex Mode</span>\n                                    <Select options={duplexMode} className=\"selections\" value={selectedDuplexMode} />\n                                </div>\n                                <div className=\"fdmen-each\">\n                                    <span>Bandwidth (MHz)</span>\n                                    <Select options={bandwidth} className=\"selections\" value={selectedBandwidth} />\n                                </div>\n                                <div className=\"fdmen-each\">\n                                    <span>Deployment</span>\n                                    <Select options={deployement} className=\"selections\" value={selectedDeployement} />\n                                </div>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={4} className=\"each-form-sub\">\n                            <span className='fen-form-head'>Gains (dB) (Based on RSRP and RSSI)</span>\n                            <Grid item md={6} xs={12} className=\"fgm-inner-grid\">\n                                <div className=\"fdmen-each\">\n                                    <span>Gains (dB) (Based on RSRP and RSSI)</span>\n                                    <input type=\"text\" placeholder=\"10\" />\n                                </div>\n                                <div className=\"fdmen-each\">\n                                    <span>Transmitter Attenuation</span>\n                                    <input type=\"text\" placeholder=\"10\" />\n                                </div>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgm-inner-grid\">\n                                <div className=\"fdmen-each\">\n                                    <span>Target SNR</span>\n                                    <input type=\"text\" placeholder=\"20\" />\n                                </div>\n                                <div className=\"fdmen-each\">\n                                    <span>Receiver Gain</span>\n                                    <input type=\"text\" placeholder=\"114\" />\n                                </div>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={4} className=\"each-form-sub\">\n                            <span className='fen-form-head'>Advanced Parameters</span>\n                            <Grid item md={6} xs={12} className=\"fgm-inner-grid\">\n                                <div className=\"fdmen-each\">\n                                    <span>RAN Hardware</span>\n                                    <Select options={ranHardware} className=\"selections\" value={selectedRanHardware} />\n                                </div>\n                                <div className=\"fdmen-each\">\n                                    <span>MIMO (up to)</span>\n                                    <Select options={mimoUpto} className=\"selections\" value={selectedMimoUpto} />\n                                </div>\n                                <div className=\"fdmen-each\">\n                                    <span>Carrier Aggregation</span>\n                                    <Select options={carrierAggregation} className=\"selections\" value={selectedCarrierAggregation} />\n                                </div>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgm-inner-grid\">\n                                <div className=\"fdmen-each\">\n                                    <span>Ciphering</span>\n                                    <Select options={ciphering} className=\"selections\" value={selectedCiphering} />\n                                </div>\n                                <div className=\"fdmen-each\">\n                                    <span>Integrity</span>\n                                    <Select options={integrity} className=\"selections\" value={selectedInegrity} />\n                                </div>\n                            </Grid>\n                        </Grid>\n\n                        <Grid container spacing={4} className=\"each-form-sub-submit\">\n                            <span className='submit-bt-e-node'>Add</span>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default AddEdgeNode;","/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetworkElement/monitorNetworkElement.js",["546","547","548","549","550","551","552","553","554"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport './monitorNetworkElement.scss';\n\nimport {\n    Grid,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Radio,\n    withStyles\n} from \"@material-ui/core\";\n\nimport * as Icons from \"@material-ui/icons\";\n\nimport {\n    ResponsiveContainer,\n    LineChart,\n    Line,\n    YAxis,\n    XAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    Brush,\n    Area\n} from \"recharts\";\nimport moment from 'moment';\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nimport loadingIcon from '../../images/home/loading.gif';\n\nimport Widget from \"../../components/Widget\";\n\nimport apiService from '../../services/apiService.js';\n\n\nconst MyRadio = withStyles({\n    root: {\n        color: '#1F3BB3',\n        '&$checked': {\n            color: '#1F3BB3',\n        },\n    },\n    checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nclass MonitorNetworkElement extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lineData: [\n                { name: 'July 1', uv: 4000 },\n                { name: 'July 2', uv: 3000 },\n                { name: 'July 3', uv: 2000 },\n                { name: 'July 4', uv: 1000 },\n                { name: 'July 5', uv: 1890 }\n            ],\n            chart1: {}, chart2: {}, chart3: {}\n            , networkElementInfo: {},\n            handoverStatus: false, pathSwitchStatus: false, handOverError: '', ueList: [],\n            selectedHandoverElement: null, selectedPathSwitchElement: null, pathSwitchError: '', pathSwitch: [],\n            callUnderProgress: false,\n            firstCallDone: false\n        }\n\n        this.ueListToken = null;\n        this.prepareHandoverToken = null;\n        this.pathSwitchToken = null;\n        this.submitPathSwitchToken = null;\n\n    }\n\n    componentDidMount() {\n\n        this.getElementDetails();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.match.params.id !== this.props.match.params.id) {\n            this.getElementDetails();\n        }\n    }\n\n    getElementDetails = () => {\n\n        var thisView = this;\n        if (this.monitorHomeToken)\n            this.monitorHomeToken.cancel();\n        this.monitorHomeToken = axios.CancelToken.source();\n\n        axios.all([apiService.getElementDetails(this.monitorHomeToken.token, this.props.match.params.id)])\n            .then(function (res) {\n                if (res[0]) {\n                    let networkInfo = res[0][\"data\"] ? res[0][\"data\"] : {};\n                    thisView.setState({ networkElementInfo: networkInfo });\n                    thisView.processChartData(networkInfo);\n                    thisView.setState({ firstCallDone: true });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor element service');\n\n            });\n\n    }\n\n    processChartData = (networkInfo) => {\n\n        let chart1 = {}, chart2 = {}, chart3 = {};\n        if (networkInfo && networkInfo.NF_stats) {\n            if (networkInfo.NF_stats.chart1)\n                chart1 = networkInfo.NF_stats.chart1;\n            if (networkInfo.NF_stats.chart2)\n                chart2 = networkInfo.NF_stats.chart2;\n            if (networkInfo.NF_stats.chart3)\n                chart3 = networkInfo.NF_stats.chart3;\n        }\n\n        if (chart1.data) {\n            chart1.data = chart1.data.map((eachPoint) => {\n\n                return {\n                    name: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n                    value: eachPoint[Object.keys(eachPoint)[0]]\n                };\n            });\n            this.setState({ chart1 });\n        }\n\n        if (chart2.data) {\n            chart2.data = chart2.data.map((eachPoint) => {\n\n                return {\n                    name: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n                    value: eachPoint[Object.keys(eachPoint)[0]]\n                };\n            });\n            this.setState({ chart2 });\n        }\n\n        if (chart3.data) {\n            chart3.dataTx = [];\n            chart3.dataRx = [];\n            chart3.data.map((eachPoint) => {\n\n                if (Array.isArray(eachPoint[Object.keys(eachPoint)[0]])) {\n                    chart3.dataTx.push({\n                        category: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n                        value: eachPoint[Object.keys(eachPoint)[0]][0]\n                    });\n\n                    chart3.dataRx.push({\n                        category: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n                        value: eachPoint[Object.keys(eachPoint)[0]][1]\n                    });\n                } else {\n                    chart3.dataTx.push({\n                        name: moment(Object.keys(eachPoint)[0]).format('h:mm:ss'),\n                        value: eachPoint[Object.keys(eachPoint)[0]]\n                    });\n                    chart3.dataRx = null;\n                }\n\n\n            });\n            this.setState({ chart3 });\n            console.log(chart3);\n        }\n\n    }\n\n    toggleHandOver = () => {\n        if (!this.state.handoverStatus) {\n            this.setState({ ueList: [], handOverError: '', selectedHandoverElement: null });\n            this.getUEList();\n        }\n\n        this.setState({ handoverStatus: !this.state.handoverStatus });\n    }\n\n    togglePathSwitch = () => {\n        if (!this.state.pathSwitchStatus) {\n            this.setState({ pathSwitch: [], pathSwitchError: '', selectedPathSwitchElement: null });\n            this.getPathSwitch();\n        }\n\n        this.setState({ pathSwitchStatus: !this.state.pathSwitchStatus });\n    }\n\n    handleHandoverChange = (value) => {\n        this.setState({ selectedHandoverElement: value });\n    }\n\n    handlePathSwitchChange = (value) => {\n        this.setState({ selectedPathSwitchElement: value });\n    }\n\n    getUEList = () => {\n\n        var thisView = this;\n        if (this.ueListToken)\n            this.ueListToken.cancel();\n        this.ueListToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getUEList(this.ueListToken.token, this.props.match.params.id)])\n            .then(function (res) {\n                if (res[0]) {\n\n\n                    let ueList = (res[0][\"data\"] && res[0][\"data\"][\"UElist\"]) ? res[0][\"data\"][\"UElist\"] : [];\n                    if (ueList && ueList.length > 0 && !ueList[0][\"- ue-id\"]) {\n                        ueList = [];\n                    }\n\n                    thisView.setState({ ueList: ueList });\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n    submitHandOver = () => {\n\n\n        if (!this.state.selectedHandoverElement) {\n            this.setState({ handOverError: 'Please Select UE' });\n            return;\n        } else {\n            this.setState({ handOverError: '' });\n        }\n\n        var thisView = this;\n        if (this.prepareHandoverToken)\n            this.prepareHandoverToken.cancel();\n        this.prepareHandoverToken = axios.CancelToken.source();\n\n        let data = {\n            containerId: this.props.match.params.id,\n            ueId: this.state.selectedHandoverElement.trim()\n        }\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.prepareHandOver(this.prepareHandoverToken.token, data)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ callUnderProgress: false });\n                    thisView.toggleHandOver();\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n    getPathSwitch = () => {\n\n        var thisView = this;\n        if (this.pathSwitchToken)\n            this.pathSwitchToken.cancel();\n        this.pathSwitchToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getPathSwitchList(this.pathSwitchToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n\n                    let pathSwitchData = (res[0][\"data\"] && res[0][\"data\"]) ? res[0][\"data\"] : [];\n\n                    pathSwitchData = pathSwitchData.map((eachSwitch) => {\n                        let temp = {};\n                        eachSwitch.map((eachField) => {\n                            if (Object.keys(eachField)[0] === \"handover_key\") {\n                                temp[\"key\"] = eachField[\"handover_key\"];\n                            } else if (Object.keys(eachField)[0] === \"ueid\") {\n                                temp[\"ueid\"] = eachField[\"ueid\"];\n                            } else if (Object.keys(eachField)[0] === \"source_gnb\") {\n                                temp[\"source\"] = eachField[\"source_gnb\"];\n                            }\n                        })\n                        return temp;\n                    })\n\n\n                    thisView.setState({ pathSwitch: pathSwitchData });\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n    submitPathSwitch = () => {\n\n\n        if (!this.state.selectedPathSwitchElement) {\n            this.setState({ pathSwitchError: 'Please Select' });\n            return;\n        }\n\n        var thisView = this;\n        if (this.submitPathSwitchToken)\n            this.submitPathSwitchToken.cancel();\n        this.submitPathSwitchToken = axios.CancelToken.source();\n\n        let data = {\n            containerId: this.props.match.params.id,\n            id: this.state.selectedPathSwitchElement\n        }\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.submitPathSwitch(this.submitPathSwitchToken.token, data)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ callUnderProgress: false });\n                    thisView.togglePathSwitch();\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n\n    render() {\n\n        const { lineData, networkElementInfo, handoverStatus, selectedHandoverElement,\n            pathSwitchStatus, selectedPathSwitchElement, callUnderProgress,\n            ueList, handOverError, pathSwitch, pathSwitchError,\n            chart1, chart2, chart3, firstCallDone } = this.state;\n\n        return (\n            <div className=\"five-g-monitor\">\n                <Grid container spacing={4}>\n                    <Grid item lg={4} md={6} xs={12} className=\"fgm-inner-grid individual-grid-five-g\">\n                        <Widget\n                            title={networkElementInfo.name_of_nf ? networkElementInfo.name_of_nf.toUpperCase() : \"-\"}\n                            upperTitle\n                            bodyclassName={''}\n                            className={'test'}\n                            disableWidgetMenu={true}\n                        >\n                            <div className=\"fgm-details-container\">\n                                <div className=\"fgmdc-stats\">\n                                    <div className=\"fgmds-each\">\n                                        <span>State</span>\n                                        <span>{networkElementInfo.State ? networkElementInfo.State : '-'}</span>\n                                    </div>\n                                    <div className=\"fgmds-each\">\n                                        <span>Health</span>\n                                        <span>{networkElementInfo.Health ? networkElementInfo.Health : '-'}</span>\n                                    </div>\n                                    <div className=\"fgmds-each\">\n                                        <span>DNN</span>\n                                        <span>{networkElementInfo.DNN ? networkElementInfo.DNN : '-'}</span>\n                                    </div>\n                                </div>\n                                <div className=\"fgmdc-sensor-active\">\n                                    <span>IP address:</span>\n                                    <span>{networkElementInfo.hasOwnProperty(\"Management_IP\") ? networkElementInfo.Management_IP : '-'}</span>\n                                </div>\n\n                                <div className=\"fgmdc-served\">\n                                    <span>Number of UEs served:</span>\n                                    <span>{networkElementInfo.hasOwnProperty(\"no_UEsserved\") ? networkElementInfo.no_UEsserved : '-'}</span>\n                                </div>\n                                <div className=\"fgmdc-handover-container\">\n                                    {\n                                        networkElementInfo[\"Handover-prepare_button\"] === \"True\" &&\n                                        <span onClick={this.toggleHandOver}>Handover Prepare</span>\n                                    }\n                                    {\n                                        networkElementInfo.Path_sw_req_button === \"True\" &&\n                                        <span onClick={this.togglePathSwitch}>Path Switch Request</span>\n                                    }\n                                </div>\n                            </div>\n                            {\n                                !firstCallDone &&\n                                <div className=\"each-widget-loading\">\n                                    <img src={loadingIcon} />\n                                </div>\n                            }\n                        </Widget>\n                    </Grid>\n                    <Grid item lg={8} md={6} xs={12} className=\"fgd-form individual-grid-five-g\">\n                        <Widget\n                            title=\"Statistics\"\n                            upperTitle\n                            bodyclassName={''}\n                            className={''}\n                            disableWidgetMenu={true}\n                        >\n                            <div className=\"fgm-stats-container\">\n                                <Grid container spacing={4}>\n                                    <Grid item md={4} xs={12} className=\"fgd-form\">\n                                        <div className=\"fgmsc-main\">\n                                            <span>{chart1 ? chart1.title : ''}</span>\n                                            <div className=\"fgscm-chart\">\n                                                <ResponsiveContainer width=\"100%\" height={250}>\n                                                    <LineChart\n                                                        width={500}\n                                                        height={250}\n                                                        data={(chart1 && chart1.data) ? chart1.data : []}\n                                                        margin={{\n                                                            top: 10,\n                                                            right: 30,\n                                                            left: 0,\n                                                            bottom: 40,\n                                                        }}\n                                                    >\n                                                        <CartesianGrid strokeDasharray=\"3 3\" />\n                                                        <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" interval={2} />\n                                                        <YAxis />\n                                                        <Tooltip />\n                                                        <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                                        <Brush\n                                                            stroke=\"#8784d8\"\n                                                            startIndex={0}\n                                                            endIndex={(chart1 && chart1.data) ? (chart1.data.length > 20 ? 19 : chart1.data.length - 1) : 0}\n                                                            height={20}\n                                                            fill='rgba(0, 0, 0, 0)'\n                                                            y={220}\n                                                        ><Area x={0} y={30} type=\"monotone\" dataKey=\"value\" stroke=\"#000\" fill=\"url(#splitColor)\" />\n                                                        </Brush>\n                                                    </LineChart>\n                                                </ResponsiveContainer>\n                                            </div>\n                                        </div>\n                                    </Grid>\n                                    <Grid item md={4} xs={12} className=\"fgd-form\">\n                                        <div className=\"fgmsc-main\">\n                                            <span>{chart2 ? chart2.title : ''}</span>\n                                            <div className=\"fgscm-chart\">\n                                                <ResponsiveContainer width=\"100%\" height={250}>\n                                                    <LineChart\n                                                        width={500}\n                                                        height={250}\n                                                        data={(chart2 && chart2.data) ? chart2.data : []}\n                                                        margin={{\n                                                            top: 10,\n                                                            right: 30,\n                                                            left: 0,\n                                                            bottom: 40,\n                                                        }}\n                                                    >\n                                                        <CartesianGrid strokeDasharray=\"3 3\" />\n                                                        <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" interval={2} />\n                                                        <YAxis />\n                                                        <Tooltip />\n                                                        <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                                        <Brush\n                                                            stroke=\"#8784d8\"\n                                                            startIndex={0}\n                                                            endIndex={(chart1 && chart1.data) ? (chart1.data.length > 20 ? 19 : chart1.data.length - 1) : 0}\n                                                            height={20}\n                                                            fill='rgba(0, 0, 0, 0)'\n                                                            y={220}\n                                                        ><Area type=\"monotone\" dataKey=\"value\" stroke=\"#000\" fill=\"url(#splitColor)\" />\n                                                        </Brush>\n                                                    </LineChart>\n                                                </ResponsiveContainer>\n                                            </div>\n                                        </div>\n                                    </Grid>\n                                    <Grid item md={4} xs={12} className=\"fgd-form\">\n                                        <div className=\"fgmsc-main\">\n                                            <span>{chart3 ? chart3.title : ''}</span>\n                                            <div className=\"fgscm-chart\">\n                                                <ResponsiveContainer width=\"100%\" height={250}>\n                                                    {\n                                                        (chart3 && chart3.dataRx) ?\n\n                                                            <LineChart\n                                                                width={500}\n                                                                height={250}\n                                                                margin={{\n                                                                    top: 10,\n                                                                    right: 30,\n                                                                    left: 0,\n                                                                    bottom: 40,\n                                                                }}\n                                                            >\n                                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                                <XAxis dataKey=\"category\" type=\"category\" allowDuplicatedCategory={false} angle={-45} textAnchor=\"end\" />\n                                                                <YAxis dataKey=\"value\" />\n                                                                <Tooltip />\n                                                                <Line dataKey=\"value\" data={(chart3 && chart3.dataTx) ? chart3.dataTx : []} name={\"TX\"} stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                                                <Line dataKey=\"value\" data={(chart3 && chart3.dataRx) ? chart3.dataRx : []} name={\"RX\"} stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                                                <Brush\n                                                                    stroke=\"green\"\n                                                                    startIndex={0}\n                                                                    endIndex={20}\n                                                                    height={20}\n                                                                    fill='rgba(0, 0, 0, 0)'\n                                                                    y={220}\n                                                                ><Area data={(chart3 && chart3.dataTx) ? chart3.dataTx : []} stroke=\"#000\" fill=\"url(#splitColor)\" />\n                                                                </Brush>\n                                                            </LineChart> :\n                                                            <LineChart\n                                                                width={500}\n                                                                height={250}\n                                                                data={(chart3 && chart3.dataTx) ? chart3.dataTx : []}\n                                                                margin={{\n                                                                    top: 10,\n                                                                    right: 30,\n                                                                    left: 0,\n                                                                    bottom: 40,\n                                                                }}\n                                                            >\n                                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                                <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" interval={2} />\n                                                                <YAxis />\n                                                                <Tooltip />\n                                                                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                                                <Brush\n                                                                    stroke=\"#8784d8\"\n                                                                    startIndex={0}\n                                                                    endIndex={(chart3 && chart3.dataTx) ? (chart3.dataTx.length > 20 ? 19 : chart3.dataTx.length - 1) : 0}\n                                                                    height={20}\n                                                                    fill='rgba(0, 0, 0, 0)'\n                                                                    y={220}\n                                                                ><Area x={0} y={30} type=\"monotone\" dataKey=\"value\" stroke=\"#000\" fill=\"url(#splitColor)\" />\n                                                                </Brush>\n                                                            </LineChart>\n                                                    }\n\n                                                </ResponsiveContainer>\n                                            </div>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                            {\n                                !firstCallDone &&\n                                <div className=\"each-widget-loading\">\n                                    <img src={loadingIcon} />\n                                </div>\n                            }\n                        </Widget>\n                    </Grid>\n                    <Grid item xs={12} className=\"fgd-form individual-grid-five-g\">\n                        <Widget\n                            title=\"\"\n                            upperTitle\n                            bodyclassName={''}\n                            className={''}\n                            disableWidgetMenu={true}\n                        >\n                            <Tabs className=\"ne-tabs\">\n                                <TabList>\n                                    <Tab>Packets</Tab>\n                                    <Tab>Logs</Tab>\n                                    <Tab>Console</Tab>\n                                </TabList>\n\n                                <TabPanel>\n                                    <div className=\"fdg-packets-container\">\n                                        <div className=\"fdgpc-head\">\n                                            <div className=\"fdgpce-row\">Number</div>\n                                            <div className=\"fdgpce-row\">Time</div>\n                                            <div className=\"fdgpce-row\">Source</div>\n                                            <div className=\"fdgpce-row\">Destination</div>\n                                            <div className=\"fdgpce-row\">Protocol</div>\n                                            <div className=\"fdgpce-row\">Details</div>\n                                        </div>\n                                        {\n                                            networkElementInfo && networkElementInfo.NF_packets && networkElementInfo.NF_packets.length > 0 &&\n                                            networkElementInfo.NF_packets.map((eachPacket, index) => {\n                                                return (\n                                                    <div key={index} className=\"fdgpc-each\">\n                                                        <div className=\"fdgpce-row\">{index + 1}</div>\n                                                        <div className=\"fdgpce-row\">\n                                                            {\n                                                                eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"frame.time\"] && eachPacket._source.layers[\"frame.time\"][0] &&\n                                                                moment(eachPacket._source.layers[\"frame.time\"][0]).format('MM-DD-YYYY hh:mm:ss')\n                                                            }\n                                                        </div>\n                                                        <div className=\"fdgpce-row\">\n                                                            {\n                                                                eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"ip.src\"] &&\n                                                                eachPacket._source.layers[\"ip.src\"][0]\n                                                            }\n                                                        </div>\n                                                        <div className=\"fdgpce-row\">\n                                                            {\n                                                                eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"ip.src\"] &&\n                                                                eachPacket._source.layers[\"ip.dst\"][0]\n                                                            }\n                                                        </div>\n                                                        <div className=\"fdgpce-row\">\n                                                            {\n                                                                eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"_ws.col.Protocol\"] &&\n                                                                eachPacket._source.layers[\"_ws.col.Protocol\"][0]\n                                                            }\n                                                        </div>\n                                                        <div className=\"fdgpce-row\">\n                                                            {\n                                                                eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"_ws.col.Info\"] &&\n                                                                eachPacket._source.layers[\"_ws.col.Info\"][0]\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                )\n                                            })\n                                        }\n\n                                    </div>\n                                </TabPanel>\n                                <TabPanel>\n                                    <div className=\"fdg-logs-container\">\n                                        {\n                                            networkElementInfo && networkElementInfo.NF_Logs && networkElementInfo.NF_Logs.length > 0 &&\n                                            networkElementInfo.NF_Logs.map((eachLog, index) => {\n                                                return (\n                                                    <span key={index}>{eachLog}</span>\n                                                )\n                                            })\n                                        }\n                                    </div>\n                                </TabPanel>\n                                <TabPanel>\n                                    <h2> Terminal </h2>\n                                </TabPanel>\n                            </Tabs>\n                            {\n                                !firstCallDone &&\n                                <div className=\"each-widget-loading\">\n                                    <img src={loadingIcon} />\n                                </div>\n                            }\n                        </Widget>\n                    </Grid>\n                </Grid>\n\n                <Dialog open={handoverStatus} id=\"handover-prepare\">\n                    <DialogTitle>\n                        Handover Prepare\n                        <Icons.Close fontSize={\"small\"} className=\"hp-close-icon\" onClick={this.toggleHandOver} />\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid className=\"hp-container\" container spacing={2}>\n                            {\n                                handOverError && handOverError !== '' &&\n                                <span className=\"hpc-error\">{handOverError}</span>\n                            }\n                            <Grid item xs={12} className=\"fgd-form\">\n                                <div className=\"hpc-content\">\n                                    {\n                                        ueList && ueList.length > 0 &&\n                                        <div className=\"hpc-table-each\">\n                                            <div className=\"hpct-row\"></div>\n                                            <div className=\"hpct-row\">UEID</div>\n                                            <div className=\"hpct-row\">Status</div>\n                                        </div>\n                                    }\n\n                                    {\n                                        !callUnderProgress &&\n                                        <>\n                                            {\n                                                ueList && ueList.length > 0 ?\n                                                    ueList.map((eachUe, index) => {\n                                                        return (\n                                                            <div key={index} className=\"hpc-table-each\" onClick={() => { this.handleHandoverChange(eachUe[\"- ue-id\"]) }}>\n                                                                <div className=\"hpct-row\">\n                                                                    <MyRadio\n                                                                        checked={selectedHandoverElement === eachUe[\"- ue-id\"]}\n                                                                        onChange={() => { this.handleHandoverChange(eachUe[\"- ue-id\"]) }}\n                                                                        value={eachUe[\"- ue-id\"]}\n                                                                        name=\"radio-button-demo\"\n                                                                    />\n                                                                </div>\n                                                                <div className=\"hpct-row\">{eachUe[\"- ue-id\"]}</div>\n                                                                <div className=\"hpct-row\">Connected</div>\n                                                            </div>\n                                                        )\n                                                    }) : <span className=\"no_ue\">No UE to handover</span>\n                                            }\n                                        </>\n                                    }\n\n\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <DialogActions>\n                        {\n                            callUnderProgress ?\n                                <img src={loadingIcon} className=\"call_under_progress_icon\" /> : (\n                                    <>\n                                        {\n                                            ueList && ueList.length > 0 &&\n                                            <Button onClick={this.submitHandOver} color=\"primary\">\n                                                Submit\n                                            </Button>\n                                        }\n                                    </>\n                                )\n                        }\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog open={pathSwitchStatus} id=\"path-switch\">\n                    <DialogTitle>\n                        Path Switch Request\n                        <Icons.Close fontSize={\"small\"} className=\"hp-close-icon\" onClick={this.togglePathSwitch} />\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid className=\"hp-container\" container spacing={2}>\n                            {\n                                pathSwitchError && pathSwitchError !== '' &&\n                                <span className=\"hpc-error\">{pathSwitchError}</span>\n                            }\n                            <Grid item xs={12} className=\"fgd-form\">\n                                <div className=\"hpc-content\">\n                                    {\n                                        pathSwitch && pathSwitch.length > 0 &&\n                                        <div className=\"hpc-table-each\">\n                                            <div className=\"hpct-row\"></div>\n                                            <div className=\"hpct-row\">UEID</div>\n                                            <div className=\"hpct-row\">Source gNB ID</div>\n                                        </div>\n                                    }\n                                    {\n                                        !callUnderProgress &&\n                                        <>\n                                            {\n                                                pathSwitch && pathSwitch.length > 0 ?\n                                                    pathSwitch.map((eachUe, index) => {\n                                                        return (\n                                                            <div key={index} className=\"hpc-table-each\" onClick={() => { this.handlePathSwitchChange(eachUe[\"key\"]) }}>\n                                                                <div className=\"hpct-row\">\n                                                                    <MyRadio\n                                                                        checked={selectedPathSwitchElement === eachUe[\"key\"]}\n                                                                        onChange={() => { this.handlePathSwitchChange(eachUe[\"key\"]) }}\n                                                                        value={eachUe[\"key\"]}\n                                                                        name=\"radio-button-demo\"\n                                                                    />\n                                                                </div>\n                                                                <div className=\"hpct-row\">{eachUe[\"ueid\"]}</div>\n                                                                <div className=\"hpct-row\">{eachUe[\"source\"]}</div>\n                                                            </div>\n                                                        )\n                                                    }) : <span className=\"no_ue\">No UE to switch</span>\n                                            }\n                                        </>\n                                    }\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <DialogActions>\n                        {\n                            callUnderProgress ?\n                                <img src={loadingIcon} className=\"call_under_progress_icon\" /> :\n                                <>\n                                    {\n                                        pathSwitch && pathSwitch.length > 0 &&\n                                        <Button onClick={this.submitPathSwitch} color=\"primary\">\n                                            Submit\n                                        </Button>\n                                    }\n                                </>\n\n                        }\n                    </DialogActions>\n                </Dialog>\n            </div >\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    config: state.config\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonitorNetworkElement);","/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetwork/monitorNetwork.js",["555","556","557","558","559","560","561","562","563","564"],"/Users/azminds/Documents/five-g/frontend/src/pages/manageNetworkNodes/manageNetworkNodes.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/manageNetwork/manageNetwork.js",["565","566","567","568","569","570","571"],"import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport './manageNetwork.scss';\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport {\n    Grid,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    FormControl,\n    Select,\n    MenuItem\n} from \"@material-ui/core\";\nimport * as Icons from \"@material-ui/icons\";\nimport { Timeline } from 'rsuite';\n\n\nimport Widget from \"../../components/Widget\";\n\n// import ArrowBlue from '../../images/home/arrow_blue.svg';\nimport ArrowBlue from '../../images/new_flow_images/arrow.svg';\nimport ArrowLightPink from '../../images/new_flow_images/arrow_light_pink.svg';\n\nimport loadingIcon from '../../images/home/loading.gif';\nimport radialBlueIcon from '../../images/new_flow_images/radial_blue.svg';\n\nimport apiService from '../../services/apiService';\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nclass MonitorNetwork extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addSubsciberFormStatus: false,\n            subscribersListStatus: false,\n            ns_id: '', ns_supi: '', ns_auth_method: '', ns_k: '', ns_operation_code_type: '', ns_operator_code_value: '',\n            addSubscriberError: '',\n            subscribersList: [],\n            callUnderProgress: false,\n            deleteingUeid: '',\n            modifyUeid: '',\n            operationType: 'add', editSubscriberData: null,\n            suggestedActionButton: null,\n            chartData: {\n                chartHistory: [\n                    { chartLabel: \"Uplink\", value: \"90.25 GB\", color: \"#4FAD58\" },\n                    { chartLabel: \"Downlink\", value: \"270.75 GB\", color: \"#A868A6\" }\n                ],\n                // labels: ['Downlink', 'Uplink'],\n                datasets: [\n                    {\n                        label: '# of Votes',\n                        data: [90.25, 270.75],\n                        backgroundColor: [\n                            '#4FAD58',\n                            '#A868A6'\n                        ],\n                        borderColor: [\n                            '#4FAD58',\n                            '#A868A6'\n                        ],\n                        borderWidth: 1\n                    },\n                ],\n\n            }\n        }\n\n        this.getSubscribersToken = null;\n        this.addSubsciberToken = null;\n        this.deleteSubsciberToken = null;\n        this.modifySubscriberToken = null;\n        this.suggestedActionTOken = null;\n        this.suggestedActionSubmitTOken = null;\n\n        this.timeout = null;\n\n        this.defaultValues = {\n            ns_id: 'ue1',\n            ns_supi: 'imsi-208930000000003',\n            ns_auth_method: '5G-AKA',\n            ns_k: '8baf473f2f8fd09487cccbd7097c6862',\n            ns_operation_code_type: 'opc',\n            ns_operator_code_value: '8e27b6af0e692e750f32667a3b14605d'\n\n        }\n\n    }\n\n    componentWillMount() {\n        this.setDefaultValues();\n        this.suggestedActionUeCheck();\n        this.timeout = setInterval(this.intiateCall, 5000);\n    }\n\n    intiateCall = () => {\n        if (!this.state.callUnderProgress) {\n            this.suggestedActionUeCheck();\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.suggestedActionTOken)\n            this.suggestedActionTOken.cancel();\n        clearInterval(this.timeout);\n    }\n\n    setDefaultValues = () => {\n        var thisView = this;\n        Object.keys(this.defaultValues).map((eachKey, index) => {\n            this.setState({ [eachKey]: thisView.defaultValues[eachKey] });\n        });\n        if (this.state.operationType === \"edit\") {\n            this.setState({ ns_supi: this.state.editSubscriberData.ueId });\n        }\n    }\n\n    toggleSubscriber = (operationType) => {\n        this.setState({ addSubsciberFormStatus: !this.state.addSubsciberFormStatus, operationType: operationType ? operationType : \"edit\" });\n        this.setDefaultValues();\n        this.setState({ addSubscriberError: '' });\n    }\n\n    toggleSubscribersList = () => {\n\n        if (!this.state.subscribersListStatus) {\n            this.getSubscribersList();\n        }\n        this.setState({ subscribersListStatus: !this.state.subscribersListStatus });\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleChangeOperationCode = (event) => {\n        this.setState({ ns_operation_code_type: event.target.value })\n    }\n\n    addNewSubscriber = () => {\n\n        const { ns_id, ns_supi, ns_auth_method, ns_k, ns_operation_code_type, ns_operator_code_value } = this.state;\n\n        let data = {\n            id: ns_id,\n            supi: ns_supi,\n            auth_method: ns_auth_method,\n            k: ns_k,\n            operation_code_type: ns_operation_code_type,\n            operator_code_value: ns_operator_code_value\n        }\n\n        if (data.id === '' || data.supi === '' || data.auth_method === '' || data.auth_method === ''\n            || data.k === '' || data.operation_code_type === '' || data.operator_code_value === '') {\n            this.setState({ addSubscriberError: 'Please fill all details' });\n        } else {\n            this.setState({ addSubscriberError: '' });\n\n            if (this.state.operationType === 'add') {\n                this.addSubscriber(data);\n            } else {\n                console.log(data);\n                this.modifySubscriber(data);\n            }\n\n        }\n    }\n\n    addSubscriber = (data) => {\n\n        var thisView = this;\n        if (this.addSubsciberToken)\n            this.addSubsciberToken.cancel();\n        this.addSubsciberToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.addSubscriber(this.addSubsciberToken.token, data)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ addSubscriberError: '' });\n                    thisView.setDefaultValues();\n                    thisView.toggleSubscriber();\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred add subscriber element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n    deleteSubscriber = (subscriberData) => {\n\n        var thisView = this;\n        if (this.deleteSubsciberToken)\n            this.deleteSubsciberToken.cancel();\n        this.deleteSubsciberToken = axios.CancelToken.source();\n\n        this.setState({ deleteingUeid: subscriberData.ueId });\n        axios.all([apiService.deleteSubscriber(this.deleteSubsciberToken.token, subscriberData.ueId)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ deleteingUeid: '' });\n                    thisView.getSubscribersList();\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred add subscriber element service');\n            });\n\n    }\n\n    enableModifySubscriber = (subscriberData) => {\n        this.setState({ operationType: \"edit\", editSubscriberData: subscriberData }, () => {\n            this.toggleSubscriber();\n        });\n        this.toggleSubscribersList();\n    }\n\n    modifySubscriber = (subscriberData) => {\n\n        var thisView = this;\n        if (this.modifySubscriberToken)\n            this.modifySubscriberToken.cancel();\n        this.modifySubscriberToken = axios.CancelToken.source();\n\n        console.log(subscriberData);\n        let data = {\n            ueId: this.state.editSubscriberData.ueId,\n            newUeId: subscriberData.supi\n        }\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.modifySubscriber(this.modifySubscriberToken.token, data)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ callUnderProgress: false })\n                    thisView.toggleSubscriber();\n                    thisView.toggleSubscribersList();\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred add subscriber element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n    getSubscribersList = () => {\n\n        var thisView = this;\n        if (this.getSubscribersToken)\n            this.getSubscribersToken.cancel();\n        this.getSubscribersToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getSubscribers(this.getSubscribersToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n                    if (res[0][\"status\"] && res[0][\"data\"]) {\n                        thisView.setState({ subscribersList: res[0][\"data\"] });\n                    }\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred add subscriber element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n\n    }\n\n    suggestedActionUeCheck = () => {\n        var thisView = this;\n        if (this.suggestedActionTOken)\n            this.suggestedActionTOken.cancel();\n        this.suggestedActionTOken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.suggestedActionUE(this.suggestedActionTOken.token)])\n            .then(function (res) {\n                if (res[0]) {\n                    if (res[0][\"data\"]) {\n                        thisView.setState({ suggestedActionButton: res[0][\"data\"] });\n                    } else {\n                        thisView.setState({ suggestedActionButton: null });\n                    }\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred add subscriber element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n    }\n\n    suggestedActionUeSubmit = () => {\n        var thisView = this;\n        if (this.suggestedActionSubmitTOken)\n            this.suggestedActionSubmitTOken.cancel();\n        this.suggestedActionSubmitTOken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.suggestedActionUESubmit(this.suggestedActionSubmitTOken.token)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred add subscriber element service');\n                thisView.setState({ callUnderProgress: false });\n            });\n    }\n\n\n    render() {\n\n        const { addSubsciberFormStatus, subscribersListStatus,\n            ns_id, ns_supi, ns_auth_method, ns_k, ns_operation_code_type, ns_operator_code_value,\n            addSubscriberError, subscribersList, callUnderProgress, deleteingUeid, operationType,\n            editSubscriberData, suggestedActionButton, chartData } = this.state;\n\n        const { match, location, history } = this.props;\n        const { deploy } = this.props\n        console.log('location', location)\n        return (\n            <div className=\"five-g-manage-container\">\n                <Grid container spacing={4}>\n                    <Grid item lg={8} md={8} xs={12} className=\"fgm-inner-grid\">\n                        <Grid container spacing={4}>\n                            <Grid item md={6} xs={12} className=\"fgm-inner-grid\">\n                                <Widget\n                                    title=\"\"\n                                    upperTitle\n                                    bodyclassName={''}\n                                    className=\"test\"\n                                    disableWidgetMenu={true}\n                                    fontBold={true}\n                                >\n                                    <div className=\"manage-network-title\">\n                                        Manage Core\n                                    </div>\n                                    <div className=\"core-data\">\n                                        <Grid container className=\"cd-main\" justifyContent='flex-start' spacing={1}>\n                                            <Grid item xs={12} sm={4} className=\"cd-each\">\n                                                <div className=\"c100 p33 center cd-main-bar-block\">\n                                                    <span>33%</span>\n                                                    <div className=\"slice\">\n                                                        <div className=\"bar\">\n                                                        </div>\n                                                        <div className=\"fill\">\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <span>Manage Usage</span>\n                                            </Grid>\n                                            <Grid item xs={12} sm={4} className=\"cd-each\">\n                                                <div className=\"c100 p33 center cd-main-bar-block\">\n                                                    <span>33%</span>\n                                                    <div className=\"slice\">\n                                                        <div className=\"bar\">\n                                                        </div>\n                                                        <div className=\"fill\">\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <span>CPU Usage</span>\n                                            </Grid>\n                                            <Grid item xs={12} sm={4} className=\"cd-each\">\n                                                <div className=\"c100 p33 center cd-main-bar-block\">\n                                                    <span>33%</span>\n                                                    <div className=\"slice\">\n                                                        <div className=\"bar\">\n                                                        </div>\n                                                        <div className=\"fill\">\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <span>Edge Computer Usage</span>\n                                            </Grid>\n                                        </Grid>\n                                        <div className=\"manage-options\">\n                                            <img src={ArrowBlue} alt=\"arrow\" />\n                                            {/* onClick={() => { this.toggleSubscriber(\"add\") }} */}\n                                            <span>Add Extra Network Slice</span>\n                                        </div>\n                                        <div className=\"manage-options\">\n                                            <img src={ArrowBlue} alt=\"arrow\" />\n                                            <NavLink to='/device' style={{ textDecoration: 'none', color: '#366672' }}>\n                                                <span>Onboard Devices</span>\n                                            </NavLink>\n                                        </div>\n                                        <div className=\"manage-options\" >\n                                            {/* onClick={this.toggleSubscribersList} */}\n                                            <img src={ArrowBlue} alt=\"arrow\" />\n                                            <span>Modify/Delete Devices</span>\n                                        </div>\n                                    </div>\n\n                                </Widget>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <Widget\n                                    title=\"\"\n                                    upperTitle\n                                    bodyclassName={''}\n                                    className={''}\n                                    disableWidgetMenu={true}\n                                    fontBold={true}\n                                >\n                                    <div className=\"manage-network-title\">\n                                        Manage Access Points\n                                    </div>\n\n                                    <div className=\"ran-stats\">\n                                        <div className=\"rans-each\">\n                                            <span>200</span>\n                                            <span>Access Points</span>\n                                        </div>\n                                        <div className=\"rans-each\">\n                                            <span>1500</span>\n                                            <span>Devices</span>\n                                        </div>\n\n                                    </div>\n                                    <NavLink to={this.props.match.path + \"/\"} className=\"manage-access-points-options\">\n                                        <img src={ArrowLightPink} alt=\"arrow\" />\n                                        <span>Onboard APs</span>\n                                    </NavLink>\n                                    <NavLink to={this.props.match.path + \"/\"} className=\"manage-access-points-options\">\n                                        <img src={ArrowLightPink} alt=\"arrow\" />\n                                        <span>Monitor/configure APs</span>\n                                    </NavLink>\n                                    <NavLink to={this.props.match.path + \"/\"} className=\"manage-access-points-options\">\n                                        <img src={ArrowLightPink} alt=\"arrow\" />\n                                        <span>Coverage/QoS map</span>\n                                    </NavLink>\n                                    <NavLink to={this.props.match.path + \"/\"} className=\"manage-access-points-options\">\n                                        <img src={ArrowLightPink} alt=\"arrow\" />\n                                        <span>Channel usage map</span>\n                                    </NavLink>\n\n                                </Widget>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <Widget\n                                    // title=\"Manage RAN\"\n                                    upperTitle\n                                    bodyclassName={''}\n                                    className={''}\n                                    disableWidgetMenu={true}\n                                    fontBold={true}\n                                >\n                                    <div className=\"manage-network-title\">\n                                        Manage Applications\n                                    </div>\n                                    <br />\n                                    {deploy.deployEndPoints && deploy.deployEndPoints.length > 0 && deploy.deployEndPoints[0] && deploy.deployEndPoints[0][\"name\"] &&\n\n                                        <div className=\"choose-an-option-below-title-box\">{deploy.deployEndPoints[0][\"name\"]} Application has been deployed succesfully. </div>\n\n                                    }\n                                    <br />\n\n                                    <div className=\"manage-options-sub-block\">\n                                        <div className=\"map-sub-block-title\">Suggested Actions</div>\n                                        <NavLink to={this.props.match.path + \"/deployment\"} className=\"manage-options app-depolyment-active\">\n                                            <img src={ArrowBlue} alt=\"arrow\" />\n                                            <span>Deploy an Application</span>\n                                        </NavLink>\n                                        <NavLink to={this.props.match.path + \"/\"} className=\"manage-options app-depolyment-restore\">\n                                            <img src={ArrowBlue} alt=\"arrow\" />\n                                            <span> Restart Robot Navigation Application</span>\n                                        </NavLink>\n                                        {deploy.deployEndPoints && deploy.deployEndPoints.length > 0 && deploy.deployEndPoints[0] && deploy.deployEndPoints[0][\"name\"] &&\n                                            <NavLink to={this.props.match.path + '/deployment'} className=\"manage-options app-depolyment-restore\">\n                                                <img src={ArrowBlue} alt=\"arrow\" />\n                                                <span>{deploy.deployEndPoints[0][\"name\"]}</span>\n                                            </NavLink>\n                                        }\n\n                                    </div>\n\n                                </Widget>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <Widget\n                                    // title=\"Suggested Actions\"\n                                    upperTitle\n                                    bodyclassName={''}\n                                    className={''}\n                                    disableWidgetMenu={true}\n                                    fontBold={true}\n                                >\n                                    <div className=\"manage-network-title\">\n                                        Traffic\n                                    </div>\n\n                                    <Grid container spacing={4}>\n                                        <Grid item lg={7} md={7} xs={12} className=\"fgm-inner-grid\">\n                                            <div className=\"traffic-chart-history\">\n                                                {\n                                                    chartData && chartData['chartHistory'].map((eachChartHistory, index) => {\n\n                                                        return (\n                                                            <div className=\"traffic-chart-history-box\" key={index}>\n                                                                <div className=\"traffic-chart-history-value\" style={{ color: eachChartHistory.color }}>{eachChartHistory.value}</div>\n                                                                <div className=\"traffic-chart-history-label\" style={{ color: eachChartHistory.color }}>{eachChartHistory.chartLabel}</div>\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                            </div>\n                                        </Grid>\n                                        <Grid item lg={5} md={5} xs={12} className=\"fgm-inner-grid traffic-chart-section\">\n                                            <div className=\"traffic-chart-block\">\n                                                <Doughnut data={chartData} />\n                                            </div>\n                                        </Grid>\n                                    </Grid>\n\n                                    <br />\n                                    <br />\n\n                                    <div className=\"manage-options-sub-block\">\n                                        <div className=\"map-sub-block-title\">Suggested Actions</div>\n                                        <div className=\"manage-access-points-options\">\n                                            <img src={ArrowLightPink} alt=\"arrow\" />\n                                            <span>Add a new Access point at warehouse C</span>\n                                        </div>\n                                        <div className=\"manage-access-points-options\">\n                                            <img src={ArrowLightPink} alt=\"arrow\" />\n                                            <span>Malfunction in AP17, please update to latest firmware</span>\n                                        </div>\n                                    </div>\n\n                                </Widget>\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n                    <Grid item lg={4} md={4} xs={12} className=\"fgm-inner-grid\">\n                        <Grid item xs={12} className=\"fgd-form\">\n                            <div className=\"manage-network-title\">\n                                Management Timeline\n                            </div>\n                            <Timeline align={\"left\"}>\n                                <Timeline.Item>\n                                    <img src={radialBlueIcon} alt=\"radialBlueIcon\" className=\"radialBlueIcon\" />\n                                    <p>21 Mar 2022 11:38 hrs</p>\n                                    <p>Request additional AMF node for slice 2.</p>\n                                </Timeline.Item>\n                                <Timeline.Item>\n                                    <img src={radialBlueIcon} alt=\"radialBlueIcon\" className=\"radialBlueIcon\" />\n                                    <p>20 Mar 2022 12:30 hrs</p>\n                                    <p>Added a RAN node gNB at CA location.</p>\n                                    <p>Nagamanoj K.</p>\n                                </Timeline.Item>\n                                <Timeline.Item>\n                                    <img src={radialBlueIcon} alt=\"radialBlueIcon\" className=\"radialBlueIcon\" />\n                                    <p>19 Mar 2022 09:30 hrs</p>\n                                    <p>Major system upgrade installed.</p>\n                                </Timeline.Item>\n                                <Timeline.Item>\n                                    <img src={radialBlueIcon} alt=\"radialBlueIcon\" className=\"radialBlueIcon\" />\n                                    <p>17 Mar 2022 20:30 hrs</p>\n                                    <p>New AMF added to slice 3.</p>\n                                    <p>Pradgnya K.</p>\n                                </Timeline.Item>\n                                <Timeline.Item>\n                                    <img src={radialBlueIcon} alt=\"radialBlueIcon\" className=\"radialBlueIcon\" />\n                                    <p>14 Mar 2022 22:33 hrs</p>\n                                    <p>Additional capacity for SMF approved.</p>\n                                    <p>Sandeep M.</p>\n                                </Timeline.Item>\n                                <Timeline.Item>\n                                    <img src={radialBlueIcon} alt=\"radialBlueIcon\" className=\"radialBlueIcon\" />\n                                    <p>13 Mar 2022 06:20 hrs</p>\n                                    <p>New software upgrades available.</p>\n                                </Timeline.Item>\n                            </Timeline>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n\n                <Dialog open={addSubsciberFormStatus} id=\"add-subscriber-form\">\n                    <DialogTitle>\n                        {operationType === 'add' ? \"New Subscriber\" : `Edit Subscriber - ${editSubscriberData ? editSubscriberData.ueId : ''}`}\n                        <Icons.Close fontSize={\"small\"} className=\"adf-close-icon\" onClick={this.toggleSubscriber} />\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid className=\"asf-container\" container spacing={2}>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <div className=\"asf-each\">\n                                    <span>ID</span>\n                                    <input type=\"text\" spellCheck=\"false\" name=\"ns_id\"\n                                        value={ns_id} onChange={this.handleChange} onKeyDown={this.handleChange} />\n                                </div>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <div className=\"asf-each\">\n                                    <span>SUPI</span>\n                                    <input type=\"text\" name=\"ns_supi\" spellCheck=\"false\"\n                                        value={ns_supi} onChange={this.handleChange} onKeyDown={this.handleChange} />\n                                </div>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <div className=\"asf-each\">\n                                    <span>Authentication Method</span>\n                                    <input type=\"text\" name=\"ns_auth_method\" spellCheck=\"false\"\n                                        value={ns_auth_method} onChange={this.handleChange} onKeyDown={this.handleChange} />\n                                </div>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <div className=\"asf-each\">\n                                    <span>k</span>\n                                    <input type=\"text\" name=\"ns_k\" spellCheck=\"false\"\n                                        value={ns_k} onChange={this.handleChange} onKeyDown={this.handleChange} />\n                                </div>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <div className=\"asf-each ns_operation_codes\">\n                                    <span>Operator Code Type</span>\n                                    <FormControl className={\"\"}>\n                                        <Select\n                                            value={ns_operation_code_type}\n                                            onChange={this.handleChangeOperationCode}\n                                            displayEmpty\n                                            className={\"\"}\n                                            inputProps={{ 'aria-label': 'Without label' }}\n                                        >\n                                            <MenuItem value=\"\">Select Operation Code Type</MenuItem>\n                                            <MenuItem value={\"op\"}>OP</MenuItem>\n                                            <MenuItem value={\"opc\"}>OPC</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </div>\n                            </Grid>\n                            <Grid item md={6} xs={12} className=\"fgd-form\">\n                                <div className=\"asf-each\">\n                                    <span>Operator Code Value</span>\n                                    <input type=\"text\" name=\"ns_operator_code_value\" spellCheck=\"false\"\n                                        value={ns_operator_code_value} onChange={this.handleChange} onKeyDown={this.handleChange} />\n                                </div>\n                            </Grid>\n                            {\n                                addSubscriberError && addSubscriberError !== '' &&\n                                <Grid item xs={12} className=\"fgd-form\">\n                                    <div className=\"asf-each ns-error\">\n                                        <span>{addSubscriberError}</span>\n                                    </div>\n                                </Grid>\n                            }\n                        </Grid>\n                    </DialogContent>\n                    <DialogActions>\n                        {\n                            callUnderProgress ?\n                                <img src={loadingIcon} className=\"call_under_progress_icon\" /> :\n                                <Button onClick={this.addNewSubscriber} color=\"primary\">\n                                    {operationType === 'add' ? \"Submit\" : \"Update\"}\n                                </Button>\n                        }\n\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog open={subscribersListStatus} id=\"subscriber-list\">\n                    <DialogTitle>\n                        Subscribers\n                        {\n                            callUnderProgress && <img src={loadingIcon} className=\"call_under_progress_icon\" />\n                        }\n                        <Icons.Close fontSize={\"small\"} className=\"sl-close-icon\" onClick={this.toggleSubscribersList} />\n                    </DialogTitle>\n                    <DialogContent>\n                        <Grid className=\"sl-container\" container spacing={2}>\n                            <Grid item xs={12} className=\"fgd-form\">\n                                {\n                                    subscribersList && subscribersList.length > 0 &&\n                                    subscribersList.map((eachSub, index) => {\n                                        return (\n                                            <div key={index} className=\"slc-each\">\n                                                <span>{index + 1}</span>\n                                                <span>{eachSub.ueId}</span>\n                                                <div className=\"slce-action\">\n                                                    <span className=\"slca-option\" onClick={() => { this.deleteSubscriber(eachSub) }}>\n                                                        {\n                                                            (deleteingUeid !== '' && deleteingUeid === eachSub.ueId) ?\n                                                                <img src={loadingIcon} className=\"call_under_progress_icon\" />\n                                                                : 'Delete'\n                                                        }\n                                                    </span>\n                                                </div>\n                                                <div className=\"slce-action\">\n                                                    <span className=\"slca-option\" onClick={() => { this.enableModifySubscriber(eachSub) }}>\n                                                        Modify\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                    <DialogActions>\n                        {/* <Button onClick={this.toggleSubscribersList} color=\"primary\">\n                            Submit\n                        </Button> */}\n                    </DialogActions>\n                </Dialog>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    config: state.siteCoordinator.config,\n    toaster: state.siteCoordinator.toaster,\n    deploy: state.siteCoordinator.deploy\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MonitorNetwork));","/Users/azminds/Documents/five-g/frontend/src/config.js",["572"],"export default {\n  cognito: {\n    REGION: 'us-west-2',\n    USER_POOL_ID: 'us-west-2_itf0TDQ0F',\n    APP_CLIENT_ID: '120n3l0kmu9cfbjpcrdmn1vk8d',\n  }\n}","/Users/azminds/Documents/five-g/frontend/src/store/siteCoordinator/siteCoordinator.actions.js",[],"/Users/azminds/Documents/five-g/frontend/src/store/root-reducer.js",[],"/Users/azminds/Documents/five-g/frontend/src/store/root-saga.js",[],"/Users/azminds/Documents/five-g/frontend/src/store/siteCoordinator/siteCoordinator.reducer.js",[],"/Users/azminds/Documents/five-g/frontend/src/store/auth/auth.reducer.js",[],"/Users/azminds/Documents/five-g/frontend/src/store/auth/auth.actions.js",[],"/Users/azminds/Documents/five-g/frontend/src/store/auth/auth.sagas.js",["573"],"import { takeLatest, call, put, all, select } from 'redux-saga/effects';\nimport { API, Auth } from 'aws-amplify';\n\nimport * as authActions from './auth.actions';\nimport * as AuthType from './auth.types';\nimport { notify } from 'react-notify-toast';\n\nexport function* loadUserAsync() {\n  try {\n    yield Auth.currentSession();\n    const { username, attributes } = yield Auth.currentAuthenticatedUser();\n    const uid = attributes.sub;\n    const userData = {\n      username,\n      uid,\n      name: attributes.name,\n      email: attributes.email,\n      mode: attributes['custom:mode'],\n      role: attributes['custom:role']\n    };\n    yield put(authActions.loadUserSuccess(userData));\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.loadUserFail(err));\n  }\n}\n\nexport function* onSigninAsync({\n  payload: {\n    formData: { email, password, clientMetadata },\n    router\n  }\n}) {\n  try {\n    const { username, attributes } = yield Auth.signIn(\n      email.trim().toLowerCase(),\n      password,\n      clientMetadata\n    );\n    const uid = attributes.sub;\n    yield put(\n      authActions.signinSuccess({\n        username,\n        uid,\n        name: attributes.name,\n        email: attributes.email,\n        mode: attributes['custom:mode'],\n        role: attributes['custom:role']\n      })\n    );\n    const { toaster } = yield select(state => state.siteCoordinator);\n    notify.show(\"User Signed In Successfully\", \"custom\", toaster.duration, toaster.success)\n    if (router) {\n      if (router.location?.state && router.location?.state.from && router.location?.state?.from.pathname) {\n        router.push(router.location?.state?.from.pathname)\n\n      } else {\n        router.push('/monitor')\n\n      }\n\n    }\n  } catch (err) {\n    console.error(err);\n    const { toaster } = yield select(state => state.siteCoordinator);\n    notify.show(err.message, \"custom\", toaster.duration, toaster.error)\n    if (err.code === 'UserNotConfirmedException') {\n      yield put(authActions.signinFail(err.message));\n    } else if (err.code === 'UserNotFoundException') {\n      yield put(authActions.signinFail(err.message));\n    } else if (err.code === 'UserLambdaValidationException') {\n      yield put(authActions.signinFail({ domain: err.message }));\n    } else {\n      yield put(authActions.signinFail(err.message));\n\n    }\n  }\n}\n\nexport function* onSignupAsync({ payload: { formData, callback } }) {\n  try {\n    const response = yield Auth.signUp({\n      ...formData,\n      autoSignIn: {\n        enabled: true\n      }\n\n    })\n\n\n    if (callback) {\n      yield call(callback, response)\n    }\n\n    yield put(authActions.signupSuccess(response));\n\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.signupFail(err.message));\n  }\n}\n\nexport function* onVerifyAsync({ payload: { code, callback } }) {\n  try {\n    let email = localStorage.getItem(\"registerEmail\")\n    const response = yield Auth.confirmSignUp(email, code)\n\n    if (callback) {\n      yield call(callback, response)\n    }\n\n    yield put(authActions.verificationSuccess(response));\n\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.verificationFail(err.message));\n  }\n}\n\nexport function* signOutAsync({ payload: { history } }) {\n  try {\n    yield Auth.signOut();\n    history.push('/deploy')\n    const { toaster } = yield select(state => state.siteCoordinator);\n    notify.show(\"User Signed Out Successfully\", \"custom\", toaster.duration, toaster.success)\n    yield put(authActions.signoutSuccess());\n  } catch (err) {\n    console.error(err);\n    yield put(authActions.signoutFail(err));\n  }\n}\n\nexport function* watchLoadUser() {\n  yield takeLatest(AuthType.LOAD_USER_START, loadUserAsync);\n}\n\nexport function* watchSignin() {\n  yield takeLatest(AuthType.SIGN_IN_START, onSigninAsync);\n}\n\nexport function* watchSignup() {\n  yield takeLatest(AuthType.SIGN_UP_START, onSignupAsync);\n}\n\n\nexport function* watchVerify() {\n  yield takeLatest(AuthType.VERIFICATION_START, onVerifyAsync);\n}\n\n\nexport function* watchSignout() {\n  yield takeLatest(AuthType.SIGN_OUT_START, signOutAsync);\n}\n\nexport function* authSagas() {\n  yield all([\n    call(watchSignin),\n    call(watchSignup),\n    call(watchSignout),\n    call(watchLoadUser),\n    call(watchVerify)\n  ]);\n}\n","/Users/azminds/Documents/five-g/frontend/src/store/siteCoordinator/siteCoordinator.types.js",[],"/Users/azminds/Documents/five-g/frontend/src/Layout/PublicRoute.js",[],"/Users/azminds/Documents/five-g/frontend/src/Layout/PrivateRoute.js",["574"],"/* eslint-disable implicit-arrow-linebreak */\nimport React, { useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nconst PrivateRoute = ({\n  auth: { isAuthenticated, loading },\n  component,\n  ...rest\n}) => {\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!isAuthenticated && !loading) {\n          // not logged in so redirect to login page with the return url\n          console.log('props', props.location.pathname.includes('/add-ap'))\n          return (\n            <Redirect\n              to={{\n                pathname: props.location.pathname.includes('/add-ap') ? 'login' : '/deploy',\n                state: { from: props.location }\n              }}\n            />\n          );\n        }\n\n        return React.createElement(component, props)\n\n      }}\n    />\n  );\n};\n\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","/Users/azminds/Documents/five-g/frontend/src/pages/addAP/addAP.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/showOutput/showOutput.js",["575","576"],"import { Grid, Typography } from '@material-ui/core'\nimport React from 'react'\nimport Widget from '../../components/Widget/Widget'\nimport './showOutput.scss';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport AdjustIcon from '@material-ui/icons/Adjust'\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord'\n\n\n\nfunction ShowOutput() {\n  return (\n    <div className='showOutput'>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Widget\n            title=\"Harbour  Farm and Vineyard​\"\n            upperTitle\n            bodyclassName={''}\n            className=\"network-summary-title\"\n            disableWidgetMenu={true}\n          >\n            <Grid container spacing={2}>\n              <Grid justify='center' item xs={12}>\n                <div className=\"fgm-util-each \">\n                  <span className=\"fgm-util-each-title\">Location</span>\n                  <span className=\"fgm-util-each-value\">Ramona, CA, USA</span>\n                </div>\n\n              </Grid>\n              <Grid justify='center' item xs={12}>\n                <div className=\"fgm-util-each \">\n                  <span className=\"fgm-util-each-title\">Drone ID</span>\n                  <span className=\"fgm-util-each-value\">A1</span>\n                </div>\n\n              </Grid>\n\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={6}>\n          <Widget\n            title=\"\"\n            upperTitle\n            bodyclassName={''}\n            className={''}\n            disableWidgetMenu={true}\n          >\n            <Grid container spacing={2}>\n              <Grid justify='center' item xs={12}>\n                <div className=\"fgm-util-each \">\n                  <span className=\"fgm-util-each-title\">Drone Status\n                  </span>\n                  <span className=\"fgm-util-each-value\">Online\n                    <CheckCircleIcon className='valid_tick' />\n\n                  </span>\n                </div>\n\n              </Grid>\n              <Grid justify='center' item xs={12}>\n                <div className=\"fgm-util-each \">\n                  <span className=\"fgm-util-each-title\">Live stream</span>\n                  <span className=\"fgm-util-each-value\">A1\n                    <FiberManualRecordIcon className='stream' />\n                  </span>\n                </div>\n\n              </Grid>\n\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            title=\"\"\n            upperTitle\n            bodyclassName={''}\n            className=\"network-summary-title\"\n            disableWidgetMenu={true}\n          >\n            <iframe width=\"100%\" height=\"415\" src=\"https://wplandingpag.vps.webdock.cloud/demo2/tensorflow-js-image-classification/player.html\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n          </Widget>\n        </Grid>\n      </Grid>\n\n\n    </div>\n  )\n}\n\nexport default ShowOutput","/Users/azminds/Documents/five-g/frontend/src/pages/signUp/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/store/auth/auth.types.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/stepperCoreFlow/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/inspect/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/stepperAddAP/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/loginForm/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/device/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/addDevice/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/components/common/Button/button.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetworkNew/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/manageAppDeployment/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/signUp/signUPForm.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/stepperCoreFlow/stepperCoreFlow.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/stepperAddAP/stepperAddAP.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/inspect/inspect.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/device/device.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/loginForm/loginForm.js",["577","578","579","580"],"import { Box, InputAdornment, TextField, Typography } from '@material-ui/core'\nimport React from 'react'\nimport CustomButton from '../../components/common/Button/button'\nimport { Person as AccountIcon, VpnKey as Key } from '@material-ui/icons'\nimport './loginForm.scss'\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios'\nimport apiServices from '../../services/apiService'\nimport { notify } from 'react-notify-toast';\nimport { connect, useDispatch } from 'react-redux'\nimport { Auth } from 'aws-amplify'\nimport * as authActions from '../../store/auth/auth.actions'\n\n\n\nconst LoginForm = (props) => {\n\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [isLoading, setIsLoading] = React.useState(false);\n  const dispatch = useDispatch()\n\n  async function demoLoginUser(router, setIsLoading) {\n    setIsLoading(true);\n\n    dispatch(authActions.signinStart({ email, password }, props.history))\n\n\n\n  }\n\n  return (\n    <Box component={'form'} onSubmit={() => demoLoginUser(\n      email,\n      password,\n      props.history,\n      setIsLoading,\n    )\n    } className='login-container'>\n      <Box className='login-avatar'>\n        <AccountIcon />\n      </Box>\n      <div className='form'>\n        <Typography\n          color='text'\n          className='form_title'\n        >\n          User Log in\n        </Typography>\n        <TextField\n          fullWidth\n          id='filled-basic'\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position='start'>\n                <AccountIcon />\n              </InputAdornment>\n            ),\n            disableUnderline: true,\n            placeholder: 'User ID',\n            className: 'form_textfield'\n          }}\n        />\n        <TextField\n          fullWidth\n          id='filled-basic'\n          className='form_textfield'\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type='password'\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position='start'>\n                <Key />\n              </InputAdornment>\n            ),\n            disableUnderline: true,\n            placeholder: 'Password'\n          }}\n        />\n        <CustomButton fullWidth type={'submit'} onClick={() => {\n          demoLoginUser(\n\n            props.history,\n            setIsLoading,\n          )\n        }} disabled={isLoading} buttonText={isLoading ? 'loading' : 'LOGIN'} />\n      </div>\n      <Typography\n        color='text'\n        className='forgot_password'\n      >\n        Forgot <span>Password</span>?\n      </Typography>\n    </Box>\n  )\n}\n\nconst mapStateToProps = state => ({\n  config: state.siteCoordinator.config,\n  toaster: state.siteCoordinator.toaster,\n  deploy: state.siteCoordinator.deploy\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LoginForm));","/Users/azminds/Documents/five-g/frontend/src/pages/addDevice/addDevice.js",["581"],"import { Box, Button, Container, Divider, Grid, TextField, Typography } from '@material-ui/core'\nimport React from 'react'\n\nimport AddIcon from '@material-ui/icons/Add';\n\nimport './addDevice.scss';\n\n\n\nconst addDevice = () => {\n    return (\n        <Container maxWidth=\"md\">\n            <Typography variant=\"h1\" className='main-title'>Core network : User management</Typography>\n\n            <Box>\n                <Box className='sub-header'>\n                    <Typography variant='h3'>Add a new device</Typography>\n                    {/* <Box sx={{ display: 'flex', gridGap: '14px', alignItems: 'center' }}>\n                        <Typography variant='h4'>(or) Bulk upload</Typography>\n                        <Button variant='outlined'><AddIcon /> Add files</Button>\n                    </Box> */}\n                </Box>\n\n                <Box className='form-wrapper'>\n                    <Grid container spacing={4}>\n                        <Grid item xs={6}>\n                            <Typography variant='h5'>ID</Typography>\n                            <TextField id=\"filled-basic\" variant=\"filled\"\n                                hiddenLabel className='input-field'\n                                InputProps={{\n                                    disableUnderline: true\n                                }}\n                                inputProps={{\n                                    style: { background: '#F2F2F2 0% 0% no-repeat padding-box' },\n\n                                }} />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                            <Typography variant='h5'>IMSI</Typography>\n                            <TextField id=\"filled-basic\" hiddenLabel variant=\"filled\" className='input-field' InputProps={{\n                                disableUnderline: true\n                            }}\n                                inputProps={{\n                                    style: { background: '#F2F2F2 0% 0% no-repeat padding-box' },\n\n                                }} />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                            <Typography variant='h5'>Authentication method</Typography>\n                            <TextField id=\"filled-basic\" hiddenLabel variant=\"filled\" className='input-field' InputProps={{\n                                disableUnderline: true\n                            }}\n                                inputProps={{\n                                    style: { background: '#F2F2F2 0% 0% no-repeat padding-box' },\n\n                                }} />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                            <Typography variant='h5'>K</Typography>\n                            <TextField id=\"filled-basic\" hiddenLabel variant=\"filled\" className='input-field' InputProps={{\n                                disableUnderline: true\n                            }}\n                                inputProps={{\n                                    style: { background: '#F2F2F2 0% 0% no-repeat padding-box' },\n\n                                }} />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                            <Typography variant='h5'>Operator code type</Typography>\n                            <TextField id=\"filled-basic\" hiddenLabel variant=\"filled\" className='input-field' InputProps={{\n                                disableUnderline: true\n                            }}\n                                inputProps={{\n                                    style: { background: '#F2F2F2 0% 0% no-repeat padding-box' },\n\n                                }} />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                            <Typography variant='h5'>Operator code value</Typography>\n                            <TextField id=\"filled-basic\" hiddenLabel variant=\"filled\" className='input-field' InputProps={{\n                                disableUnderline: true\n                            }}\n                                inputProps={{\n                                    style: { background: '#F2F2F2 0% 0% no-repeat padding-box' },\n\n                                }} />\n                        </Grid>\n\n                        <Grid item xs={12}>\n\n                            <Divider style={{ border: '1px solid #F2F2F2', margin: '28px 0' }} />\n                            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%' }}>\n                                <Button variant='contained'>Submit</Button>\n                            </Box>\n                        </Grid>\n\n                    </Grid>\n                </Box>\n            </Box>\n        </Container>\n    )\n}\n\nexport default addDevice;","/Users/azminds/Documents/five-g/frontend/src/pages/monitorNetworkNew/monitorNetworkNew.js",["582","583","584","585","586","587","588","589","590","591","592"],"import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './monitorNetworkNew.scss';\n\nimport $ from 'jquery';\n\nimport Select from 'react-select';\nimport {\n    ResponsiveContainer,\n    LineChart,\n    Line,\n    YAxis,\n    XAxis,\n    CartesianGrid,\n    Tooltip,\n    RadialBarChart,\n    RadialBar\n} from \"recharts\";\n\nimport {\n    Grid, Box\n} from \"@material-ui/core\";\nimport * as Icons from \"@material-ui/icons\";\n\nimport axios from 'axios';\n\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\n\n// import alerticon from '../../images/home/alert.svg';\n// import devicesIcon from '../../images/home/devices.svg';\n// import cloudIcon from '../../images/home/cloud.svg';\n// import serverIcon from '../../images/home/server.svg';\n// import gnbIcons from '../../images/home/gnb.svg';\n\nimport networkIcon from '../../images/new_flow_images/icon_5GNetworks.svg';\nimport deviceIcon from '../../images/new_flow_images/icon_5Gdevice.svg';\nimport accessPointIcon from '../../images/new_flow_images/icon_5GAP.svg';\nimport greenTickIcon from '../../images/new_flow_images/green_tick.svg';\n\nimport loadingIcon from '../../images/home/loading.gif';\n\n\nimport apiService from '../../services/apiService.js';\nimport CustomButton from '../../components/common/Button/button';\nimport { UserStateContext } from '../../context/UserContext';\nimport classNames from 'classnames';\n\nclass MonitorNetwork extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lineData: [\n                { name: 'July 1', uv: 4000 },\n                { name: 'July 2', uv: 3000 },\n                { name: 'July 3', uv: 2000 },\n                { name: 'July 4', uv: 1000 },\n                { name: 'July 5', uv: 1890 }\n            ],\n            elementDetails: false,\n            elementDetailsCoordinates: {},\n            networkInfo: {},\n            networkSummary: {},\n            elmentDetailsData: [],\n            callUnderProgress: false,\n            networkSummaryCallUnderProgress: false,\n            firstCallDone: false,\n            netWorkSummaryFirstCallDone: false,\n            devices_info: [\n                { fieldName: \"Successful Connects\", value: \"87%\", description: \"Success\", isWarning: false },\n                { fieldName: \"Throughput\", value: \"8.1 Gbps\", description: \"Maximum Achievable Throughput 10 Gbps\", isWarning: true },\n                { fieldName: \"Latency\", value: \"13 ms\", description: \"Minimum Achievable Latency 1 ms\", isWarning: true },\n                { fieldName: \"Packet Loss\", value: \"13%\", description: \"On Total Transmitted Packets of all APs Per Sec\", isWarning: true },\n                // { fieldName: \"Mobility\", value: \"100%\", description: \"Handovers Successful\", isWarning: false },\n                // { fieldName: \"Network Coverage\", value: \"90%\", description: \"Of Maximum Target Coverage\", isWarning: false }\n            ],\n            monitorDeviceSelectOptions: [\n                { value: 'today', label: 'Today' },\n                { value: 'yesterday', label: 'Yesterday' },\n                { value: 'lastWeek', label: 'Last 7days' }\n            ],\n            networkList: [],\n            selectedNetwork: null,\n            devices_history: [\n                { fieldName: \"5G Network\", icon: networkIcon, description: \"SMF is Unhealthy\", site: \"Irvine, CA,\", switch: \"9a9bea\", port: \"3000\", id: \"CN-12\", isWarning: false, date: \"5/19/2022, 5.14.08 PM\", isToday: true },\n                { fieldName: \"5G AP\", icon: accessPointIcon, description: \"AP2025 is disconnected with CN\", site: \"Peru, LA,\", switch: \"10ab612\", port: \"9001\", id: \"AP-1025\", isWarning: false, date: \"5/18/2022, 6.11.03 PM\", isYesterday: true },\n                { fieldName: \"RESOLVED ACTION\", icon: greenTickIcon, description: \"Battery replaced\", site: \"Irvine, CA,\", switch: \"\", port: \"\", id: \"Device23\", isWarning: false, date: \"5/18/2022, 6.14.05 PM\", isYesterday: true },\n                { fieldName: \"RESOLVED ACTION\", icon: greenTickIcon, description: \"AMF Redeployed\", site: \"Sweden, EU,\", switch: \"\", port: \"\", id: \"CN12\", isWarning: false, date: \"5/14/2022, 3.14.08 PM\", isLastWeek: true },\n                { fieldName: \"5G Network\", icon: networkIcon, description: \"AMF is Unhealthy\", site: \"Sweden, EU,\", switch: \"9a9bea\", port: \"3000\", id: \"CN-12\", isWarning: false, date: \"5/14/2022, 3.14.08 PM\", isLastWeek: true },\n                { fieldName: \"RESOLVED ACTION\", icon: greenTickIcon, description: \"UPF1 Redeployed\", site: \"India, AP\", switch: \"\", port: \"\", id: \"CN25\", isWarning: false, date: \"5/12/2022, 9.17.06 PM\", isLastWeek: true }\n            ],\n\n            value: \"Today\"\n        }\n\n        this.monitorHomeToken = null;\n        this.timeout = null;\n\n    }\n\n    componentDidMount = () => {\n        this.getMonitorHomeData();\n        this.getMonitorHomeSummary();\n        this.timeout = setInterval(this.intiateCall, 5000);\n        this.timeoutSummary = setInterval(this.intiateCallSummary, 10000);\n\n        this.getNetWorkList();\n    }\n\n    intiateCall = () => {\n        if (!this.state.callUnderProgress) {\n            this.getMonitorHomeData();\n        }\n    }\n\n    intiateCallSummary = () => {\n        if (!this.state.networkSummaryCallUnderProgress) {\n            this.getMonitorHomeSummary();\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.monitorHomeToken)\n            this.monitorHomeToken.cancel();\n        if (this.monitorHomeSummaryToken)\n            this.monitorHomeSummaryToken.cancel();\n        clearInterval(this.timeout);\n        clearInterval(this.timeoutSummary);\n    }\n\n    getNetWorkList = () => {\n\n        var thisView = this;\n        if (this.networkListToken)\n            this.networkListToken.cancel();\n        this.networkListToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getNetWorkList(this.networkListToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n\n                    let networkList = (res[0][\"data\"] && res[0][\"data\"][\"network_list\"]) ? res[0][\"data\"][\"network_list\"] : [];\n                    networkList = networkList.map((eachNetwork) => {\n                        return { ...eachNetwork, value: eachNetwork.ID, label: eachNetwork.name }\n                    })\n\n                    thisView.setState({ networkList: networkList, selectedNetwork: networkList[0] });\n\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n\n            });\n\n    }\n\n    handleNetworkChange = (changeValue) => {\n        this.setState({ selectedNetwork: changeValue });\n    }\n\n    getMonitorHomeData = () => {\n\n        var thisView = this;\n        if (this.monitorHomeToken)\n            this.monitorHomeToken.cancel();\n        this.monitorHomeToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getMonitorHomeStats(this.monitorHomeToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ networkInfo: res[0][\"data\"] });\n                    thisView.setState({ callUnderProgress: false });\n                    thisView.setState({ firstCallDone: true });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n                thisView.setState({ callUnderProgress: false });\n\n            });\n\n    }\n\n    getMonitorHomeSummary = () => {\n\n        var thisView = this;\n        if (this.monitorHomeSummaryToken)\n            this.monitorHomeSummaryToken.cancel();\n        this.monitorHomeSummaryToken = axios.CancelToken.source();\n\n        this.setState({ networkSummaryCallUnderProgress: true });\n        axios.all([apiService.getMonitorHomeSummary(this.monitorHomeSummaryToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n                    thisView.setState({ networkSummary: res[0][\"data\"] });\n                    thisView.setState({ networkSummaryCallUnderProgress: false });\n                    thisView.setState({ netWorkSummaryFirstCallDone: true });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n                thisView.setState({ networkSummaryCallUnderProgress: false });\n\n            });\n\n    }\n\n    render() {\n        const { isAuthenticated } = this.props.auth;\n        const { networkInfo, firstCallDone, devices_info, monitorDeviceSelectOptions,\n            netWorkSummaryFirstCallDone, networkSummary, networkList, selectedNetwork, lineData } = this.state;\n\n        return (\n            <div className=\"five-g-monitor\">\n                <Grid container spacing={4}>\n                    <Grid item lg={3} md={3} sm={6} xs={12} className=\"fgd-form individual-grid-five-g\">\n                        <Widget\n                            title=\"Network Summary\"\n                            upperTitle\n                            bodyclassName={''}\n                            className=\"network-summary-title\"\n                            disableWidgetMenu={true}\n                        >\n                            {\n                                <RadialBarChart\n                                    width={300}\n                                    height={250}\n                                    innerRadius=\"10%\"\n                                    outerRadius=\"80%\"\n                                    data={[\n                                        {\n                                            \"name\": \"d\",\n                                            \"uv\": 100,\n                                            \"fill\": \"#ffff\"\n                                        }, {\n                                            \"name\": \"utilization\",\n                                            \"uv\": (networkSummary && networkSummary.percentage) ? networkSummary.percentage : 0,\n                                            \"fill\": \"#0731E2\"\n                                        }\n                                    ]}\n                                    startAngle={180}\n                                    endAngle={0}\n                                >\n                                    <RadialBar minAngle={15} background clockWise={true} dataKey='uv' />\n                                </RadialBarChart>\n                            }\n\n                            <div className=\"fgm-util-each fgmue-first\">\n                                <span className=\"fgm-util-each-title\">Number of cells available</span>\n                                <span className=\"fgm-util-each-value\">{(networkSummary && networkSummary.count_available_cells) ? networkSummary.count_available_cells : '-'}</span>\n                            </div>\n\n                            <div className=\"fgm-util-each\">\n                                <span className=\"fgm-util-each-title\"> Number of cells active</span>\n                                <span className=\"fgm-util-each-value\">{(networkSummary && networkSummary.count_active_cells) ? networkSummary.count_active_cells : '-'}</span>\n                            </div>\n\n                            <div className=\"fgm-util-each\">\n                                <span className=\"fgm-util-each-title\">Percentage utilization</span>\n                                <span className=\"fgm-util-each-value\">{(networkSummary && networkSummary.percentage_utilization) ? networkSummary.percentage_utilization : '-'}</span>\n                            </div>\n                            {\n                                !netWorkSummaryFirstCallDone &&\n                                <div className=\"each-widget-loading\">\n                                    <img src={loadingIcon} />\n                                </div>\n                            }\n                        </Widget>\n                    </Grid>\n                    <Grid item lg={5} md={5} sm={6} xs={12} className=\"fgd-form individual-grid-five-g\">\n                        <div className=\"monitor-left-bar-first-section\">\n                            <Widget\n                                title=\"\"\n                                upperTitle\n                                bodyclassName={''}\n                                className={''}\n                                disableWidgetMenu={true}\n                            >\n\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    justify=\"space-between\"\n                                    alignItems=\"center\"\n                                >\n\n                                    <Grid item md={3} xs={12} className=\"text-center\">\n                                        <Typography color=\"text\" colorBrightness=\"secondary\" className=\"grid-item-title\">\n                                            RAN Spectrum Utilization\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item md={3} xs={12}>\n                                        <div className=\"c100 p33 center\">\n                                            <span>33%</span>\n                                            <div className=\"slice\">\n                                                <div className=\"bar\">\n                                                </div>\n                                                <div className=\"fill\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Grid>\n                                    <Grid item md={3} xs={12}>\n                                        <div className=\"c100 p63 center\">\n                                            <span>63%</span>\n                                            <div className=\"slice\">\n                                                <div className=\"bar\">\n                                                </div>\n                                                <div className=\"fill\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Grid>\n                                    <Grid item md={3} xs={12} className=\"text-center\">\n                                        <Typography color=\"text\" colorBrightness=\"secondary\" className=\"grid-item-title\">\n                                            Core Network Utilization\n                                        </Typography>\n                                    </Grid>\n\n                                </Grid>\n                                {\n                                    !firstCallDone &&\n                                    <div className=\"each-widget-loading\">\n                                        <img src={loadingIcon} />\n                                    </div>\n                                }\n                            </Widget>\n                        </div>\n\n                        <Box pt={8}>\n                            <div className=\"monitor-left-bar-second-section\">\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    // justify=\"space-between\"\n                                    alignItems=\"center\"\n                                >\n\n                                    <Grid item lg={4} md={6} xs={12}>\n                                        <div className=\"mlb-first-col\">\n                                            <Box pl={2} pr={2}>\n                                                <div className=\"mnl-connected-source network-section\">\n                                                    <span className=\"mnl-connected-source-network-title\">5G Networks</span>\n                                                    <span><img src={networkIcon} alt=\"networkIcon\" className=\"mnl-connected-source-image\" /></span>\n                                                </div>\n                                                <div className=\"mnl-connected-source-options\">\n                                                    <span className=\"option-title\">CNs</span>\n                                                    <span className=\"option-value\">{(networkInfo && networkInfo.cn_count) ? networkInfo.cn_count : '-'}</span>\n                                                </div>\n                                                {\n                                                    (networkInfo && networkInfo.cn_stats && Object.keys(networkInfo.cn_stats).length > 0) &&\n                                                    Object.keys(networkInfo.cn_stats).map((key, index) => {\n                                                        return (\n                                                            <div className=\"mnl-connected-source-options\" key={index}>\n                                                                <span className=\"option-title\">{key}</span>\n                                                                <span className=\"option-value\">{networkInfo.cn_stats[key]}</span>\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n\n                                            </Box>\n                                        </div>\n                                    </Grid>\n\n                                    <Grid item lg={4} md={6} xs={12}>\n                                        <div className=\"mlb-second-col\">\n                                            <Box pl={2} pr={2}>\n                                                <div className=\"mnl-connected-source access-points-section\">\n                                                    <span className=\"mnl-connected-source-access-points-title\">5G Access Points</span>\n                                                    <span><img src={accessPointIcon} alt=\"accessPointIcon\" className=\"mnl-connected-source-image\" /></span>\n                                                </div>\n                                                <div className=\"mnl-connected-source-options\">\n                                                    <span className=\"option-title\">APs</span>\n                                                    <span className=\"option-value\">{(networkInfo && networkInfo.ran_count) ? networkInfo.ran_count : '-'}</span>\n                                                </div>\n                                                {\n                                                    (networkInfo && networkInfo.ran_stats && Object.keys(networkInfo.ran_stats).length > 0) &&\n                                                    Object.keys(networkInfo.ran_stats).map((key, index) => {\n                                                        return (\n                                                            <div className=\"mnl-connected-source-options\" key={index}>\n                                                                <span className=\"option-title\">{key}</span>\n                                                                <span className=\"option-value\">{networkInfo.ran_stats[key]}</span>\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n\n\n                                            </Box>\n                                            <Box width={'90%'} margin={'0 auto'} pt={1} textAlign={'center'}>\n                                                <div className=\"mds-add-ap\">\n                                                    <NavLink to={isAuthenticated ? \"/quick-ap\" : '/login'}>\n                                                        <CustomButton className=\"button\" fullWidth buttonText={'Add Access point'} /> </NavLink>\n                                                </div>\n                                            </Box>\n                                        </div>\n                                    </Grid>\n\n                                    <Grid item lg={4} md={6} xs={12}>\n                                        <div className=\"mlb-third-col\">\n                                            <Box pl={2} pr={2}>\n                                                <div className=\"mnl-connected-source devices-section\">\n                                                    <span className=\"mnl-connected-source-devices-title\">5G Devices</span>\n                                                    <span><img src={deviceIcon} alt=\"deviceIcon\" className=\"mnl-connected-source-image\" /></span>\n                                                </div>\n                                                <div className=\"mnl-connected-source-options\">\n                                                    <span className=\"option-title\">Devices</span>\n                                                    <span className=\"option-value\">{(networkInfo && networkInfo.ran_details && networkInfo.ran_details.no_ues) ? networkInfo.ran_details.no_ues : '-'}</span>\n                                                </div>\n                                                {/* <div className=\"mnl-connected-source-options\">\n                                                    <span className=\"option-title\">Sensors</span>\n                                                    <span className=\"option-value\">3000</span>\n                                                </div>\n                                                <div className=\"mnl-connected-source-options\">\n                                                    <span className=\"option-title\">Actuators</span>\n                                                    <span className=\"option-value\">1800</span>\n                                                </div> */}\n                                                <div className=\"mnl-connected-source-options\">\n                                                    <span className=\"option-title\">Others</span>\n                                                    <span className=\"option-value\">{(networkInfo && networkInfo.ran_details && networkInfo.ran_details.no_ues) ? networkInfo.ran_details.no_ues : '-'}</span>\n                                                </div>\n                                            </Box>\n                                        </div>\n                                    </Grid>\n\n                                </Grid>\n                            </div>\n                            {\n                                !firstCallDone &&\n                                <div className=\"each-widget-loading\">\n                                    <img src={loadingIcon} />\n                                </div>\n                            }\n\n                        </Box>\n\n                    </Grid>\n\n                    <Grid item lg={4} md={4} sm={6} xs={12} className=\"fgm-inner-grid individual-grid-five-g\">\n                        <Widget\n                            title=\"\"\n                            upperTitle\n                            bodyClass={'widget-deploy-content'}\n                            className={'deploye-widget'}\n                            style={{}}\n                            disableWidgetMenu={true}\n                        >\n                            <Grid item xs={12} style={{ width: \"100%\" }}>\n                                <Box className='test' style={{ width: \"100%\" }}>\n                                    <div className=\"mds-left-section\">\n                                        <Select\n                                            defaultValue={selectedNetwork}\n                                            value={selectedNetwork}\n                                            options={networkList}\n                                            onChange={this.handleNetworkChange}\n                                            onInputChange={this.handleNetworkChange} />\n                                    </div>\n                                </Box>\n                            </Grid>\n                            <Grid item xs={12} style={{ flexDirection: \"column\", display: \"flex\", justifyContent: \"flex-end\", width: \"100%\", alignItems: \"flex-end\" }}>\n                                <Box>\n                                    <div className=\"mds-deply-network\">\n                                        <NavLink to=\"/deploy\"><span>Deploy Network</span></NavLink>\n                                    </div>\n                                </Box>\n                            </Grid>\n\n                        </Widget>\n                    </Grid>\n\n                    <Grid item lg={7} md={6} sm={6} xs={12} className=\"fgd-form individual-grid-five-g\">\n                        <div className=\"monitor-devices-custom-table\">\n                            {\n                                devices_info && devices_info.length > 0 &&\n                                <ul className=\"devices-list-ul\">\n                                    {\n                                        devices_info.map((device_list, index) => {\n\n                                            return (\n                                                <Grid\n                                                    container\n                                                    xs={12}\n                                                    direction=\"row\"\n                                                    justifyContent=\"center\"\n                                                    alignItems=\"center\"\n                                                    className=\"devices-list-li\"\n                                                    key={index}\n                                                >\n\n                                                    <Grid item lg={3} md={12} xs={12}>\n                                                        <div className=\"devices-list-first-column\">\n                                                            {device_list.fieldName}\n                                                        </div>\n                                                    </Grid>\n                                                    <Grid item lg={3} md={12} xs={12} className=\"devices-list-second-column\">\n                                                        <span className={\"each-device-success-values \" + (device_list.isWarning ? \"warning-values\" : \"\")}>{(networkInfo && networkInfo.stats && networkInfo.stats[device_list.fieldName]) ? networkInfo.stats[device_list.fieldName] : \"\"}</span>\n                                                        <br />\n                                                        <span className=\"each-device-description\"> {device_list.description}</span>\n\n                                                    </Grid>\n                                                    <Grid item lg={6} md={12} xs={12}>\n                                                        {\n                                                            (networkInfo && networkInfo.stats_data && networkInfo.stats_data[device_list.fieldName]) &&\n                                                            <ResponsiveContainer width=\"100%\" height={100}>\n                                                                <LineChart\n                                                                    width={500}\n                                                                    height={200}\n                                                                    data={(networkInfo && networkInfo.stats_data && networkInfo.stats_data[device_list.fieldName]) ? networkInfo.stats_data[device_list.fieldName] : []}\n                                                                    margin={{\n                                                                        top: 10,\n                                                                        right: 30,\n                                                                        left: 0,\n                                                                        bottom: 0,\n                                                                    }}\n                                                                >\n                                                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                                                    <XAxis dataKey=\"name\" type=\"category\" hide={true} />\n                                                                    <YAxis dataKey=\"y\" hide={true} />\n                                                                    <Tooltip />\n                                                                    <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                                                </LineChart>\n                                                            </ResponsiveContainer>\n                                                        }\n                                                    </Grid>\n                                                </Grid>\n                                            )\n                                        })\n                                    }\n                                </ul>\n\n                            }\n                        </div>\n\n                        {\n                            !firstCallDone &&\n                            <div className=\"each-widget-loading\">\n                                <img src={loadingIcon} />\n                            </div>\n                        }\n                    </Grid>\n\n\n                    <Grid item lg={5} md={6} xs={12} className=\"fgd-form individual-grid-five-g\">\n                        <div className=\"mls-bar-second-section\">\n                            <div className=\"mls-bar-header\">Top network elements needing attention</div>\n                        </div>\n\n                        <div className=\"mls-bar-right-history-block\">\n\n                            <Grid\n                                container\n                                direction=\"row\"\n                            >\n\n                                <Grid item lg={5} md={5} xs={12}>\n\n                                    <div className=\"today-history-section\">\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Grid item lg={7} md={6} xs={12}>\n                                                <Box>\n                                                    <div className=\"mds-left-section\">\n                                                        <Select defaultValue={{ label: \"Today\", value: 0 }} options={monitorDeviceSelectOptions} />\n                                                    </div>\n                                                </Box>\n\n                                            </Grid>\n                                            <Grid item lg={5} md={6} xs={12}>\n                                                <Box>\n                                                    <div className=\"mds-rigt-section\"></div>\n                                                </Box>\n                                            </Grid>\n                                        </Grid>\n                                        <div className=\"each-device-history\">\n\n                                            <span className=\"mnl-history-source-date\" >5/14/2022, 3.14.08 PM</span>\n                                            <div className=\"mnl-history-source\">\n                                                <span className=\"mnl-history-source-title\">5G Network</span>\n                                                <span><img src={networkIcon} alt=\"accessPointIcon\" className=\"mnl-connected-source-image\" /></span>\n                                            </div>\n\n                                            <div className=\"mnl-history-source-description\">\n                                                SMF is Unhealthy\n                                            </div>\n\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">Site:</span>\n                                                <span className=\"option-value\">Irvine, CA</span>\n                                            </div>\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">Switch:</span>\n                                                <span className=\"option-value\">9a9bea</span>\n                                            </div>\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">Port:</span>\n                                                <span className=\"option-value\">3000</span>\n                                            </div>\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">ID:</span>\n                                                <span className=\"option-value\">CN-12</span>\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                    <div className=\"yesterday-history-section\">\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Grid item lg={7} md={6} xs={12}>\n                                                <Box>\n                                                    <div className=\"mds-left-section\">\n                                                        <Select defaultValue={{ label: \"Yesterday\", value: 0 }} options={monitorDeviceSelectOptions} />\n                                                    </div>\n                                                </Box>\n\n                                            </Grid>\n                                            <Grid item lg={5} md={6} xs={12}>\n                                                <Box>\n                                                    <div className=\"mds-rigt-section\"></div>\n                                                </Box>\n                                            </Grid>\n                                        </Grid>\n                                        <div className=\"each-device-history\">\n                                            <span className=\"mnl-history-source-date\" >5/18/2022, 6.11.03 PM</span>\n                                            <div className=\"mnl-history-source\">\n                                                <span className=\"mnl-history-source-title\">5G AP</span>\n                                                <span><img src={accessPointIcon} alt=\"accessPointIcon\" className=\"mnl-connected-source-image\" /></span>\n                                            </div>\n\n                                            <div className=\"mnl-history-source-description\">\n                                                AP2025 is disconnected with CN\n                                            </div>\n\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">Site:</span>\n                                                <span className=\"option-value\">Peru, LA</span>\n                                            </div>\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">Switch:</span>\n                                                <span className=\"option-value\">10ab612</span>\n                                            </div>\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">Port:</span>\n                                                <span className=\"option-value\">9001</span>\n                                            </div>\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">ID:</span>\n                                                <span className=\"option-value\">AP-1025</span>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"each-resolved-device-history\">\n                                            <span className=\"mnl-history-source-date\">5/18/2022, 6.14.05 PM</span>\n                                            <div className=\"mnl-history-source\">\n                                                <span><img src={greenTickIcon} alt=\"accessPointIcon\" className=\"mnl-resolved-device-image\" /></span>\n                                                <span className=\"mnl-resolved-device-title\">RESOLVED ACTION</span>\n                                            </div>\n\n\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">ID:</span>\n                                                <span className=\"option-value\">Device23</span>\n                                            </div>\n\n                                            <div className=\"mnl-history-source-description\">\n                                                Battery replaced\n                                            </div>\n\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">Site:</span>\n                                                <span className=\"option-value\">Irvine, CA,</span>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </Grid>\n                                <Grid item lg={1} md={1} xs={12}>\n\n                                </Grid>\n                                <Grid item lg={5} md={5} xs={12}>\n\n                                    <div className=\"last-week-history-section\">\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            alignItems=\"center\"\n                                        >\n                                            <Grid item lg={7} md={6} xs={12}>\n                                                <Box>\n                                                    <div className=\"mds-left-section\">\n                                                        <Select defaultValue={{ label: \"Last 7days\", value: 0 }} options={monitorDeviceSelectOptions} />\n                                                    </div>\n                                                </Box>\n\n                                            </Grid>\n                                            <Grid item lg={5} md={6} xs={12}>\n                                                <Box>\n                                                    <div className=\"mds-rigt-section\"></div>\n                                                </Box>\n                                            </Grid>\n                                        </Grid>\n\n                                        <div className=\"each-success-resolved-device-history\">\n                                            <span className=\"mnl-history-source-date\">5/14/2022, 3.14.08 PM</span>\n                                            <div className=\"mnl-history-source\">\n                                                <span><img src={greenTickIcon} alt=\"accessPointIcon\" className=\"mnl-resolved-device-image\" /></span>\n                                                <span className=\"mnl-resolved-device-title\">RESOLVED ACTION</span>\n                                            </div>\n\n\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">ID:</span>\n                                                <span className=\"option-value\">CN12</span>\n                                            </div>\n\n                                            <div className=\"mnl-history-source-description\">\n                                                AMF Redeployed\n                                            </div>\n\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">Site:</span>\n                                                <span className=\"option-value\"> Sweden, EU</span>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"each-device-history\">\n                                            <span className=\"mnl-history-source-date\" >5/14/2022, 3.14.08 PM</span>\n                                            <div className=\"mnl-history-source\">\n                                                <span className=\"mnl-history-source-title\">5G Network</span>\n                                                <span><img src={networkIcon} alt=\"accessPointIcon\" className=\"mnl-connected-source-image\" /></span>\n                                            </div>\n\n                                            <div className=\"mnl-history-source-description\">\n                                                AMF is Unhealthy\n                                            </div>\n\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">Site:</span>\n                                                <span className=\"option-value\">Sweden, EU</span>\n                                            </div>\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">Switch:</span>\n                                                <span className=\"option-value\">9a9bea</span>\n                                            </div>\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">Port:</span>\n                                                <span className=\"option-value\">3000</span>\n                                            </div>\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">ID:</span>\n                                                <span className=\"option-value\">CN-12</span>\n                                            </div>\n\n                                        </div>\n\n                                        <div className=\"each-success-resolved-device-history\">\n                                            <span className=\"mnl-history-source-date\">5/14/2022, 3.14.08 PM</span>\n                                            <div className=\"mnl-history-source\">\n                                                <span><img src={greenTickIcon} alt=\"accessPointIcon\" className=\"mnl-resolved-device-image\" /></span>\n                                                <span className=\"mnl-resolved-device-title\">RESOLVED ACTION</span>\n                                            </div>\n\n\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">ID:</span>\n                                                <span className=\"option-value\">CN25</span>\n                                            </div>\n\n                                            <div className=\"mnl-history-source-description\">\n                                                UPF1 Redeployed\n                                            </div>\n\n                                            <div className=\"mnl-history-source-options\">\n                                                <span className=\"option-title\">Site:</span>\n                                                <span className=\"option-value\">India, AP</span>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </Grid>\n                            </Grid>\n\n                        </div>\n\n                        {\n                            !firstCallDone &&\n                            <div className=\"each-widget-loading\">\n                                <img src={loadingIcon} />\n                            </div>\n                        }\n\n                    </Grid >\n\n                </Grid >\n\n            </div >\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    siteCoordinator: state.siteCoordinator\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonitorNetwork);\n","/Users/azminds/Documents/five-g/frontend/src/pages/manageAppDeployment/manageAppDeployment.js",["593","594","595","596","597","598","599","600","601","602","603","604","605","606"],"import React, { Component } from 'react';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport './manageAppDeployment.scss';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { notify } from 'react-notify-toast';\nimport { NavLink } from \"react-router-dom\";\nimport {\n    Grid,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    FormControl,\n    MenuItem,\n    TextField\n} from \"@material-ui/core\";\n\nimport {\n    ResponsiveContainer,\n    LineChart,\n    Line,\n    YAxis,\n    XAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    RadialBarChart,\n    RadialBar\n} from \"recharts\";\n\n\nimport Select from 'react-select'\n\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\n\nimport * as Icons from \"@material-ui/icons\";\n\nimport Widget from \"../../components/Widget\";\n\nimport rightArrowIcon from \"../../images/new_flow_images/arrow_big.svg\";\nimport weightSensorIcon from \"../../images/new_flow_images/weight_sensor.svg\";\n\n\nimport actuatorIcon from \"../../images/new_flow_images/actuator.svg\";\nimport analyticsIcon from \"../../images/new_flow_images/analytics.svg\";\nimport applicationIcon from \"../../images/new_flow_images/application.svg\";\n\nimport apiService from '../../services/apiService.js';\nimport { updateDeploy } from '../../store/siteCoordinator/siteCoordinator.actions';\nimport { withRouter } from 'react-router-dom'\n\n\nclass ManageAppDeployment extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"Cloud\",\n            manageDeploySelectOptions: [\n                { value: 'cloud', label: 'Cloud' },\n                { value: 'internal', label: 'Internal' },\n                { value: 'external', label: 'External' }\n            ],\n            manageInputSelectOptions: [\n                { value: 'device21', label: 'Device21' },\n                { value: 'device22', label: 'Device22' },\n                { value: 'device23', label: 'Device23' }\n            ],\n            manageInputSecondSelectOptions: [\n                { value: 'device17', label: 'Device17' },\n                { value: 'device18', label: 'Device18' },\n                { value: 'device19', label: 'Device19' }\n            ],\n            callUnderProgress: false,\n            deployEndPoints: {},\n            url: 'https://agri-vision.webflow.io/', urlConnected: false, analyzeApplication: false,\n            applicationUeList: []\n        }\n    }\n\n    componentDidMount = () => {\n        const { deployStats, deployEndPoints, applicationUeList } = this.props.deploy\n        if (!deployStats || !deployEndPoints || !applicationUeList) {\n            this.getDeployStats();\n            this.getEndPoints();\n            this.getApplicationUEList();\n\n\n\n        } else {\n            this.setState({ deployStats });\n            this.setState({ deployEndPoints });\n            this.setState({ callUnderProgress: false });\n            this.setState({ applicationUeList });\n            this.setState({ urlConnected: true });\n            this.setState({ analyzeApplication: true });\n\n\n\n        }\n\n\n        this.deployStateTimeout = setInterval(this.intiateCall, 5000);\n    }\n\n    intiateCall = () => {\n        if (!this.state.callUnderProgress) {\n            this.getDeployStats();\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.deployStatsToken)\n            this.deployStatsToken.cancel();\n        if (this.deployInputsToken)\n            this.deployInputsToken.cancel();\n        if (this.applicationUeListToken)\n            this.applicationUeListToken.cancel();\n        clearInterval(this.deployStateTimeout);\n    }\n\n    getDeployStats = () => {\n\n        var thisView = this;\n        if (this.deployStatsToken)\n            this.deployStatsToken.cancel();\n        this.deployStatsToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getDeployStats(this.deployStatsToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n\n                    let deployStats = (res[0][\"data\"] && res[0][\"data\"]) ? res[0][\"data\"] : [];\n                    thisView.setState({ deployStats });\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n                thisView.setState({ callUnderProgress: false });\n\n            });\n\n    }\n\n    getEndPoints = () => {\n\n        var thisView = this;\n        if (this.deployInputsToken)\n            this.deployInputsToken.cancel();\n        this.deployInputsToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getEndPoints(this.deployInputsToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n\n                    let deployEndPoints = (res[0][\"data\"] && res[0][\"data\"]) ? res[0][\"data\"] : [];\n                    thisView.setState({ deployEndPoints });\n                    thisView.setState({ callUnderProgress: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n                thisView.setState({ callUnderProgress: false });\n\n            });\n\n    }\n\n    getApplicationUEList = () => {\n\n        var thisView = this;\n        if (this.applicationUeListToken)\n            this.applicationUeListToken.cancel();\n        this.applicationUeListToken = axios.CancelToken.source();\n\n        this.setState({ callUnderProgress: true });\n        axios.all([apiService.getApplicationUEList(this.applicationUeListToken.token)])\n            .then(function (res) {\n                if (res[0]) {\n\n                    let applicationUeList = (res[0][\"data\"] && res[0][\"data\"]) ? res[0][\"data\"] : [];\n                    thisView.setState({ applicationUeList });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n                thisView.setState({ callUnderProgress: false });\n\n            });\n\n    }\n\n    onchangeInput = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    connectApplication = () => {\n\n        if (!this.state.url || this.state.url.trim() === '') {\n            notify.show(\"Please Enter URL\", \"custom\", this.props.toaster.duration, this.props.toaster.error);\n        } else {\n            this.setState({ urlConnected: true });\n        }\n\n    }\n\n    analyseApplication = () => {\n        this.setState({ analyzeApplication: true });\n    }\n\n    resetState = () => {\n\n        this.setState({ urlConnected: false });\n    }\n\n    render() {\n\n        const { deployStats, manageDeploySelectOptions, manageInputSelectOptions, manageInputSecondSelectOptions,\n            deployEndPoints, url, urlConnected, analyzeApplication, applicationUeList } = this.state;\n        const { history } = this.props\n        return (\n            <div className=\"monitoring-network-deploy-block\">\n\n                <Grid container spacing={4}>\n                    <Grid item lg={6} md={6} xs={12} className=\"fgm-inner-grid\">\n                        <div className=\"mnd-first-section\">\n                            <div className=\"mls-bar-header\">Application Deployment</div>\n                            <div className=\"choose-an-option-below-box\">\n                                {\n                                    urlConnected &&\n                                    <div className=\"choose-an-option-below-title-box\">\n                                        <div className=\"choose-an-option-bullet-icon\"></div>\n                                        {\n                                            deployEndPoints && deployEndPoints.length > 0 && deployEndPoints[0] && deployEndPoints[0][\"name\"] &&\n                                            <div className=\"choose-an-option-below-title\">{deployEndPoints[0][\"name\"]}</div>\n                                        }\n                                    </div>\n                                }\n                            </div>\n                        </div>\n\n                        <div className=\"application-host-block\">\n                            <Grid container spacing={2}>\n                                <Grid item lg={5} md={6} xs={6} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                    <div className=\"application-host-form\">\n                                        <span>Application hosted on</span>\n                                    </div>\n                                </Grid>\n                                <Grid item lg={7} md={6} xs={6} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                    <Box>\n                                        <div className=\"mds-left-section\">\n                                            <Select defaultValue={{ label: \"Cloud\", value: 0 }} options={manageDeploySelectOptions} />\n                                        </div>\n                                    </Box>\n                                </Grid>\n\n                                <Grid item lg={5} md={6} xs={6} className=\"fgm-inner-grid devices-deploy-custom-column2\">\n                                    <div className=\"application-host-form\">\n                                        <span>URL</span>\n                                    </div>\n                                </Grid>\n                                <Grid item lg={7} md={6} xs={6} className=\"fgm-inner-grid devices-deploy-custom-column2\">\n                                    <div className=\"mb-3\">\n                                        <input type=\"text\" name=\"url\" value={url} onChange={this.onchangeInput} className=\"form-control custom-\" placeholder=\"\" />\n                                    </div>\n                                </Grid>\n\n                                <Grid item lg={5} md={6} xs={6} className=\"fgm-inner-grid\">\n                                    <div className=\"application-host-form\">\n                                    </div>\n                                </Grid>\n\n                                <Grid item lg={7} md={6} sm={12} xs={12} className=\"fgm-inner-grid devices-deploy-custom-column3\">\n\n                                    <Button\n                                        className=\"connect-button\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        type=\"submit\"\n                                        onClick={this.connectApplication}\n                                    >\n                                        Connect\n                                    </Button>\n\n                                </Grid>\n\n                            </Grid>\n                        </div>\n                    </Grid>\n\n                    {\n                        analyzeApplication &&\n                        <Grid item lg={6} md={6} xs={12} className=\"fgd-form\">\n                            <div className=\"mnd-second-section\">\n                                <div className=\"mls-bar-header\">The activity of {deployEndPoints && deployEndPoints.length > 0 && deployEndPoints[0] && deployEndPoints[0][\"name\"] ? deployEndPoints[0][\"name\"] : \"\"} Application</div>\n                            </div>\n                            <div className=\"mnd-chart-block\">\n                                <Widget\n                                    title=\"\"\n                                    upperTitle\n                                    bodyclassName={''}\n                                    className={''}\n                                    disableWidgetMenu={true}\n                                >\n                                    {\n                                        (deployStats && deployStats.length > 0) &&\n                                        <ResponsiveContainer width=\"100%\" height={250}>\n                                            <LineChart\n                                                width={500}\n                                                height={200}\n                                                data={deployStats ? deployStats : []}\n                                                margin={{\n                                                    top: 30,\n                                                    right: 10,\n                                                    left: 10,\n                                                    bottom: 0,\n                                                }}\n                                            >\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"x\" type=\"category\" hide={true} />\n                                                <YAxis dataKey=\"Packet Loss\" hide={true} />\n                                                <Tooltip />\n                                                <Legend verticalAlign=\"top\" align=\"right\" wrapperStyle={{ top: 5 }} />\n                                                <Line type=\"monotone\" dataKey=\"Latency\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                                                <Line type=\"monotone\" dataKey=\"Packet Loss\" stroke=\"#4789E1\" fill=\"#4789E1\" />\n                                            </LineChart>\n                                        </ResponsiveContainer>\n                                    }\n                                </Widget>\n                            </div>\n                        </Grid>\n                    }\n\n                </Grid>\n\n\n                <br />\n\n                {\n                    urlConnected &&\n                    <div className=\"deploy-input-section\">\n                        <Grid container spacing={4} alignItems=\"center\" justifyContent='space-between' style={{ gap: '12px' }} className=\"deploy-input-wrapper\">\n                            <Grid item lg={3} md={3} sm={12} xs={12} className=\"fgm-inner-grid each-deploy-input-output-block\">\n                                <div className=\"each-deploy-input-output-section\">\n                                    <div className=\"each-deploy-input-output-title\">Inputs</div>\n                                    {\n                                        deployEndPoints && deployEndPoints.length > 0 && deployEndPoints[0] && deployEndPoints[0][\"details\"] &&\n                                        deployEndPoints[0][\"details\"] && deployEndPoints[0][\"details\"][\"inputs\"] &&\n                                        deployEndPoints[0][\"details\"][\"inputs\"].length > 0 &&\n                                        deployEndPoints[0][\"details\"][\"inputs\"].map((eachInput, inputIndex) => {\n                                            return (\n                                                <div className=\"each-deploy-input-output-main\" key={inputIndex}>\n                                                    <Grid container spacing={2} className=\"each-deploy-input-output-grid\">\n                                                        <Grid item lg={2} md={12} xs={2}>\n                                                            <img src={weightSensorIcon} alt=\"weightSensorIcon\" className=\"weight-sensor-icon\" />\n                                                        </Grid>\n                                                        <Grid item lg={5} md={12} xs={5} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                                            <div className=\"application-host-form\">\n                                                                <span>{eachInput.name}</span>\n                                                            </div>\n                                                        </Grid>\n                                                        <Grid item lg={5} md={12} xs={5} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                                            <Box>\n                                                                <div className=\"mds-left-section\">\n                                                                    <Select defaultValue={this.props.deploy && this.props.deploy.selectedApplicationUeList ? this.props.deploy.selectedApplicationUeList : applicationUeList[0]} options={applicationUeList}\n                                                                        onChange={(value) => {\n\n                                                                            this.props.updateDeploy({\n                                                                                ...this.props.deploy,\n                                                                                selectedApplicationUeList: value\n                                                                            })\n                                                                        }\n                                                                        }\n                                                                    />\n                                                                </div>\n                                                            </Box>\n                                                        </Grid>\n                                                    </Grid>\n                                                </div>\n                                            )\n                                        })\n                                    }\n\n                                </div>\n                            </Grid>\n                            <img src={rightArrowIcon} alt=\"rightArrowIcon\" className=\"right-arrow-icon\" />\n                            <Grid item lg={3} md={3} sm={12} xs={12} className=\"fgm-inner-grid each-deploy-input-output-block\">\n                                <div className=\"each-deploy-input-output-section\">\n                                    <div className=\"each-deploy-input-output-title\">Application</div>\n                                    <div className=\"each-deploy-input-output-app-title\">\n                                        {\n                                            (deployEndPoints && deployEndPoints.length > 0 && deployEndPoints[0] && deployEndPoints[0][\"name\"]) ?\n                                                deployEndPoints[0][\"name\"] : \"\"\n                                        }\n                                    </div>\n\n                                    <div className=\"each-deploy-input-output-app-icon\">\n                                        <img src={applicationIcon} alt=\"applicationIcon\" className=\"applicationIcon\" />\n                                    </div>\n\n                                    <div className=\"each-deploy-input-output-app-analyse\">\n                                        <span onClick={this.analyseApplication}>Analyse</span>\n                                    </div>\n\n                                </div>\n                            </Grid>\n                            <img src={rightArrowIcon} alt=\"rightArrowIcon\" className=\"right-arrow-icon\" />\n                            <Grid item lg={3} md={3} sm={12} xs={12} className=\"fgm-inner-grid each-deploy-input-output-block\" >\n                                <div className=\"each-deploy-input-output-section\">\n                                    <div className=\"each-deploy-input-output-title\">Outputs</div>\n\n                                    {\n                                        deployEndPoints && deployEndPoints.length > 0 && deployEndPoints[0] && deployEndPoints[0][\"details\"] &&\n                                        deployEndPoints[0][\"details\"] && deployEndPoints[0][\"details\"][\"outputs\"] &&\n                                        deployEndPoints[0][\"details\"][\"outputs\"].length > 0 &&\n                                        deployEndPoints[0][\"details\"][\"outputs\"].map((eachOutput, outputIndex) => {\n\n                                            if (eachOutput.type === \"link\") {\n                                                return (\n                                                    <div className=\"each-deploy-input-output-main\" key={outputIndex}>\n                                                        <Grid container spacing={2} className=\"each-deploy-input-output-grid\">\n                                                            <Grid item lg={2} md={3} xs={2}>\n                                                                <img src={analyticsIcon} alt=\"analyticsIcon\" className=\"weight-sensor-icon\" />\n                                                            </Grid>\n                                                            <Grid item lg={4} md={9} xs={4} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                                                <div className=\"application-host-form\">\n                                                                    <span>{eachOutput.name}</span>\n                                                                </div>\n                                                            </Grid>\n                                                            <Grid item lg={6} md={12} xs={6} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                                                <Box>\n                                                                    <div className=\"click-here-to-access-button\"\n                                                                        onClick={() => {\n                                                                            this.props.updateDeploy({})\n                                                                            setTimeout(this.resetState\n                                                                                , 15000);\n                                                                            history.push('/show')\n\n\n                                                                        }}\n                                                                    >\n\n                                                                        Click here to access\n                                                                    </div>\n                                                                </Box>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </div>\n                                                )\n                                            } else {\n                                                return (\n                                                    <div className=\"each-deploy-input-output-sub-section\" key={outputIndex}>\n                                                        <Grid container spacing={2} className=\"each-deploy-input-output-grid\">\n                                                            <Grid item lg={2} md={2} xs={2}>\n                                                                <img src={actuatorIcon} alt=\"actuatorIcon\" className=\"weight-sensor-icon\" />\n                                                            </Grid>\n                                                            <Grid item lg={4} md={4} xs={4} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                                                <div className=\"application-host-form\">\n                                                                    <span>{eachOutput.name}</span>\n                                                                </div>\n                                                            </Grid>\n                                                            <Grid item lg={6} md={6} xs={6} className=\"fgm-inner-grid devices-deploy-custom-column\">\n                                                                <Box>\n                                                                    <div className=\"mds-left-section\">\n                                                                        <Select defaultValue={applicationUeList[0]} options={applicationUeList}\n\n                                                                        />\n                                                                    </div>\n                                                                </Box>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </div>\n                                                )\n                                            }\n\n                                        })\n\n                                    }\n\n                                </div>\n                            </Grid>\n                            <img src={rightArrowIcon} alt=\"rightArrowIcon\" className=\"right-arrow-icon\" style={{ display: 'none' }} />\n                        </Grid>\n                    </div>\n                }\n\n                {\n                    urlConnected && analyzeApplication && !this.props.deploy.deployStats &&\n                    <Grid className='mndb-add-to-network'>\n\n                        <div onClick={() => {\n                            this.props.updateDeploy({\n                                ...this.props.deploy,\n                                deployEndPoints,\n                                applicationUeList,\n                                deployStats\n                            })\n                            history.push('/manage')\n                        }} className={\"mndb-add-to-network-text\"}>\n                            Add Application to Network\n                        </div>\n                    </Grid>\n                }\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    config: state.siteCoordinator.config,\n    toaster: state.siteCoordinator.toaster,\n    deploy: state.siteCoordinator.deploy\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    updateDeploy: (confg) => dispatch(updateDeploy(confg))\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ManageAppDeployment));","/Users/azminds/Documents/five-g/frontend/src/pages/stepperCoreFlow/linearStepper.js",["607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641"],"import React, { Component, useState } from \"react\";\nimport {\n  Typography, TextField, Button, Stepper, Step, StepLabel, Grid, Dialog,\n  DialogTitle, DialogContent, DialogActions, CircularProgress, Collapse, Grow\n} from \"@material-ui/core\";\nimport axios from 'axios';\nimport InputRange from 'react-input-range';\nimport { notify } from 'react-notify-toast';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from 'react-redux';\nimport Widget from \"../../components/Widget\";\n\nimport Select from 'react-select'\n\nimport { useForm, Controller, FormProvider, useFormContext, } from \"react-hook-form\";\n\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\n// import Select, { SelectChangeEvent } from '@mui/material/Select';\n\n//logos\nimport OpenAirInterface_logo from '../../images/new_flow_images/OpenAirInterface_logo.png';\nimport free5GC_logo from '../../images/new_flow_images/free5GC_logo.png';\nimport azure_logo_grey from '../../images/new_flow_images/azure_logo_grey.svg';\nimport nokia_logo_grey from '../../images/new_flow_images/nokia_logo_grey.svg';\n\nimport UERANSIM_logo from '../../images/new_flow_images/UERANSIM_logo.png';\nimport airspan_logo_grey from '../../images/new_flow_images/airspan_logo_grey.svg';\nimport baicells_logo_grey from '../../images/new_flow_images/baicells_logo_grey.png';\n\nimport build_5G_navy_icon from '../../images/new_flow_images/build_5G_navy.svg';\nimport core_5G_navy_icon from '../../images/new_flow_images/core_5G_navy.svg';\nimport AP_5G_navy_icon from '../../images/new_flow_images/AP_5G_navy.svg';\nimport device_5G_navy_icon from '../../images/new_flow_images/device_5G_navy.svg';\n\nimport floor_plan_icon from '../../images/new_flow_images/floor_plan.png';\nimport { Auth } from 'aws-amplify'\n\n\nimport { signupStart, loadUserSuccess } from '../../store/auth/auth.actions'\n\n\nimport 'react-input-range/lib/css/index.css';\n\nimport apiService from '../../services/apiService';\nimport { Link, withRouter } from \"react-router-dom\";\n\n\nclass LinaerStepper extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 10,\n      name: '',\n      company: '',\n      email: '',\n      password: '',\n      verificationCode: '',\n      devices_info: [\n        {\n          name: \"Cameras\", numberOfDevices: 1, selectedMake:\n            { value: 'OAI', label: 'OAI' },\n        },\n        {\n          name: \"Sensors\", numberOfDevices: 1, selectedMake: { value: 'OAI', label: 'OAI' },\n        },\n        {\n          name: \"AGVs\", numberOfDevices: 1, selectedMake: { value: 'OAI', label: 'OAI' },\n        },\n        {\n          name: \"Actuators\", numberOfDevices: 1, selectedMake: { value: 'OAI', label: 'OAI' },\n        },\n        {\n          name: \"Others\", numberOfDevices: 1, selectedMake: { value: 'OAI', label: 'OAI' },\n        }\n      ],\n      makeOptions: [\n        { value: 'UERANSIM', label: 'UERANSIM' },\n        { value: 'OAI', label: 'OAI' },\n        { value: 'srsRAN', label: 'srsRAN' }\n      ],\n      numberOf5gNetworks: 1,\n      fiveGCoreData: [],\n      selectedCore: null,\n      numberOf5gAccessPoints: 2,\n      fiveGAccessPointData: [],\n      selectedAccessPoint: null,\n      activeStep: 0,\n      steps: [0, 1, 2, 3, 4],\n      deployNetworkUnderProgress: false,\n      displaySignUp: false,\n      signUpProgress: false,\n      codeSent: false\n\n    };\n  }\n\n  componentDidMount() {\n    this.getCoresList();\n    this.getAccessPointsList();\n    const { auth } = this.props\n    if (auth.isAuthenticated) {\n      this.setState({ activeStep: 2 })\n\n    }\n\n  }\n  componentDidUpdate(prevProps) {\n    const { auth } = this.props\n    if (auth.isAuthenticated\n      !== prevProps.auth.isAuthenticated) {\n      this.setState({ activeStep: 2 })\n    }\n  }\n  handleOnChange = (event) => {\n\n    let value = event.target.value;\n    if (event.target.name === 'numberOf5gNetworks' || event.target.name === 'numberOf5gAccessPoints')\n      value = value.trim() !== '' ? parseInt(value) : 0;\n\n    this.setState({ [event.target.name]: value });\n\n  }\n\n  buildYour5GNetworkForm = () => {\n\n    const { name, company, email\n      , password, displaySignUp } = this.state;\n\n    return (\n\n      <Grid container spacing={2}>\n        <Grid item lg={12} md={12} xs={12} className=\"fgm-inner-grid BuildYour5GNetworkForm\">\n          <div className=\"form-title-block\">\n            <img src={build_5G_navy_icon} alt=\"build_5G_navy_icon\" className=\"navy_icon\" />\n            <span className=\"form-title\">Build Your 5G Network</span>\n          </div>\n\n          <div className=\"form-main-block\">\n            <div className=\"already-member-title\">Already a member, please\n              <span onClick={() =>\n                this.props.history.push({ pathname: \"/login\" })\n\n              } className=\"signin-title\">Sign In!</span>\n            </div>\n            <div className=\"donot-have-account-title\">Don’t have an account, not a problem. Continue to choose your 5G Network</div>\n            <br />\n            <div className=\"form_container\">\n              <div>\n                <div className=\"form-group input_group\">\n                  <label>Name</label>\n                  <input type=\"text\" value={name} className=\"form-control\" name=\"name\" onChange={this.handleOnChange} spellCheck={false} />\n                </div>\n                <br />\n                <br />\n                <div className=\"form-group input_group\">\n                  <label>Company</label>\n                  <input type=\"text\" value={company} className=\"form-control\" name=\"company\" onChange={this.handleOnChange} spellCheck={false} />\n                </div>\n                <br />\n\n              </div>\n\n              {displaySignUp &&\n                <Grow in={displaySignUp}>\n                  <div>\n                    <div className=\"form-group input_group\">\n                      <label>Email</label>\n                      <input type=\"text\" value={email} className=\"form-control\" name=\"email\" onChange={this.handleOnChange} spellCheck={false} />\n                    </div>\n                    <br />\n                    <br />\n                    <div className=\"form-group input_group\">\n                      <label>Password</label>\n                      <input type=\"password\" value={password} className=\"form-control\" name=\"password\" onChange={this.handleOnChange} spellCheck={false} />\n                    </div>\n                  </div>\n                </Grow>\n              }\n            </div>\n\n          </div>\n        </Grid>\n      </Grid >\n    )\n  }\n\n  resendCode = async () => {\n    try {\n      let { activeStep } = this.state\n      let email = localStorage.getItem(\"registerEmail\")\n\n      const response = await Auth.resendSignUp(email)\n      console.log(response)\n      this.setState({ codeSent: true })\n      setTimeout(() => {\n        this.setState({ codeSent: false })\n\n      }, 10000)\n      notify.show(\"Code resent\", \"custom\", this.props.toaster.duration, this.props.toaster.success);\n\n    } catch (error) {\n      console.log(error)\n      notify.show(error.message, \"custom\", this.props.toaster.duration, this.props.toaster.error);\n\n    }\n  }\n  validateStep = () => {\n\n    const { verificationCode, codeSent } = this.state;\n\n    return (\n\n      <Grid container spacing={2}>\n        <Grid item lg={12} md={12} xs={12} className=\"fgm-inner-grid BuildYour5GNetworkForm\">\n          <div className=\"form-title-block\">\n            <img src={build_5G_navy_icon} alt=\"build_5G_navy_icon\" className=\"navy_icon\" />\n            <span className=\"form-title\">Build Your 5G Network</span>\n          </div>\n\n          <div className=\"form-main-block\">\n            <div className=\"already-member-title\">Already a member, please <span className=\"signin-title\">Sign In!</span></div>\n            <div className=\"donot-have-account-title\">Don’t have an account, not a problem. Continue to choose your 5G Network</div>\n            <br />\n            <div className=\"form_container\">\n\n              <div>\n\n                <div className=\"form-group input_group\">\n                  <label>Verification Code (Check your email)</label>\n                  <input type=\"text\" value={verificationCode} className=\"form-control\" name=\"verificationCode\" onChange={this.handleOnChange} spellCheck={false} />\n                </div>\n                <Button disabled={codeSent} onClick={() => this.resendCode()}>\n                  Resend Code\n                </Button>\n                <br />\n                <br />\n\n\n              </div>\n\n            </div>\n\n          </div>\n        </Grid>\n      </Grid>\n    )\n  }\n\n  getCoresList = () => {\n\n    var thisView = this;\n    if (this.coreOptionsToken)\n      this.coreOptionsToken.cancel();\n    this.coreOptionsToken = axios.CancelToken.source();\n\n    this.setState({ callUnderProgress: true });\n    axios.all([apiService.getCoresList(this.coreOptionsToken.token)])\n      .then(function (res) {\n        if (res[0]) {\n\n          if (res[0] && res[0][\"data\"]) {\n            thisView.setState({ fiveGCoreData: res[0][\"data\"] });\n          }\n\n          thisView.setState({ callUnderProgress: false });\n\n        }\n      }).catch(function (res) {\n        console.log(res);\n        console.log('An error occurred add subscriber element service');\n        thisView.setState({ callUnderProgress: false });\n      });\n\n  }\n\n  updateSelectedCore = (selectedCore) => {\n    this.setState({ selectedCore })\n  }\n\n  fiveGCoreOptional = () => {\n\n    const { fiveGCoreData, numberOf5gNetworks, selectedCore } = this.state;\n\n    return (\n\n      <Grid container spacing={2}>\n        <Grid item lg={12} md={12} xs={12} className=\"fgm-inner-grid FiveGCoreOptional\">\n\n          <div className=\"form-title-block\">\n            <img src={core_5G_navy_icon} alt=\"core_5G_navy_icon\" className=\"navy_icon\" />\n            <span className=\"form-title\">5G Core</span>\n          </div>\n\n          <br />\n\n          <div className=\"form-main-block\">\n            <div className=\"five-g-core-sub-title\">A 5G core is the brains of the 5G network. It is centralized control software and manages authentication, data flows within the network. Pick one of the 5G core from below vendors</div>\n\n            <Grid container spacing={4}>\n              <Grid item lg={10} md={6} xs={12} className=\"fgm-inner-grid\">\n\n                <div className=\"five-g-core-sub-sections\">\n                  <div className=\"five-g-core-sub-section-title\">Number of 5G Networks </div>\n\n                  <div className=\"input-range-slider-block\">\n                    <InputRange\n                      maxValue={50}\n                      minValue={0}\n                      value={numberOf5gNetworks}\n                      onChange={value => this.setState({ numberOf5gNetworks: value })}\n                    />\n\n                    <input\n                      value={numberOf5gNetworks}\n                      name=\"numberOf5gNetworks\"\n                      className=\"input-range-custom-value-block\"\n                      onChange={this.handleOnChange}\n                    />\n                  </div>\n\n                  <br />\n\n                  <div className=\"five-g-core-sub-section-title\">Choose 5G Core </div>\n\n                  <Grid container spacing={0}>\n                    <Grid item lg={10} md={6} xs={12} className=\"fgm-inner-grid\">\n                      <div className=\"core-list\">\n                        <Grid container spacing={0} >\n                          <Grid item md={12} xs={12} className=\"fgm-inner-grid five-core-data-block\">\n                            {\n                              fiveGCoreData && fiveGCoreData.length > 0 &&\n                              fiveGCoreData.map((eachCodeItem, index) => {\n\n                                return (\n                                  <Grid container spacing={0} key={index} className=\"custom-core-grid\" >\n                                    <Grid item xs={12} className=\"fgm-inner-grid five-core-data-block\">\n                                      <div className={`core-manage-options ${(selectedCore && selectedCore.name === eachCodeItem.name) ? \"selected\" : \"\"}`} onClick={() => { this.updateSelectedCore(eachCodeItem) }}>\n                                        <div className=\"cmo-image\">\n                                          <img className={eachCodeItem.name === 'Open5GS' ? \"disable\" : ''} src={process.env.PUBLIC_URL + \"/assets/images/\" + eachCodeItem.logo} alt={eachCodeItem.name} />\n                                        </div>\n                                        <div className=\"cmo-text\">\n                                          <span>{eachCodeItem.name}</span>\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                  </Grid>\n                                )\n                              })\n                            }\n                          </Grid>\n                        </Grid>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </div >\n          <br />\n        </Grid >\n      </Grid >\n    )\n  }\n\n  getAccessPointsList = () => {\n\n    var thisView = this;\n    if (this.getAccessPointToken)\n      this.getAccessPointToken.cancel();\n    this.getAccessPointToken = axios.CancelToken.source();\n\n    this.setState({ callUnderProgress: true });\n    axios.all([apiService.getAccessPointsList(this.getAccessPointToken.token)])\n      .then(function (res) {\n        if (res[0]) {\n\n          if (res[0] && res[0][\"data\"]) {\n            thisView.setState({ fiveGAccessPointData: res[0][\"data\"] });\n          }\n          thisView.setState({ callUnderProgress: false });\n\n        }\n      }).catch(function (res) {\n        console.log(res);\n        console.log('An error occurred add subscriber element service');\n        thisView.setState({ callUnderProgress: false });\n      });\n\n  }\n\n  updateSelectedAccessPoint = (selectedAccessPoint) => {\n    this.setState({ selectedAccessPoint })\n  }\n\n  fiveGAccessPointOptional = () => {\n\n    const { fiveGAccessPointData, numberOf5gAccessPoints, selectedAccessPoint } = this.state;\n\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n\n            <div className=\"form-title-block\">\n              <img src={AP_5G_navy_icon} alt=\"AP_5G_navy_icon\" className=\"navy_icon\" />\n              <span className=\"form-title\">5G Access Point</span>\n            </div>\n\n            <br />\n\n            <Grid container spacing={4}>\n              <Grid item lg={6} md={12} xs={12} className=\"fgm-inner-grid\" style={{ display: 'flex', justifyContent: 'center' }}>\n\n                <div className=\"form-main-block\">\n                  <div className=\"five-g-core-sub-title\">As the name suggests, 5G access points aka gNB s are the radios that connect your end devices over the air.</div>\n                  <div className=\"five-g-core-sub-sections\">\n                    <div className=\"five-g-core-sub-section-title\">Number of Access Points Required</div>\n\n                    <div className=\"input-range-slider-block\">\n                      <InputRange\n                        maxValue={50}\n                        minValue={0}\n                        value={numberOf5gAccessPoints}\n                        onChange={value => this.setState({ numberOf5gAccessPoints: value })}\n                      />\n\n                      <input\n                        value={numberOf5gAccessPoints}\n                        name=\"numberOf5gAccessPoints\"\n                        className=\"input-range-custom-value-block\"\n                        onChange={this.handleOnChange}\n                      />\n\n                    </div>\n\n                    <br />\n\n                    <div className=\"five-g-core-sub-section-title\">Choose 5G Access Point</div>\n\n                    <Grid container spacing={0}>\n                      <Grid item lg={10} md={6} xs={12} className=\"fgm-inner-grid\">\n                        <div className=\"core-list\">\n                          <Grid container spacing={0} >\n                            <Grid item md={12} xs={12} className=\"fgm-inner-grid five-core-data-block\">\n                              {\n                                fiveGAccessPointData && fiveGAccessPointData.length > 0 &&\n                                fiveGAccessPointData.map((eachAccessPointItem, index) => {\n\n                                  return (\n\n                                    <Grid container spacing={0} key={index} className=\"custom-core-grid\" >\n                                      <Grid item xs={12} className=\"fgm-inner-grid five-core-data-block\">\n                                        <div className={`core-manage-options ${(selectedAccessPoint && selectedAccessPoint.name === eachAccessPointItem.name) ? \"selected\" : \"\"}`} onClick={() => { this.updateSelectedAccessPoint(eachAccessPointItem) }}>\n                                          <div className=\"cmo-image\">\n                                            <img src={process.env.PUBLIC_URL + \"/assets/images/\" + eachAccessPointItem.logo} alt={eachAccessPointItem.name} />\n                                          </div>\n                                          <div className=\"cmo-text\">\n                                            <span>{eachAccessPointItem.name}</span>\n                                          </div>\n                                        </div>\n                                      </Grid>\n                                    </Grid>\n                                  )\n                                })\n                              }\n                            </Grid>\n                          </Grid>\n                        </div>\n                      </Grid>\n                    </Grid>\n\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item lg={6} md={12} xs={12} className=\"fgm-inner-grid\" style={{ display: 'flex', justifyContent: 'center' }}>\n                <div className=\"floor_plan_block\">\n                  <img src={floor_plan_icon} alt=\"floor_plan_icon\" className=\"floor_plan_icon\" />\n                </div>\n              </Grid>\n            </Grid>\n\n            <br />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  handleDeviceOnChange = (deviceIndex, value) => {\n\n    let parsedValue = value !== '' ? parseInt(value) : 0;\n    let devices_info = this.state.devices_info.map((eachDevice, index) => {\n      if (deviceIndex === index)\n        return { ...eachDevice, numberOfDevices: parsedValue };\n      else\n        return eachDevice;\n    })\n    this.setState({ devices_info });\n\n  }\n\n  handleSelectMakeChange = (deviceIndex, value) => {\n    let devices_info = this.state.devices_info.map((eachDevice, index) => {\n      if (deviceIndex === index)\n        return { ...eachDevice, selectedMake: value };\n      else\n        return eachDevice;\n    })\n    console.log(deviceIndex, value, devices_info);\n\n    this.setState({ devices_info });\n\n  }\n\n  fiveGDevices = () => {\n\n    const { devices_info, makeOptions } = this.state;\n\n    return (\n      <div className=\"container-fluid FiveGDevices\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n\n            <div className=\"form-title-block\">\n              <img src={device_5G_navy_icon} alt=\"device_5G_navy_icon\" className=\"navy_icon\" />\n              <span className=\"form-title\">5G Devices</span>\n            </div>\n\n            <br />\n\n            <div className=\"form-main-block\">\n              <div className=\"five-g-core-sub-title\">Depending on the application, end devices can be sensors, actuators, robots, computers, and smartphones with 5G modems. </div>\n              <br />\n\n              <div className=\"devices-custom-table\">\n                {\n                  devices_info && devices_info.length > 0 &&\n                  <ul className=\"devices-list-ul\">\n                    {\n                      devices_info.map((device_list, deviceIndex) => {\n\n                        return (\n                          <li className=\"devices-list-li\" key={deviceIndex}>\n                            <div className=\"devices-list-first-column\">\n                              {device_list.name}\n                            </div>\n\n                            <div className=\"devices-list-second-column\">\n                              <Box sx={{ minWidth: 120, maxWidth: 240 }}>\n                                <FormControl fullWidth>\n                                  <Select\n                                    defaultValue={device_list.selectedMake}\n                                    value={device_list.selectedMake}\n                                    options={makeOptions}\n                                    onChange={(value) => { this.handleSelectMakeChange(deviceIndex, value) }}\n                                  // onInputChange={(value) => { this.handleSelectMakeChange(deviceIndex, value) } } \n                                  />\n                                </FormControl>\n                              </Box>\n                            </div>\n\n                            <div className=\"devices-list-third-column\">\n                              <div className=\"input-range-slider-block\">\n                                <InputRange\n                                  maxValue={50}\n                                  minValue={0}\n                                  value={device_list.numberOfDevices}\n                                  onChange={value => { this.handleDeviceOnChange(deviceIndex, value); }}\n                                />\n\n                                <input\n                                  value={device_list.numberOfDevices}\n                                  className=\"input-range-custom-value-block\"\n                                  onChange={(event) => { this.handleDeviceOnChange(deviceIndex, event.target.value); }}\n                                />\n                              </div>\n                            </div>\n                          </li>\n                        )\n                      })\n                    }\n                  </ul>\n\n                }\n              </div>\n\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  getStepContent = (step) => {\n    console.log(\"step\", step)\n    switch (step) {\n      case 0:\n        return this.buildYour5GNetworkForm();\n      case 1:\n        return this.validateStep();\n      case 2:\n        return this.fiveGCoreOptional();\n      case 3:\n        return this.fiveGAccessPointOptional();\n      case 4:\n        return this.fiveGDevices();\n      default:\n        return \"unknown step\";\n    }\n  }\n\n  validateEmail = (mail) => {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\n      return (true)\n    }\n    return (false)\n  }\n  signUp = async (upateStep) => {\n    const { activeStep, name, company, email, password, devices_info, displaySignUp, } = this.state;\n\n    if (name.trim() === '') {\n      notify.show(\"Please Enter Name\", \"custom\", this.props.toaster.duration, this.props.toaster.error);\n    } else if (company.trim() === '') {\n      notify.show(\"Please Enter Company Name\", \"custom\", this.props.toaster.duration, this.props.toaster.error);\n    } else {\n      if (displaySignUp) {\n        if (email.trim() === '') {\n          notify.show(\"Please Enter Email\", \"custom\", this.props.toaster.duration, this.props.toaster.error);\n        } else if (password.trim() === '') {\n          notify.show(\"Please Enter Password\", \"custom\", this.props.toaster.duration, this.props.toaster.error);\n        }\n        // else if (!this.validateEmail(email)) {\n        //   notify.show(\"Please Enter valid Email\", \"custom\", this.props.toaster.duration, this.props.toaster.error);\n        // }\n\n        try {\n          this.setState({ signUpProgress: true })\n          const response = await Auth.signUp({\n            username: email,\n            password,\n\n            attributes: {\n              name,\n              email,\n              'custom:company': company\n            },\n            autoSignIn: true\n\n          })\n          localStorage.setItem(\"registerEmail\", email);\n          console.log(response)\n          this.setState({ activeStep: activeStep + 1 });\n          this.setState({ signUpProgress: false })\n\n\n        } catch (error) {\n          console.log(error)\n          this.setState({ signUpProgress: false })\n\n          notify.show(error.message, \"custom\", this.props.siteCoordinator.toaster.duration, this.props.siteCoordinator.toaster.error);\n        }\n      } else {\n        this.setState({ displaySignUp: true })\n      }\n    }\n  }\n  validationCode = async () => {\n    const { verificationCode, activeStep, password } = this.state;\n\n    if (!verificationCode && verificationCode.trim() === '') {\n      notify.show(\"Please Enter Verification code.\", \"custom\", this.props.toaster.duration, this.props.toaster.error);\n    } else {\n\n      try {\n        let email = localStorage.getItem(\"registerEmail\")\n        const response = await Auth.confirmSignUp(email, verificationCode)\n        console.log(response)\n        this.setState({ activeStep: activeStep + 1 });\n\n        localStorage.removeItem(\"registerEmail\")\n        await Auth.signIn(email, password);\n        await Auth.currentSession();\n        const { username, attributes } = await Auth.currentAuthenticatedUser();\n        const uid = attributes.sub;\n        const userData = {\n          username,\n          uid,\n          name: attributes.name,\n          email: attributes.email,\n          mode: attributes['custom:mode'],\n          role: attributes['custom:role']\n        };\n        this.props.onLoadUserSuccess(userData);\n\n\n      } catch (error) {\n        console.log(error)\n        notify.show(error.message, \"custom\", this.props.toaster.duration, this.props.toaster.error);\n\n      }\n    }\n  }\n  handleNext = (e) => {\n    e.preventDefault();\n\n    const { activeStep, name, company, selectedCore, selectedAccessPoint, verificationCode, displaySignUp } = this.state;\n    console.log('activeStep', activeStep)\n    let upateStep = false;\n    if (activeStep === 0) {\n      this.signUp(upateStep)\n    } else if (activeStep === 1) {\n      this.validationCode()\n    }\n    else if (activeStep === 2) {\n      this.setState({ displaySignUp: false })\n      if (!selectedCore || !selectedCore.name) {\n        notify.show(\"Please Choose Core\", \"custom\", this.props.toaster.duration, this.props.toaster.error);\n      } else {\n        upateStep = true;\n      }\n    } else if (activeStep === 3) {\n      if (!selectedAccessPoint || !selectedAccessPoint.name) {\n        notify.show(\"Please Choose Access Point\", \"custom\", this.props.toaster.duration, this.props.toaster.error);\n      } else {\n        upateStep = true;\n      }\n    } else if (activeStep === 4) {\n      this.deployNetwrok();\n    }\n\n    if (upateStep) {\n      this.setState({ activeStep: activeStep + 1 });\n\n    }\n  }\n\n  deployNetwrok = async () => {\n\n    const { name, company, selectedCore, numberOf5gNetworks, selectedAccessPoint, numberOf5gAccessPoints,\n      devices_info } = this.state;\n\n    let data = {\n      name: name,\n      company: company,\n      cn_make: selectedCore.name,\n      cn_quantity: numberOf5gNetworks,\n      ran_make: selectedAccessPoint.name,\n      ran_quantity: numberOf5gAccessPoints,\n      devices_info: JSON.stringify(devices_info)\n    }\n\n    var thisView = this;\n    if (this.deployNetworkToken)\n      this.deployNetworkToken.cancel();\n    this.deployNetworkToken = axios.CancelToken.source();\n\n    this.setState({ deployNetworkUnderProgress: true });\n    try {\n      const res = await axios.all([apiService.deployNetwork(this.deployNetworkToken.token, data)])\n      console.log(\"res\", res)\n      this.setState({ deployNetworkUnderProgress: false });\n      if (res[0] && res[0][\"data\"]) {\n        this.setState({ fiveGAccessPointData: res[0][\"data\"] });\n      }\n      // window.location.href = \"/simulator/#/monitor\"\n      console.log(this.props)\n      notify.show(\"Network Deployed Successfully\", \"custom\", this.props.siteCoordinator.toaster.duration, this.props.siteCoordinator.toaster.error);\n\n      this.props.history.push({ pathname: \"/monitor\" });\n\n\n    } catch (error) {\n      console.log('An error occurred add subscriber element service', error);\n      this.setState({ deployNetworkUnderProgress: false });\n    }\n\n\n    // axios.all([apiService.deployNetwork(this.deployNetworkToken.token, data)])\n    //   .then(function (res) {\n    //     console.log(\"deploy success\", res)\n    //     if (res[0]) {\n\n    //       if (res[0] && res[0][\"data\"]) {\n    //         thisView.setState({ fiveGAccessPointData: res[0][\"data\"] });\n    //       }\n\n    //       // thisView.props.history.push({ pathname: \"/monitor\" });\n\n    //     }\n    //   }).catch(function (res) {\n    //     console.log(res);\n    //     console.log('An error occurred add subscriber element service');\n    //     thisView.setState({ deployNetworkUnderProgress: false });\n    //   });\n\n  }\n\n  render() {\n    const { activeStep, steps, selectedCore, selectedAccessPoint, deployNetworkUnderProgress, signUpProgress } = this.state;\n\n    const { auth } = this.props;\n\n    return (\n      <div className=\"stepper-container\" >\n        {\n          (<>\n            {\n              activeStep === steps.length ? (\n                <Typography variant=\"h3\" align=\"center\">\n                  Thank You\n                </Typography>\n              ) : (\n                <>\n                  <FormProvider >\n                    <form >\n\n                      <Grid item lg={12} md={12} xs={12} className=\"fgm-inner-grid\">\n                        <div className=\"header-navigation-section\">\n\n                          {\n                            activeStep > -1 &&\n                            <div className=\"each-navigation-block\" onClick={() => { this.setState({ activeStep: 0 }) }} >\n                              <div className=\"each-navigator-title\">\n                                Dolcera\n                              </div>\n                            </div>\n                          }\n                          {\n                            activeStep > 0 &&\n                            <div className=\"each-navigation-block\" onClick={() => { this.setState({ activeStep: 1 }) }} >\n                              <div className=\"each-navigator-title\">\n                                {selectedCore ? selectedCore.name + \"-\" : ''}5G Core\n                              </div>\n                            </div>\n                          }\n\n                          {\n                            activeStep > 1 &&\n                            <div className=\"each-navigation-block\" onClick={() => { this.setState({ activeStep: 2 }) }} >\n                              <div className=\"each-navigator-title\">\n                                {selectedAccessPoint ? selectedAccessPoint.name + \"-\" : ''}5G AP\n                              </div>\n                            </div>\n                          }\n\n                          {\n                            activeStep > 2 &&\n                            <div className=\"each-navigation-block\" onClick={() => { this.setState({ activeStep: 3 }) }} >\n                              <div className=\"each-navigator-title\">\n                                5G Devices\n                              </div>\n                            </div>\n                          }\n\n                        </div>\n                      </Grid>\n                      {this.getStepContent(activeStep)}\n                      <div className=\"container-fluid\">\n                        <div className=\"row\">\n                          <div className=\"col-12\">\n                            <div className=\"form-button-block\">\n                              {\n                                deployNetworkUnderProgress ?\n                                  <CircularProgress size={26} /> :\n                                  <Button\n                                    // className={classes.button}\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={this.handleNext}\n                                    type=\"submit\"\n                                    disabled={signUpProgress}\n                                  >\n                                    {activeStep === steps.length - 1 ? \"Deploy\" : activeStep === 0 && this.state.displaySignUp ? \"Sign Up\" : \"Continue\"}\n                                  </Button>\n                              }\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                    </form>\n                  </FormProvider>\n                </>\n              )}\n\n          </>)\n        }\n\n        <div className=\"stepper-section\">\n\n        </div>\n      </div >\n    );\n  }\n\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  siteCoordinator: state.siteCoordinator,\n  toaster: state.siteCoordinator.toaster,\n\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSignupStart: (formdata, callback) => dispatch(signupStart(formdata, callback)),\n  onLoadUserSuccess: (formdata, callback) => dispatch(loadUserSuccess(formdata, callback))\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LinaerStepper));","/Users/azminds/Documents/five-g/frontend/src/pages/stepperAddAP/linearStepper.js",["642","643","644","645","646","647","648","649","650"],"import {\n  Box,\n  CircularProgress,\n  Collapse, FormLabel,\n  Grid, Paper,\n  TextField,\n  Typography,\n  LinearProgressProps,\n  LinearProgress,\n  withStyles,\n  createStyles,\n} from '@material-ui/core'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport axios from 'axios'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport CustomButton from '../../components/common/Button/button'\nimport apiServices from '../../services/apiService'\nimport './stepperAddAP.scss'\nimport loadingGif from '../../images/home/loading.gif'\nimport tuningGif from '../../images/app/tuning.gif'\nimport { NavLink } from 'react-router-dom';\nimport Accordion from './Accordion'\nimport { notify } from 'react-notify-toast'\n\n\n\n\nfunction LinearStepper(props) {\n  return (\n    <Box>\n      <AddAccessPointForm {...props} />\n    </Box>\n  )\n}\nconst AddAccessPointForm = ({ toaster }) => {\n\n  const [progress, setProgress] = React.useState(0);\n  const [serialLoading, setSerialLoading] = React.useState(false);\n  const [ranParamsLoading, setRanParamsLoading] = React.useState(false);\n  const [deployLoading, setDeployLoading] = React.useState(false);\n  const [deploySuccess, setDeploySuccess] = React.useState(false);\n\n  const [tuningLoading, setTuningLoading] = React.useState(false);\n  const [tuningSuccess, setTuningSuccess] = React.useState(false);\n\n\n\n\n  const [serial, setSerial] = React.useState('');\n  const [serialNo, setSerialNo] = React.useState('');\n  const [ranParams, setRanParams] = React.useState(null);\n\n  async function deployAP() {\n    try {\n      setDeployLoading(true)\n      const result = await axios.all([apiServices.deployAP(ranParams, setProgress)])\n      if (result) {\n        if (result && result[0].data.includes(\"Deployed Sucessfully\")) {\n          setDeploySuccess(true)\n\n        } else {\n          setDeploySuccess(false)\n          notify.show(result[0].data ?? \"Something went wrong\", \"custom\", toaster.duration, toaster.error);\n\n        }\n      }\n\n\n    } catch (error) {\n      notify.show(\"Something went wrong\", \"custom\", toaster.duration, toaster.error);\n\n      setDeploySuccess(false)\n\n      console.log(error);\n      console.log('An error occurred add subscriber element service');\n    }\n    setDeployLoading(false)\n\n\n  }\n\n  async function tuning() {\n    try {\n      setTuningLoading(true)\n      const result = await axios.all([apiServices.tuning()],)\n      if (result && !!result.length) {\n        console.log(result)\n        setTuningSuccess(true)\n        deployAP()\n      } else {\n        notify.show(result[0].data ?? \"Something went wrong\", \"custom\", toaster.duration, toaster.error);\n      }\n\n\n    } catch (error) {\n      notify.show(\"Something went wrong\", \"custom\", toaster.duration, toaster.error);\n\n      console.log(error);\n      console.log('An error occurred add subscriber element service');\n    }\n    setTuningLoading(false)\n\n\n  }\n\n  async function validate_ap() {\n    try {\n      setSerialLoading(true)\n      const result = await axios.all([apiServices.validateAP()])\n      if (result && !!result.length && result[0].data.includes(\"serial\")) {\n        setSerial(result[0]?.data.split(':')[0])\n        setSerialNo(result[0]?.data.split(':')[1])\n        getRanParameters()\n      }\n      else {\n        notify.show(result[0]?.data ?? \"Something went wrong\", \"custom\", toaster.duration, toaster.error);\n\n      }\n\n\n    } catch (error) {\n      notify.show(\"Something went wrong\", \"custom\", toaster.duration, toaster.error);\n\n      console.log('An error occurred add subscriber element service');\n    }\n    setSerialLoading(false)\n\n\n  }\n\n  async function getRanParameters() {\n    try {\n      setRanParamsLoading(true)\n      const result = await axios.all([apiServices.getRanParameters()])\n      if (result && !!result.length) {\n        console.log(result)\n        setRanParams(result[0].data)\n      } else {\n        notify.show(result[0]?.data ?? \"Something went wrong\", \"custom\", toaster.duration, toaster.error);\n\n      }\n\n\n    } catch (error) {\n      notify.show(\"Something went wrong\", \"custom\", toaster.duration, toaster.error);\n\n\n      console.log(error);\n      console.log('An error occurred add subscriber element service');\n    }\n    setRanParamsLoading(false)\n\n\n  }\n\n  React.useEffect(() => {\n    validate_ap()\n  }, [])\n\n  const handleRanParamsChange = (name, value) => {\n    let newParams = ranParams\n    newParams[name] = value\n    setRanParams({\n      ...newParams,\n    })\n  }\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography\n          color='text'\n          className='title'\n        >\n          Add 5-Fi Access point\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Accordion loading={serialLoading} valid={serialNo && !!serialNo.length} enableValidation title={'Found your 5-Fi Access point'}>\n          <Box>\n            <Grid container item xs={12} sm={6}>\n              <Grid item xs={3}>\n                <TextField\n                  fullWidth\n                  id='filled-basic'\n                  InputProps={{\n                    disableUnderline: true,\n                    className: 'form_textfield'\n                  }}\n                  value={serial}\n                />\n              </Grid>\n              <Grid item xs={1}>\n                <Box className='align_sign'>-</Box>\n              </Grid>\n              <Grid item xs={8}>\n                <TextField\n                  fullWidth\n                  id='filled-basic'\n                  InputProps={{\n                    disableUnderline: true,\n                    className: 'form_textfield'\n                  }}\n                  value={serialNo}\n\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </Accordion>\n      </Grid>\n      <Grid container item xs={12}>\n        <Collapse in={!serialLoading && serialNo}>\n          <Accordion loading={ranParamsLoading} valid={ranParams} enableValidation title={'Configuring your Access point automatically'}>\n            <Box className='field'>\n              <Grid container spacing={2}>\n                <Grid container alignItems='center' item xs={12}>\n                  <Grid item xs={4} sm={3} md={2} lg={1}>\n                    <FormLabel>\n                      <Typography className='content'>\n                        NR_Band\n                      </Typography>\n                    </FormLabel>\n                  </Grid>\n\n                  <Grid item xs={12} sm={8}>\n                    <TextField\n                      fullWidth\n                      variant={'outlined'}\n                      disabled={ranParamsLoading}\n                      InputProps={{\n                        disableUnderline: true,\n                        className: 'addAP_textfield'\n                      }}\n                      value={ranParams?.Band}\n                      onChange={(e) => {\n                        handleRanParamsChange('Band', e.target.value)\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Grid container alignItems='center' item xs={12}>\n\n                  <Grid item xs={4} sm={3} md={2} lg={1}>\n                    <FormLabel>\n                      <Typography className='content'>\n                        AMF_IP\n                      </Typography>\n                    </FormLabel>\n                  </Grid>\n\n                  <Grid item xs={12} sm={8}>\n                    <TextField\n                      fullWidth\n                      variant={'outlined'}\n                      disabled={ranParamsLoading}\n                      InputProps={{\n                        disableUnderline: true,\n                        className: 'addAP_textfield'\n                      }}\n                      value={ranParams?.AMF_IP}\n\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container alignItems='center' item xs={12}>\n                  <Grid item xs={4} sm={3} md={2} lg={1}>\n                    <FormLabel>\n                      <Typography className='content'>\n                        MCC\n                      </Typography>\n                    </FormLabel>\n                  </Grid>\n\n                  <Grid item xs={12} sm={8}>\n                    <TextField\n                      fullWidth\n                      variant={'outlined'}\n                      disabled={ranParamsLoading}\n                      InputProps={{\n                        disableUnderline: true,\n                        className: 'addAP_textfield'\n                      }}\n                      value={ranParams?.MCC}\n\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container alignItems='center' item xs={12}>\n                  <Grid item xs={4} sm={3} md={2} lg={1}>\n                    <FormLabel>\n                      <Typography className='content'>\n                        MNC\n                      </Typography>\n                    </FormLabel>\n                  </Grid>\n\n                  <Grid item xs={12} sm={8}>\n                    <TextField\n                      fullWidth\n                      variant={'outlined'}\n                      disabled={ranParamsLoading}\n                      InputProps={{\n                        disableUnderline: true,\n                        className: 'addAP_textfield'\n                      }}\n                      value={ranParams?.MNC}\n\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container alignItems='center' item xs={12}>\n                  <Grid item xs={4} sm={3} md={2} lg={1}>\n                    <FormLabel>\n                      <Typography className='content'>\n                        TAC\n                      </Typography>\n                    </FormLabel>\n                  </Grid>\n\n                  <Grid item xs={12} sm={8}>\n                    <TextField\n                      fullWidth\n                      variant={'outlined'}\n                      disabled={ranParamsLoading}\n                      InputProps={{\n                        disableUnderline: true,\n                        className: 'addAP_textfield'\n                      }}\n                      value={ranParams?.TAC}\n\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container alignItems='center' item xs={12}>\n                  <Grid item xs={4} sm={3} md={2} lg={1}>\n                    <FormLabel>\n                      <Typography className='content'>\n                        SST\n                      </Typography>\n                    </FormLabel>\n                  </Grid>\n\n                  <Grid item xs={12} sm={8}>\n                    <TextField\n                      fullWidth\n                      variant={'outlined'}\n                      disabled={ranParamsLoading}\n                      InputProps={{\n                        disableUnderline: true,\n                        className: 'addAP_textfield'\n                      }}\n                      value={ranParams?.SST}\n\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container alignItems='center' item xs={12}>\n                  <Grid item xs={4} sm={3} md={2} lg={1}>\n                    <FormLabel>\n                      <Typography className='content'>\n                        SD\n                      </Typography>\n                    </FormLabel>\n                  </Grid>\n\n                  <Grid item xs={12} sm={8}>\n                    <TextField\n                      fullWidth\n                      variant={'outlined'}\n                      disabled={ranParamsLoading}\n                      InputProps={{\n                        disableUnderline: true,\n                        className: 'addAP_textfield'\n                      }}\n                      value={ranParams?.SD}\n\n                    />\n                  </Grid>\n\n                </Grid>\n                <Grid container alignItems='center' item xs={12}>\n                  <Grid item xs={4} sm={3} md={2} lg={1}>\n                    <FormLabel>\n                      <Typography className='content'>\n                        Gain\n                      </Typography>\n                    </FormLabel>\n                  </Grid>\n\n                  <Grid item xs={12} sm={8}>\n                    <TextField\n                      fullWidth\n                      variant={'outlined'}\n                      disabled={ranParamsLoading}\n                      InputProps={{\n                        disableUnderline: true,\n                        className: 'addAP_textfield'\n                      }}\n                      value={ranParams?.Gain}\n\n                    />\n                  </Grid>\n\n                </Grid>\n\n              </Grid>\n            </Box>\n          </Accordion>\n        </Collapse>\n\n        <Grid item xs={12}>\n          <Collapse in={!serialLoading && serialNo && ranParams}>\n\n            <Box width={'30%'} m={'10px 0 20px 0'}>\n\n              <CustomButton\n                onClick={() => { tuning() }}\n                buttonText={tuningLoading && deployLoading ? 'Deploying' : 'Deploy'}\n                fullWidth\n                disabled={tuningLoading && deployLoading}\n              />\n            </Box>\n          </Collapse>\n\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Collapse in={tuningLoading || deployLoading || tuningSuccess}>\n          <Accordion initChecked={!deploySuccess} valid={tuningSuccess && deploySuccess} loading={tuningLoading || deployLoading} enableValidation title={'Tuning Radio parameters for you'}>\n            <Box display={'flex'} flexDirection={'column'} justifyItems={'center'} alignItems={'center'} margin={'0 auto'} width={'40%'}>\n\n              <img className='tuning' src={tuningGif} alt={'loadng'} />\n              {/* <Box width={'100%'}>\n\n                <LinearProgressWithLabel value={12} />\n              </Box> */}\n\n            </Box>\n          </Accordion>\n        </Collapse>\n      </Grid>\n      <Grid item xs={12}>\n        <Collapse in={deploySuccess && tuningSuccess}>\n          <Accordion valid={deploySuccess && tuningSuccess} enableValidation title={'You are all set'} />\n        </Collapse>\n        <Grid item xs={12}>\n          <Collapse in={deploySuccess && tuningSuccess}>\n\n            <Box width={'15%'} m={'10px 0 20px 0'}>\n              <NavLink to={'/monitor'}>\n                <CustomButton\n                  buttonText={'Done'}\n                  fullWidth\n                />\n              </NavLink>\n            </Box>\n          </Collapse>\n\n        </Grid>\n      </Grid>\n    </Grid >\n  )\n}\nconst BorderLinearProgress = withStyles((theme) =>\n  createStyles({\n    root: {\n      height: 10,\n      borderRadius: 5,\n    },\n    colorPrimary: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: '#1a90ff',\n    },\n  }),\n)(LinearProgress);\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <BorderLinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  config: state.siteCoordinator.config,\n  toaster: state.siteCoordinator.toaster\n})\n\nconst mapDispatchToProps = dispatch => ({})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LinearStepper)\n","/Users/azminds/Documents/five-g/frontend/src/pages/device/components/CustomTable.jsx",["651"],"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    background: '#F4F4F5 0% 0% no-repeat padding-box',\n    color: '#111111',\n    fontStyle: 'normal',\n    fontSize: '13px',\n    lineHeight: '24px',\n    fontFamily: 'Poppins, sans-serif',\n    fontWeight: 'bold',\n    border: '1px solid #E2E3E3'\n  },\n  [`&.${tableCellClasses.body}`]: {\n    color: '#030303',\n    fontStyle: 'normal',\n    fontSize: '16px',\n    lineHeight: '25px',\n    fontFamily: 'Poppins, sans-serif',\n    border: '1px solid #E2E3E3'\n  }\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({}));\n\nexport default function CustomTable({ tableData }) {\n  return (\n    <TableContainer>\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>IMSI</StyledTableCell>\n            <StyledTableCell>Assign Devices type/Network slice</StyledTableCell>\n            <StyledTableCell>Status</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tableData.map((data) => (\n            <StyledTableRow key={data.id}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {data.imsi}\n              </StyledTableCell>\n              <StyledTableCell>{data.type}</StyledTableCell>\n              <StyledTableCell>{data.status}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/Users/azminds/Documents/five-g/frontend/src/pages/inspectManage/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/stepperAddAP/Accordion.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/inspectManage/inspectManageNetwork.js",["652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670"],"import React, { useState, useEffect } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nimport Widget from \"../../components/Widget\";\nimport \"./inspectManageNetwork.scss\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\n\nimport loading_icon from '../../images/home/loading.gif';\n\nimport {\n    Grid\n} from \"@material-ui/core\";\nimport Box from '@mui/material/Box';\nimport moment from 'moment';\n\nimport Terminal from \"terminal-in-react\";\nimport pseudoFileSystem from \"terminal-in-react-pseudo-file-system-plugin\";\nimport NodeEvalPlugin from 'terminal-in-react-node-eval-plugin';\n\n// import uuid from \"uuid/v4\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport dots_icon from '../../images/new_flow_images/dots.svg';\nimport apiService from '../../services/apiService.js';\nimport { getAccordionDetailsUtilityClass } from \"@mui/material\";\n\nconst FileSystemPlugin = pseudoFileSystem();\n\nconst logsData = [\n    // { id: uuidv4(), content: \"AMF\" },\n    // { id: uuidv4(), content: \"SMF\" },\n    // { id: uuidv4(), content: \"UPF1\" },\n    // { id: uuidv4(), content: \"UPF2\" },\n    // { id: uuidv4(), content: \"Device1\" },\n    // { id: uuidv4(), content: \"Device2\" },\n    // { id: uuidv4(), content: \"Device3\" },\n    // { id: uuidv4(), content: \"Device4\" },\n    // { id: uuidv4(), content: \"Device5\" },\n    // { id: uuidv4(), content: \"Device6\" }\n]\n\nconst columnsFromBackend = {\n    [\"id1\"]: {\n        name: \"Logs / Terminals / Packets\",\n        items: logsData\n    },\n    [\"id2\"]: {\n        name: \"tab section 1\",\n        items: []\n    },\n    [\"id3\"]: {\n        name: \"tab section 2\",\n        items: []\n    },\n    [\"id4\"]: {\n        name: \"tab section 3\",\n        items: []\n    },\n    [\"id5\"]: {\n        name: \"tab section 4\",\n        items: []\n    }\n};\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    // console.log(\"children :\", children, \"value :\", value, \"index :\", index);\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\n//create your forceUpdate hook\nfunction useForceUpdate() {\n    const [value, setValue] = useState(0); // integer state\n    return () => setValue(value => value + 1); // update state to force render\n    // An function that increment 👆🏻 the previous state like here \n    // is better than directly setting `value + 1`\n}\n\nfunction DragAndDrapComponent() {\n    const [columns, setColumns] = useState(columnsFromBackend);\n    const [callUnderProgress, setCallUnderProgress] = useState(false);\n    const [logsToken, setLogsToken] = useState(null);\n    const [inspectElementToken, setEnspectElementToken] = useState(null);\n    const [inspectList, setInspectList] = useState([]);\n    const [firstTabSectionValue, setFirstTabSectionChange] = useState(0); //{\"tab0\":0, \"tab1\": 0, \"tab2\": 0, \"tab3\": 0});\n    const [logsData, setLogsData] = useState({});\n    const [loadingList, setLoadingList] = useState({});\n\n    useEffect(() => {\n        getInspectList();\n    }, []);\n\n    const handleFirstSectionChange = (index, newValue) => {\n        // console.log(\"newValue :\", index, newValue);\n        // let tabValues = firstTabSectionValue;\n        // tabValues[\"tab\"+index] = newValue;\n        setFirstTabSectionChange(newValue);\n    };\n\n    const getInspectList = () => {\n\n        if (inspectElementToken)\n            inspectElementToken.cancel();\n        let tokenData = axios.CancelToken.source();\n        setEnspectElementToken(tokenData);\n\n        setCallUnderProgress(true);\n        axios.all([apiService.getInspectList(tokenData.token)])\n            .then(function (res) {\n                if (res[0]) {\n\n                    let inspectList = (res[0][\"data\"] && res[0][\"data\"]) ? res[0][\"data\"] : [];\n                    setInspectList(inspectList);\n                    let columsData = columnsFromBackend;\n                    columsData[\"id1\"][\"items\"] = inspectList;\n                    setColumns(columsData);\n                    setCallUnderProgress(false);\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n                setCallUnderProgress(false);\n            });\n\n    }\n\n    const onDragEnd = (result, columns, setColumns) => {\n        if (!result.destination) return;\n        const { source, destination } = result;\n\n        if (source.droppableId !== destination.droppableId) {\n            const sourceColumn = columns[source.droppableId];\n            const destColumn = columns[destination.droppableId];\n            const sourceItems = [...sourceColumn.items];\n            const destItems = [...destColumn.items];\n            const [removed] = sourceItems.splice(source.index, 1);\n            destItems.splice(destination.index, 0, removed);\n            setColumns({\n                ...columns,\n                [source.droppableId]: {\n                    ...sourceColumn,\n                    items: sourceItems\n                },\n                [destination.droppableId]: {\n                    ...destColumn,\n                    items: destItems\n                }\n            });\n            console.log(result,);\n            getData(result.draggableId, destination.droppableId);\n        } else {\n            const column = columns[source.droppableId];\n            const copiedItems = [...column.items];\n            const [removed] = copiedItems.splice(source.index, 1);\n            copiedItems.splice(destination.index, 0, removed);\n            setColumns({\n                ...columns,\n                [source.droppableId]: {\n                    ...column,\n                    items: copiedItems\n                }\n            });\n        }\n    };\n\n    const updateLoading = (item, status) => {\n        console.log(item, status);\n        let loadingListNew = loadingList;\n        loadingListNew[item] = status;\n        setLoadingList(loadingListNew);\n    }\n\n    const getData = (item, type) => {\n\n        // if (logsToken)\n        //     logsToken.cancel();\n        // let logsTokenData = axios.CancelToken.source();\n        // setLogsToken(logsTokenData);\n\n        let dataType = \"logs\";\n        if (type === \"id3\") {\n            dataType = \"packets\";\n        } else if (type === \"id4\") {\n            dataType = \"terminals\";\n            return;\n        } else if (type === \"id5\") {\n            dataType = \"terminals\";\n            return;\n        }\n        setLoadingList({ ...loadingList, [item]: true });\n\n        setCallUnderProgress(true);\n        updateLoading(item, true);\n        axios.all([apiService.getLogsData(item, dataType)])\n            .then(function (res) {\n                if (res[0]) {\n                    let itemLogsData = (res[0][\"data\"] && res[0][\"data\"]) ? res[0][\"data\"] : [];\n                    let logsDataNew = logsData;\n                    logsDataNew[item] = itemLogsData\n                    setLogsData(logsDataNew);\n                    setLoadingList({ ...loadingList, [item]: false });\n                }\n            }).catch(function (res) {\n                console.log(res);\n                console.log('An error occurred monitor service');\n                setCallUnderProgress(false);\n                setLoadingList({ ...loadingList, [item]: false });\n            });\n\n    }\n\n    const blockTitle = (index) => {\n        switch (index) {\n            case 1:\n                return \"Logs\"\n                break;\n            case 2:\n                return \"Packets\"\n                break;\n            case 3:\n                return \"Terminals\"\n                break;\n            case 4:\n                return \"Terminals\"\n                break;\n            default:\n                break;\n        }\n    }\n\n    const forceUpdate = useForceUpdate();\n\n    return (\n\n        <div className=\"five-g-inspect-container\" style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n            <DragDropContext\n                onDragEnd={result => onDragEnd(result, columns, setColumns)}\n            >\n\n\n                <Grid container spacing={2}>\n                    <Grid item lg={3} md={3} xs={12}>\n\n                        {\n                            Object.entries(columns).map(([columnId, column], index) => {\n                                // console.log(\"column : \", column);\n                                return (\n                                    column[\"name\"] === \"Logs / Terminals / Packets\" &&\n                                    (\n                                        <Grid container spacing={2} className=\"inspect-left-sidebar-main\" key={index}>\n                                            <Grid item md={12} xs={12} className=\"fgm-inner-grid inspect-left-sidebar-section\">\n                                                <Widget\n                                                    // title=\"Logs / Terminals / Packets\"\n                                                    upperTitle\n                                                    bodyclassName={''}\n                                                    className=\"test\"\n                                                    disableWidgetMenu={true}\n                                                    fontBold={true}\n                                                >\n                                                    <div className=\"inspect-left-sidebar-block\"\n                                                        key={columnId}\n                                                    >\n                                                        <div className=\"inspect-left-bar-title\">{column.name}</div>\n                                                        <div className=\"droppable-main-section\" style={{ margin: 8 }}>\n                                                            <Droppable droppableId={columnId} key={columnId}>\n                                                                {(provided, snapshot) => {\n                                                                    return (\n                                                                        <div\n                                                                            {...provided.droppableProps}\n                                                                            ref={provided.innerRef}\n                                                                        >\n                                                                            {column.items.map((item, index) => {\n                                                                                return (\n                                                                                    <Draggable\n                                                                                        key={item.id}\n                                                                                        draggableId={item.id}\n                                                                                        index={index}\n                                                                                    >\n                                                                                        {(provided, snapshot) => {\n                                                                                            return (\n                                                                                                <div className=\"logs-list-section\"\n                                                                                                    ref={provided.innerRef}\n                                                                                                    {...provided.draggableProps}\n                                                                                                    {...provided.dragHandleProps}\n                                                                                                    style={{\n                                                                                                        backgroundColor: snapshot.isDragging\n                                                                                                            ? \"#263B4A\"\n                                                                                                            : \"#F0F2FC\",\n                                                                                                        color: snapshot.isDragging\n                                                                                                            ? \"#fff\"\n                                                                                                            : \"#2F2F2F\",\n                                                                                                        ...provided.draggableProps.style\n                                                                                                    }}\n                                                                                                >\n                                                                                                    <span className=\"logs-list-name\">{item.content}</span>\n                                                                                                    <span className=\"logs-list-drag-icon\"><img src={dots_icon} alt=\"dots_icon\" className=\"dots_icon\" /></span>\n                                                                                                </div>\n                                                                                            );\n                                                                                        }}\n                                                                                    </Draggable>\n                                                                                );\n                                                                            })}\n                                                                            {provided.placeholder}\n                                                                        </div>\n                                                                    );\n                                                                }}\n                                                            </Droppable>\n                                                        </div>\n                                                    </div>\n                                                </Widget>\n\n                                            </Grid>\n                                        </Grid>\n                                    )\n\n                                );\n                            })}\n\n                    </Grid>\n\n                    <Grid item lg={9} md={9} xs={12} className=\"custom-right-grid-container\">\n                        {\n                            Object.entries(columns).map(([columnId, column], blockIndex) => {\n                                // console.log(\"column : \", column);\n                                return (\n\n                                    column[\"name\"] !== \"Logs / Terminals / Packets\" &&\n                                    <div className=\"custom-right-grid\" key={blockIndex}>\n                                        <Grid container spacing={2}>\n                                            <Grid item lg={12} md={12} xs={12} className=\"fgm-inner-grid inspect-manage-right-container\">\n                                                <Widget\n                                                    upperTitle\n                                                    bodyclassName={''}\n                                                    className=\"\"\n                                                    disableWidgetMenu={true}\n                                                    fontBold={true}\n                                                >\n\n                                                    <div className=\"inspect-right-bar-section\">\n                                                        <div\n                                                            key={columnId}\n                                                        >\n                                                            {/* <div className=\"inspect-left-bar-title\">{column.name}</div> */}\n                                                            <div className=\"inspect-manage-main-section\">\n\n                                                                <Box sx={{ width: '100%' }}>\n                                                                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                                                        <Tabs value={firstTabSectionValue} onChange={handleFirstSectionChange} aria-label=\"inspect manage tabs\">\n                                                                            <Tab label={blockTitle(blockIndex)} {...a11yProps(0)} />\n                                                                            {/* <Tab label=\"AMF Logs\" {...a11yProps(1)} />\n                                                                            <Tab label=\"UPF1 Logs\" {...a11yProps(2)} /> */}\n                                                                        </Tabs>\n                                                                    </Box>\n                                                                    {/* <TabPanel value={firstTabSectionValue} index={0}>\n                                                                        SMF Logs\n                                                                    </TabPanel>\n                                                                    <TabPanel value={firstTabSectionValue} index={1}>\n                                                                        AMF Logs\n                                                                    </TabPanel>\n                                                                    <TabPanel value={firstTabSectionValue} index={2}>\n                                                                        UPF1 Logs\n                                                                    </TabPanel> */}\n                                                                </Box>\n\n                                                                <Droppable droppableId={columnId} key={columnId}>\n                                                                    {(provided, snapshot) => {\n                                                                        return (\n                                                                            <div\n                                                                                {...provided.droppableProps}\n                                                                                ref={provided.innerRef}\n                                                                                className=\"each-tab-section\"\n                                                                            >\n                                                                                {column.items.map((item, index) => {\n                                                                                    return (\n                                                                                        <Draggable\n                                                                                            key={item.id}\n                                                                                            draggableId={item.id}\n                                                                                            index={index}\n                                                                                        >\n                                                                                            {(provided, snapshot) => {\n                                                                                                return (\n                                                                                                    <div\n                                                                                                        ref={provided.innerRef}\n                                                                                                        {...provided.draggableProps}\n                                                                                                        {...provided.dragHandleProps}\n                                                                                                        className=\"each-droppable-item\"\n                                                                                                        style={{\n                                                                                                            backgroundColor: snapshot.isDragging\n                                                                                                                ? \"#263B4A\"\n                                                                                                                : \"#F0F2FC\",\n                                                                                                            color: snapshot.isDragging ? \"#FFF\"\n                                                                                                                : \"#2F2F2F\",\n                                                                                                            ...provided.draggableProps.style\n                                                                                                        }}\n                                                                                                    >\n                                                                                                        <span className=\"logs-list-name\">{item.content}</span>\n                                                                                                        <span className=\"logs-list-drag-icon\"><img src={dots_icon} alt=\"dots_icon\" className=\"dots_icon\" /></span>\n                                                                                                        <div className=\"lln-details\">\n                                                                                                            {\n                                                                                                                loadingList[item.id] ?\n                                                                                                                    <div className=\"llnd-loading\">\n                                                                                                                        <img src={loading_icon} />\n                                                                                                                    </div> : (\n                                                                                                                        blockIndex === 2 ? (\n                                                                                                                            <div className=\"fdg-packets-container\">\n                                                                                                                                <div className=\"fdgpc-head\">\n                                                                                                                                    <div className=\"fdgpce-row\">Number</div>\n                                                                                                                                    <div className=\"fdgpce-row\">Time</div>\n                                                                                                                                    <div className=\"fdgpce-row\">Source</div>\n                                                                                                                                    <div className=\"fdgpce-row\">Destination</div>\n                                                                                                                                    <div className=\"fdgpce-row\">Protocol</div>\n                                                                                                                                    <div className=\"fdgpce-row\">Details</div>\n                                                                                                                                </div>\n                                                                                                                                {\n                                                                                                                                    logsData && logsData[item.id] && logsData[item.id].length > 0 &&\n                                                                                                                                    logsData[item.id].map((eachPacket, index) => {\n                                                                                                                                        return (\n                                                                                                                                            <div key={index} className=\"fdgpc-each\">\n\n                                                                                                                                                <div className=\"fdgpce-row\">{index + 1}</div>\n                                                                                                                                                <div className=\"fdgpce-row\">\n                                                                                                                                                    {\n                                                                                                                                                        eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"frame.time\"] && eachPacket._source.layers[\"frame.time\"][0] &&\n                                                                                                                                                            eachPacket._source.layers[\"frame.time\"][0].includes(\"IST\")\n                                                                                                                                                            ?\n                                                                                                                                                            moment(eachPacket._source.layers[\"frame.time\"][0].split(\"IST\")[0]).format('MM-DD-YYYY hh:mm:ss')\n                                                                                                                                                            : moment(eachPacket._source.layers[\"frame.time\"][0]).format('MM-DD-YYYY hh:mm:ss')\n                                                                                                                                                    }\n                                                                                                                                                </div>\n                                                                                                                                                <div className=\"fdgpce-row\">\n                                                                                                                                                    {\n                                                                                                                                                        eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"ip.src\"] &&\n                                                                                                                                                        eachPacket._source.layers[\"ip.src\"][0]\n                                                                                                                                                    }\n                                                                                                                                                </div>\n                                                                                                                                                <div className=\"fdgpce-row\">\n                                                                                                                                                    {\n                                                                                                                                                        eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"ip.src\"] &&\n                                                                                                                                                        eachPacket._source.layers[\"ip.dst\"][0]\n                                                                                                                                                    }\n                                                                                                                                                </div>\n                                                                                                                                                <div className=\"fdgpce-row\">\n                                                                                                                                                    {\n                                                                                                                                                        eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"_ws.col.Protocol\"] &&\n                                                                                                                                                        eachPacket._source.layers[\"_ws.col.Protocol\"][0]\n                                                                                                                                                    }\n                                                                                                                                                </div>\n                                                                                                                                                <div className=\"fdgpce-row\">\n                                                                                                                                                    {\n                                                                                                                                                        eachPacket._source && eachPacket._source.layers && eachPacket._source.layers[\"_ws.col.Info\"] &&\n                                                                                                                                                        eachPacket._source.layers[\"_ws.col.Info\"][0]\n                                                                                                                                                    }\n                                                                                                                                                </div>\n                                                                                                                                            </div>\n                                                                                                                                        )\n                                                                                                                                    })\n                                                                                                                                }\n\n                                                                                                                            </div>\n                                                                                                                        ) : (\n\n                                                                                                                            (blockIndex === 3 || blockIndex === 4) ? (\n                                                                                                                                <Terminal\n                                                                                                                                    plugins={[FileSystemPlugin,\n                                                                                                                                        {\n                                                                                                                                            class: NodeEvalPlugin,\n                                                                                                                                            config: { filesystem: FileSystemPlugin.displayName }\n                                                                                                                                        }\n                                                                                                                                    ]} />\n                                                                                                                            ) : (\n                                                                                                                                logsData && logsData[item.id] && logsData[item.id].length > 0 &&\n                                                                                                                                logsData[item.id].map((eachLog, index) => {\n                                                                                                                                    return (\n                                                                                                                                        <span key={index}>{eachLog}</span>\n                                                                                                                                    )\n                                                                                                                                })\n                                                                                                                            )\n\n\n                                                                                                                        )\n\n                                                                                                                    )\n\n                                                                                                            }\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                );\n                                                                                            }}\n                                                                                        </Draggable>\n                                                                                    );\n                                                                                })}\n                                                                                {provided.placeholder}\n                                                                            </div>\n                                                                        );\n                                                                    }}\n                                                                </Droppable>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                </Widget>\n\n                                            </Grid>\n                                        </Grid>\n                                    </div>\n                                )\n\n                            })}\n                    </Grid>\n                </Grid>\n\n            </DragDropContext>\n        </div>\n    );\n}\n\nexport default DragAndDrapComponent;\n","/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/index.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/HomeView.component.js",["671","672","673"],"/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/components/Stepper/Stepper.js",["674","675","676"],"/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/components/Stepper/Steps/Step4.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/components/Stepper/Steps/Step3.js",[],"/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/components/Stepper/Steps/Step2.js",["677","678"],"/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/components/Stepper/Steps/Step1.js",["679","680","681","682","683","684"],"/Users/azminds/Documents/five-g/frontend/src/pages/HomeView/components/Stepper/Steps/components/Wrapper.js",["685"],"import React from \"react\";\n\nimport { Container, Grid, Stack, Typography } from \"@mui/material\";\n\nconst Wrapper = ({ icon, title, children }) => {\n  return (\n    <Container maxWidth={false}>\n      <Stack direction={\"row\"} spacing={2} margin={\"49px 0\"}>\n        <img src={icon} height=\"51px\" width=\"50px\" alt=\"tell_us\" />\n        <Typography\n          sx={{\n            fontFamily: \"Poppins, sans-serif\",\n            fontStyle: \"normal\",\n            fontWeight: 600,\n            fontSize: \"28px\",\n            lineHeight: \"42px\",\n            color: \"#14395E\",\n          }}\n        >\n          {title ?? \"\"}\n        </Typography>\n      </Stack>\n      {children}\n    </Container>\n  );\n};\n\nexport default Wrapper;\n","/Users/azminds/Documents/five-g/frontend/src/components/CustomButton.js",[],{"ruleId":"686","replacedBy":"687"},{"ruleId":"688","replacedBy":"689"},{"ruleId":"690","severity":1,"message":"691","line":28,"column":8,"nodeType":"692","endLine":28,"endColumn":10,"suggestions":"693"},{"ruleId":"694","severity":1,"message":"695","line":12,"column":8,"nodeType":"696","messageId":"697","endLine":12,"endColumn":13},{"ruleId":"694","severity":1,"message":"698","line":14,"column":10,"nodeType":"696","messageId":"697","endLine":14,"endColumn":26},{"ruleId":"694","severity":1,"message":"699","line":15,"column":10,"nodeType":"696","messageId":"697","endLine":15,"endColumn":14},{"ruleId":"694","severity":1,"message":"700","line":15,"column":16,"nodeType":"696","messageId":"697","endLine":15,"endColumn":19},{"ruleId":"694","severity":1,"message":"701","line":27,"column":9,"nodeType":"696","messageId":"697","endLine":27,"endColumn":15},{"ruleId":"702","severity":1,"message":"703","line":5,"column":5,"nodeType":"704","messageId":"705","endLine":7,"endColumn":6},{"ruleId":"694","severity":1,"message":"706","line":69,"column":9,"nodeType":"696","messageId":"697","endLine":69,"endColumn":17},{"ruleId":"690","severity":1,"message":"707","line":75,"column":6,"nodeType":"692","endLine":75,"endColumn":8,"suggestions":"708"},{"ruleId":"694","severity":1,"message":"709","line":1,"column":17,"nodeType":"696","messageId":"697","endLine":1,"endColumn":25},{"ruleId":"694","severity":1,"message":"710","line":3,"column":10,"nodeType":"696","messageId":"697","endLine":3,"endColumn":17},{"ruleId":"694","severity":1,"message":"711","line":14,"column":3,"nodeType":"696","messageId":"697","endLine":14,"endColumn":10},{"ruleId":"694","severity":1,"message":"712","line":15,"column":3,"nodeType":"696","messageId":"697","endLine":15,"endColumn":7},{"ruleId":"694","severity":1,"message":"713","line":16,"column":3,"nodeType":"696","messageId":"697","endLine":16,"endColumn":11},{"ruleId":"694","severity":1,"message":"699","line":42,"column":10,"nodeType":"696","messageId":"697","endLine":42,"endColumn":14},{"ruleId":"694","severity":1,"message":"714","line":127,"column":8,"nodeType":"696","messageId":"697","endLine":127,"endColumn":14},{"ruleId":"694","severity":1,"message":"715","line":127,"column":16,"nodeType":"696","messageId":"697","endLine":127,"endColumn":25},{"ruleId":"694","severity":1,"message":"716","line":142,"column":9,"nodeType":"696","messageId":"697","endLine":142,"endColumn":28},{"ruleId":"694","severity":1,"message":"717","line":155,"column":9,"nodeType":"696","messageId":"697","endLine":155,"endColumn":20},{"ruleId":"718","severity":1,"message":"719","line":199,"column":13,"nodeType":"720","endLine":199,"endColumn":59},{"ruleId":"721","severity":1,"message":"722","line":49,"column":93,"nodeType":"723","messageId":"724","endLine":49,"endColumn":94},{"ruleId":"694","severity":1,"message":"725","line":14,"column":10,"nodeType":"696","messageId":"697","endLine":14,"endColumn":20},{"ruleId":"718","severity":1,"message":"719","line":169,"column":49,"nodeType":"720","endLine":169,"endColumn":74},{"ruleId":"726","severity":1,"message":"727","line":15,"column":46,"nodeType":"728","messageId":"729","endLine":15,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":37,"column":46,"nodeType":"728","messageId":"729","endLine":37,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":60,"column":46,"nodeType":"728","messageId":"729","endLine":60,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":83,"column":46,"nodeType":"728","messageId":"729","endLine":83,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":105,"column":46,"nodeType":"728","messageId":"729","endLine":105,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":128,"column":46,"nodeType":"728","messageId":"729","endLine":128,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":151,"column":46,"nodeType":"728","messageId":"729","endLine":151,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":173,"column":46,"nodeType":"728","messageId":"729","endLine":173,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":196,"column":46,"nodeType":"728","messageId":"729","endLine":196,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":219,"column":46,"nodeType":"728","messageId":"729","endLine":219,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":241,"column":46,"nodeType":"728","messageId":"729","endLine":241,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":264,"column":46,"nodeType":"728","messageId":"729","endLine":264,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":286,"column":46,"nodeType":"728","messageId":"729","endLine":286,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":308,"column":46,"nodeType":"728","messageId":"729","endLine":308,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":330,"column":46,"nodeType":"728","messageId":"729","endLine":330,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":352,"column":46,"nodeType":"728","messageId":"729","endLine":352,"endColumn":47},{"ruleId":"694","severity":1,"message":"730","line":368,"column":15,"nodeType":"696","messageId":"697","endLine":368,"endColumn":21},{"ruleId":"726","severity":1,"message":"727","line":374,"column":46,"nodeType":"728","messageId":"729","endLine":374,"endColumn":47},{"ruleId":"694","severity":1,"message":"730","line":390,"column":15,"nodeType":"696","messageId":"697","endLine":390,"endColumn":21},{"ruleId":"726","severity":1,"message":"727","line":396,"column":46,"nodeType":"728","messageId":"729","endLine":396,"endColumn":47},{"ruleId":"694","severity":1,"message":"730","line":412,"column":15,"nodeType":"696","messageId":"697","endLine":412,"endColumn":21},{"ruleId":"726","severity":1,"message":"727","line":418,"column":46,"nodeType":"728","messageId":"729","endLine":418,"endColumn":47},{"ruleId":"694","severity":1,"message":"730","line":434,"column":15,"nodeType":"696","messageId":"697","endLine":434,"endColumn":21},{"ruleId":"726","severity":1,"message":"727","line":440,"column":46,"nodeType":"728","messageId":"729","endLine":440,"endColumn":47},{"ruleId":"694","severity":1,"message":"730","line":456,"column":15,"nodeType":"696","messageId":"697","endLine":456,"endColumn":21},{"ruleId":"726","severity":1,"message":"727","line":462,"column":46,"nodeType":"728","messageId":"729","endLine":462,"endColumn":47},{"ruleId":"694","severity":1,"message":"730","line":478,"column":15,"nodeType":"696","messageId":"697","endLine":478,"endColumn":21},{"ruleId":"726","severity":1,"message":"727","line":484,"column":46,"nodeType":"728","messageId":"729","endLine":484,"endColumn":47},{"ruleId":"694","severity":1,"message":"730","line":500,"column":15,"nodeType":"696","messageId":"697","endLine":500,"endColumn":21},{"ruleId":"726","severity":1,"message":"727","line":506,"column":46,"nodeType":"728","messageId":"729","endLine":506,"endColumn":47},{"ruleId":"694","severity":1,"message":"730","line":522,"column":15,"nodeType":"696","messageId":"697","endLine":522,"endColumn":21},{"ruleId":"726","severity":1,"message":"727","line":538,"column":46,"nodeType":"728","messageId":"729","endLine":538,"endColumn":47},{"ruleId":"694","severity":1,"message":"730","line":554,"column":15,"nodeType":"696","messageId":"697","endLine":554,"endColumn":21},{"ruleId":"726","severity":1,"message":"727","line":561,"column":46,"nodeType":"728","messageId":"729","endLine":561,"endColumn":47},{"ruleId":"694","severity":1,"message":"730","line":576,"column":15,"nodeType":"696","messageId":"697","endLine":576,"endColumn":21},{"ruleId":"726","severity":1,"message":"727","line":580,"column":46,"nodeType":"728","messageId":"729","endLine":580,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":599,"column":46,"nodeType":"728","messageId":"729","endLine":599,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":618,"column":46,"nodeType":"728","messageId":"729","endLine":618,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":637,"column":46,"nodeType":"728","messageId":"729","endLine":637,"endColumn":47},{"ruleId":"726","severity":1,"message":"727","line":664,"column":46,"nodeType":"728","messageId":"729","endLine":664,"endColumn":47},{"ruleId":"694","severity":1,"message":"731","line":2,"column":8,"nodeType":"696","messageId":"697","endLine":2,"endColumn":13},{"ruleId":"694","severity":1,"message":"732","line":7,"column":5,"nodeType":"696","messageId":"697","endLine":7,"endColumn":11},{"ruleId":"694","severity":1,"message":"733","line":8,"column":5,"nodeType":"696","messageId":"697","endLine":8,"endColumn":11},{"ruleId":"694","severity":1,"message":"734","line":9,"column":5,"nodeType":"696","messageId":"697","endLine":9,"endColumn":16},{"ruleId":"694","severity":1,"message":"735","line":10,"column":5,"nodeType":"696","messageId":"697","endLine":10,"endColumn":18},{"ruleId":"694","severity":1,"message":"736","line":11,"column":5,"nodeType":"696","messageId":"697","endLine":11,"endColumn":18},{"ruleId":"694","severity":1,"message":"737","line":12,"column":5,"nodeType":"696","messageId":"697","endLine":12,"endColumn":16},{"ruleId":"694","severity":1,"message":"738","line":13,"column":5,"nodeType":"696","messageId":"697","endLine":13,"endColumn":13},{"ruleId":"694","severity":1,"message":"739","line":18,"column":13,"nodeType":"696","messageId":"697","endLine":18,"endColumn":18},{"ruleId":"694","severity":1,"message":"740","line":21,"column":8,"nodeType":"696","messageId":"697","endLine":21,"endColumn":18},{"ruleId":"718","severity":1,"message":"719","line":117,"column":33,"nodeType":"720","endLine":117,"endColumn":76},{"ruleId":"694","severity":1,"message":"741","line":27,"column":5,"nodeType":"696","messageId":"697","endLine":27,"endColumn":11},{"ruleId":"742","severity":1,"message":"743","line":152,"column":41,"nodeType":"744","messageId":"745","endLine":152,"endColumn":43},{"ruleId":"742","severity":1,"message":"743","line":286,"column":52,"nodeType":"744","messageId":"745","endLine":286,"endColumn":54},{"ruleId":"694","severity":1,"message":"746","line":346,"column":17,"nodeType":"696","messageId":"697","endLine":346,"endColumn":25},{"ruleId":"718","severity":1,"message":"719","line":400,"column":37,"nodeType":"720","endLine":400,"endColumn":62},{"ruleId":"718","severity":1,"message":"719","line":556,"column":37,"nodeType":"720","endLine":556,"endColumn":62},{"ruleId":"718","severity":1,"message":"719","line":648,"column":37,"nodeType":"720","endLine":648,"endColumn":62},{"ruleId":"718","severity":1,"message":"719","line":710,"column":33,"nodeType":"720","endLine":710,"endColumn":95},{"ruleId":"718","severity":1,"message":"719","line":776,"column":33,"nodeType":"720","endLine":776,"endColumn":95},{"ruleId":"694","severity":1,"message":"747","line":6,"column":8,"nodeType":"696","messageId":"697","endLine":6,"endColumn":9},{"ruleId":"694","severity":1,"message":"748","line":29,"column":8,"nodeType":"696","messageId":"697","endLine":29,"endColumn":17},{"ruleId":"749","severity":1,"message":"750","line":100,"column":22,"nodeType":"751","messageId":"752","endLine":100,"endColumn":44},{"ruleId":"718","severity":1,"message":"719","line":199,"column":41,"nodeType":"720","endLine":199,"endColumn":66},{"ruleId":"718","severity":1,"message":"719","line":273,"column":37,"nodeType":"720","endLine":273,"endColumn":62},{"ruleId":"718","severity":1,"message":"719","line":308,"column":37,"nodeType":"720","endLine":308,"endColumn":62},{"ruleId":"742","severity":1,"message":"753","line":330,"column":102,"nodeType":"744","messageId":"754","endLine":330,"endColumn":104},{"ruleId":"742","severity":1,"message":"753","line":361,"column":102,"nodeType":"744","messageId":"754","endLine":361,"endColumn":104},{"ruleId":"718","severity":1,"message":"719","line":432,"column":61,"nodeType":"720","endLine":432,"endColumn":83},{"ruleId":"718","severity":1,"message":"719","line":456,"column":37,"nodeType":"720","endLine":456,"endColumn":62},{"ruleId":"742","severity":1,"message":"743","line":122,"column":62,"nodeType":"744","messageId":"745","endLine":122,"endColumn":64},{"ruleId":"694","severity":1,"message":"755","line":335,"column":33,"nodeType":"696","messageId":"697","endLine":335,"endColumn":54},{"ruleId":"694","severity":1,"message":"756","line":337,"column":17,"nodeType":"696","messageId":"697","endLine":337,"endColumn":22},{"ruleId":"694","severity":1,"message":"757","line":337,"column":34,"nodeType":"696","messageId":"697","endLine":337,"endColumn":41},{"ruleId":"718","severity":1,"message":"719","line":674,"column":33,"nodeType":"720","endLine":674,"endColumn":95},{"ruleId":"718","severity":1,"message":"719","line":687,"column":50,"nodeType":"720","endLine":687,"endColumn":112},{"ruleId":"718","severity":1,"message":"719","line":705,"column":65,"nodeType":"720","endLine":705,"endColumn":127},{"ruleId":"758","severity":1,"message":"759","line":1,"column":1,"nodeType":"760","endLine":7,"endColumn":2},{"ruleId":"694","severity":1,"message":"761","line":2,"column":10,"nodeType":"696","messageId":"697","endLine":2,"endColumn":13},{"ruleId":"694","severity":1,"message":"762","line":2,"column":17,"nodeType":"696","messageId":"697","endLine":2,"endColumn":26},{"ruleId":"694","severity":1,"message":"763","line":1,"column":16,"nodeType":"696","messageId":"697","endLine":1,"endColumn":26},{"ruleId":"694","severity":1,"message":"764","line":6,"column":8,"nodeType":"696","messageId":"697","endLine":6,"endColumn":18},{"ruleId":"694","severity":1,"message":"731","line":7,"column":8,"nodeType":"696","messageId":"697","endLine":7,"endColumn":13},{"ruleId":"694","severity":1,"message":"765","line":8,"column":8,"nodeType":"696","messageId":"697","endLine":8,"endColumn":19},{"ruleId":"694","severity":1,"message":"766","line":9,"column":10,"nodeType":"696","messageId":"697","endLine":9,"endColumn":16},{"ruleId":"694","severity":1,"message":"699","line":11,"column":10,"nodeType":"696","messageId":"697","endLine":11,"endColumn":14},{"ruleId":"694","severity":1,"message":"767","line":4,"column":8,"nodeType":"696","messageId":"697","endLine":4,"endColumn":15},{"ruleId":"694","severity":1,"message":"709","line":1,"column":28,"nodeType":"696","messageId":"697","endLine":1,"endColumn":36},{"ruleId":"694","severity":1,"message":"747","line":6,"column":8,"nodeType":"696","messageId":"697","endLine":6,"endColumn":9},{"ruleId":"694","severity":1,"message":"739","line":24,"column":13,"nodeType":"696","messageId":"697","endLine":24,"endColumn":18},{"ruleId":"694","severity":1,"message":"768","line":47,"column":10,"nodeType":"696","messageId":"697","endLine":47,"endColumn":26},{"ruleId":"694","severity":1,"message":"769","line":48,"column":8,"nodeType":"696","messageId":"697","endLine":48,"endColumn":18},{"ruleId":"694","severity":1,"message":"746","line":216,"column":88,"nodeType":"696","messageId":"697","endLine":216,"endColumn":96},{"ruleId":"718","severity":1,"message":"719","line":270,"column":37,"nodeType":"720","endLine":270,"endColumn":62},{"ruleId":"718","severity":1,"message":"719","line":329,"column":41,"nodeType":"720","endLine":329,"endColumn":66},{"ruleId":"718","severity":1,"message":"719","line":437,"column":37,"nodeType":"720","endLine":437,"endColumn":62},{"ruleId":"718","severity":1,"message":"719","line":543,"column":33,"nodeType":"720","endLine":543,"endColumn":58},{"ruleId":"718","severity":1,"message":"719","line":800,"column":33,"nodeType":"720","endLine":800,"endColumn":58},{"ruleId":"694","severity":1,"message":"770","line":7,"column":10,"nodeType":"696","messageId":"697","endLine":7,"endColumn":17},{"ruleId":"694","severity":1,"message":"733","line":11,"column":5,"nodeType":"696","messageId":"697","endLine":11,"endColumn":11},{"ruleId":"694","severity":1,"message":"734","line":12,"column":5,"nodeType":"696","messageId":"697","endLine":12,"endColumn":16},{"ruleId":"694","severity":1,"message":"735","line":13,"column":5,"nodeType":"696","messageId":"697","endLine":13,"endColumn":18},{"ruleId":"694","severity":1,"message":"736","line":14,"column":5,"nodeType":"696","messageId":"697","endLine":14,"endColumn":18},{"ruleId":"694","severity":1,"message":"737","line":15,"column":5,"nodeType":"696","messageId":"697","endLine":15,"endColumn":16},{"ruleId":"694","severity":1,"message":"738","line":16,"column":5,"nodeType":"696","messageId":"697","endLine":16,"endColumn":13},{"ruleId":"694","severity":1,"message":"771","line":17,"column":5,"nodeType":"696","messageId":"697","endLine":17,"endColumn":14},{"ruleId":"694","severity":1,"message":"772","line":29,"column":5,"nodeType":"696","messageId":"697","endLine":29,"endColumn":19},{"ruleId":"694","severity":1,"message":"773","line":30,"column":5,"nodeType":"696","messageId":"697","endLine":30,"endColumn":14},{"ruleId":"694","severity":1,"message":"774","line":37,"column":8,"nodeType":"696","messageId":"697","endLine":37,"endColumn":18},{"ruleId":"694","severity":1,"message":"739","line":39,"column":13,"nodeType":"696","messageId":"697","endLine":39,"endColumn":18},{"ruleId":"694","severity":1,"message":"775","line":224,"column":57,"nodeType":"696","messageId":"697","endLine":224,"endColumn":81},{"ruleId":"694","severity":1,"message":"776","line":224,"column":83,"nodeType":"696","messageId":"697","endLine":224,"endColumn":113},{"ruleId":"694","severity":1,"message":"777","line":1,"column":28,"nodeType":"696","messageId":"697","endLine":1,"endColumn":36},{"ruleId":"694","severity":1,"message":"771","line":3,"column":15,"nodeType":"696","messageId":"697","endLine":3,"endColumn":24},{"ruleId":"694","severity":1,"message":"778","line":3,"column":34,"nodeType":"696","messageId":"697","endLine":3,"endColumn":41},{"ruleId":"694","severity":1,"message":"779","line":3,"column":43,"nodeType":"696","messageId":"697","endLine":3,"endColumn":47},{"ruleId":"694","severity":1,"message":"780","line":3,"column":49,"nodeType":"696","messageId":"697","endLine":3,"endColumn":58},{"ruleId":"694","severity":1,"message":"733","line":3,"column":66,"nodeType":"696","messageId":"697","endLine":3,"endColumn":72},{"ruleId":"694","severity":1,"message":"734","line":4,"column":3,"nodeType":"696","messageId":"697","endLine":4,"endColumn":14},{"ruleId":"694","severity":1,"message":"735","line":4,"column":16,"nodeType":"696","messageId":"697","endLine":4,"endColumn":29},{"ruleId":"694","severity":1,"message":"736","line":4,"column":31,"nodeType":"696","messageId":"697","endLine":4,"endColumn":44},{"ruleId":"694","severity":1,"message":"781","line":4,"column":64,"nodeType":"696","messageId":"697","endLine":4,"endColumn":72},{"ruleId":"694","severity":1,"message":"782","line":9,"column":10,"nodeType":"696","messageId":"697","endLine":9,"endColumn":20},{"ruleId":"694","severity":1,"message":"783","line":11,"column":8,"nodeType":"696","messageId":"697","endLine":11,"endColumn":14},{"ruleId":"694","severity":1,"message":"784","line":15,"column":10,"nodeType":"696","messageId":"697","endLine":15,"endColumn":17},{"ruleId":"694","severity":1,"message":"785","line":15,"column":19,"nodeType":"696","messageId":"697","endLine":15,"endColumn":29},{"ruleId":"694","severity":1,"message":"786","line":15,"column":45,"nodeType":"696","messageId":"697","endLine":15,"endColumn":59},{"ruleId":"694","severity":1,"message":"774","line":18,"column":8,"nodeType":"696","messageId":"697","endLine":18,"endColumn":18},{"ruleId":"694","severity":1,"message":"738","line":19,"column":8,"nodeType":"696","messageId":"697","endLine":19,"endColumn":16},{"ruleId":"694","severity":1,"message":"787","line":24,"column":8,"nodeType":"696","messageId":"697","endLine":24,"endColumn":29},{"ruleId":"694","severity":1,"message":"788","line":25,"column":8,"nodeType":"696","messageId":"697","endLine":25,"endColumn":20},{"ruleId":"694","severity":1,"message":"789","line":26,"column":8,"nodeType":"696","messageId":"697","endLine":26,"endColumn":23},{"ruleId":"694","severity":1,"message":"790","line":27,"column":8,"nodeType":"696","messageId":"697","endLine":27,"endColumn":23},{"ruleId":"694","severity":1,"message":"791","line":29,"column":8,"nodeType":"696","messageId":"697","endLine":29,"endColumn":21},{"ruleId":"694","severity":1,"message":"792","line":30,"column":8,"nodeType":"696","messageId":"697","endLine":30,"endColumn":25},{"ruleId":"694","severity":1,"message":"793","line":31,"column":8,"nodeType":"696","messageId":"697","endLine":31,"endColumn":26},{"ruleId":"694","severity":1,"message":"794","line":48,"column":10,"nodeType":"696","messageId":"697","endLine":48,"endColumn":14},{"ruleId":"694","severity":1,"message":"795","line":193,"column":13,"nodeType":"696","messageId":"697","endLine":193,"endColumn":23},{"ruleId":"796","severity":1,"message":"797","line":619,"column":16,"nodeType":"798","messageId":"799","endLine":619,"endColumn":17,"suggestions":"800"},{"ruleId":"796","severity":1,"message":"797","line":619,"column":32,"nodeType":"798","messageId":"799","endLine":619,"endColumn":33,"suggestions":"801"},{"ruleId":"694","severity":1,"message":"802","line":625,"column":57,"nodeType":"696","messageId":"697","endLine":625,"endColumn":69},{"ruleId":"694","severity":1,"message":"803","line":712,"column":25,"nodeType":"696","messageId":"697","endLine":712,"endColumn":29},{"ruleId":"694","severity":1,"message":"804","line":712,"column":31,"nodeType":"696","messageId":"697","endLine":712,"endColumn":38},{"ruleId":"694","severity":1,"message":"805","line":712,"column":75,"nodeType":"696","messageId":"697","endLine":712,"endColumn":91},{"ruleId":"694","severity":1,"message":"806","line":712,"column":93,"nodeType":"696","messageId":"697","endLine":712,"endColumn":106},{"ruleId":"694","severity":1,"message":"807","line":758,"column":9,"nodeType":"696","messageId":"697","endLine":758,"endColumn":17},{"ruleId":"694","severity":1,"message":"808","line":807,"column":13,"nodeType":"696","messageId":"697","endLine":807,"endColumn":17},{"ruleId":"694","severity":1,"message":"809","line":3,"column":3,"nodeType":"696","messageId":"697","endLine":3,"endColumn":19},{"ruleId":"694","severity":1,"message":"810","line":5,"column":9,"nodeType":"696","messageId":"697","endLine":5,"endColumn":14},{"ruleId":"694","severity":1,"message":"811","line":8,"column":3,"nodeType":"696","messageId":"697","endLine":8,"endColumn":22},{"ruleId":"694","severity":1,"message":"812","line":13,"column":8,"nodeType":"696","messageId":"697","endLine":13,"endColumn":23},{"ruleId":"694","severity":1,"message":"813","line":14,"column":8,"nodeType":"696","messageId":"697","endLine":14,"endColumn":22},{"ruleId":"694","severity":1,"message":"814","line":21,"column":8,"nodeType":"696","messageId":"697","endLine":21,"endColumn":18},{"ruleId":"694","severity":1,"message":"815","line":39,"column":10,"nodeType":"696","messageId":"697","endLine":39,"endColumn":18},{"ruleId":"690","severity":1,"message":"816","line":160,"column":6,"nodeType":"692","endLine":160,"endColumn":8,"suggestions":"817"},{"ruleId":"694","severity":1,"message":"818","line":484,"column":10,"nodeType":"696","messageId":"697","endLine":484,"endColumn":33},{"ruleId":"694","severity":1,"message":"810","line":9,"column":8,"nodeType":"696","messageId":"697","endLine":9,"endColumn":13},{"ruleId":"694","severity":1,"message":"819","line":25,"column":16,"nodeType":"696","messageId":"697","endLine":25,"endColumn":22},{"ruleId":"694","severity":1,"message":"820","line":29,"column":10,"nodeType":"696","messageId":"697","endLine":29,"endColumn":41},{"ruleId":"821","severity":1,"message":"822","line":47,"column":5,"nodeType":"823","messageId":"824","endLine":50,"endColumn":6,"fix":"825"},{"ruleId":"821","severity":1,"message":"826","line":51,"column":5,"nodeType":"823","messageId":"824","endLine":54,"endColumn":6,"fix":"827"},{"ruleId":"821","severity":1,"message":"828","line":55,"column":5,"nodeType":"823","messageId":"824","endLine":58,"endColumn":6,"fix":"829"},{"ruleId":"821","severity":1,"message":"830","line":59,"column":5,"nodeType":"823","messageId":"824","endLine":62,"endColumn":6,"fix":"831"},{"ruleId":"821","severity":1,"message":"832","line":63,"column":5,"nodeType":"823","messageId":"824","endLine":66,"endColumn":6,"fix":"833"},{"ruleId":"694","severity":1,"message":"834","line":106,"column":12,"nodeType":"696","messageId":"697","endLine":106,"endColumn":17},{"ruleId":"694","severity":1,"message":"835","line":114,"column":12,"nodeType":"696","messageId":"697","endLine":114,"endColumn":29},{"ruleId":"694","severity":1,"message":"836","line":115,"column":12,"nodeType":"696","messageId":"697","endLine":115,"endColumn":21},{"ruleId":"694","severity":1,"message":"837","line":115,"column":23,"nodeType":"696","messageId":"697","endLine":115,"endColumn":35},{"ruleId":"694","severity":1,"message":"838","line":117,"column":12,"nodeType":"696","messageId":"697","endLine":117,"endColumn":23},{"ruleId":"690","severity":1,"message":"839","line":124,"column":8,"nodeType":"692","endLine":124,"endColumn":10,"suggestions":"840"},{"ruleId":"841","severity":1,"message":"842","line":249,"column":17,"nodeType":"843","messageId":"844","endLine":249,"endColumn":23},{"ruleId":"841","severity":1,"message":"842","line":252,"column":17,"nodeType":"843","messageId":"844","endLine":252,"endColumn":23},{"ruleId":"841","severity":1,"message":"842","line":255,"column":17,"nodeType":"843","messageId":"844","endLine":255,"endColumn":23},{"ruleId":"841","severity":1,"message":"842","line":258,"column":17,"nodeType":"843","messageId":"844","endLine":258,"endColumn":23},{"ruleId":"694","severity":1,"message":"845","line":264,"column":11,"nodeType":"696","messageId":"697","endLine":264,"endColumn":22},{"ruleId":"718","severity":1,"message":"719","line":435,"column":121,"nodeType":"720","endLine":435,"endColumn":147},{"ruleId":"694","severity":1,"message":"846","line":1,"column":10,"nodeType":"696","messageId":"697","endLine":1,"endColumn":13},{"ruleId":"694","severity":1,"message":"847","line":1,"column":15,"nodeType":"696","messageId":"697","endLine":1,"endColumn":24},{"ruleId":"694","severity":1,"message":"763","line":1,"column":34,"nodeType":"696","messageId":"697","endLine":1,"endColumn":44},{"ruleId":"694","severity":1,"message":"848","line":133,"column":9,"nodeType":"696","messageId":"697","endLine":133,"endColumn":19},{"ruleId":"694","severity":1,"message":"849","line":137,"column":9,"nodeType":"696","messageId":"697","endLine":137,"endColumn":19},{"ruleId":"694","severity":1,"message":"850","line":141,"column":9,"nodeType":"696","messageId":"697","endLine":141,"endColumn":20},{"ruleId":"694","severity":1,"message":"732","line":1,"column":15,"nodeType":"696","messageId":"697","endLine":1,"endColumn":21},{"ruleId":"694","severity":1,"message":"771","line":1,"column":30,"nodeType":"696","messageId":"697","endLine":1,"endColumn":39},{"ruleId":"694","severity":1,"message":"737","line":5,"column":3,"nodeType":"696","messageId":"697","endLine":5,"endColumn":14},{"ruleId":"694","severity":1,"message":"738","line":7,"column":3,"nodeType":"696","messageId":"697","endLine":7,"endColumn":11},{"ruleId":"694","severity":1,"message":"810","line":8,"column":3,"nodeType":"696","messageId":"697","endLine":8,"endColumn":8},{"ruleId":"694","severity":1,"message":"851","line":14,"column":8,"nodeType":"696","messageId":"697","endLine":14,"endColumn":14},{"ruleId":"694","severity":1,"message":"852","line":14,"column":18,"nodeType":"696","messageId":"697","endLine":14,"endColumn":35},{"ruleId":"694","severity":1,"message":"853","line":46,"column":7,"nodeType":"696","messageId":"697","endLine":46,"endColumn":14},{"ruleId":"694","severity":1,"message":"854","line":3,"column":21,"nodeType":"696","messageId":"697","endLine":3,"endColumn":25},"no-native-reassign",["855"],"no-negated-in-lhs",["856"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getConfig'. Either include it or remove the dependency array.","ArrayExpression",["857"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'FastfoodOutlined' is defined but never used.","'Auth' is defined but never used.","'Hub' is defined but never used.","'router' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'dispatch' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'authState.currentUser' and 'router'. Either include them or remove the dependency array.",["858"],"'Fragment' is defined but never used.","'connect' is defined but never used.","'Divider' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'signUp' is assigned a value but never used.","'setSignUp' is assigned a value but never used.","'handleSignUpSection' is assigned a value but never used.","'drawerWidth' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'TimerSharp' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'config' is assigned a value but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogActions' is defined but never used.","'FormControl' is defined but never used.","'MenuItem' is defined but never used.","'Icons' is defined but never used.","'apiService' is defined but never used.","'Legend' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'lineData' is assigned a value but never used.","'$' is defined but never used.","'alerticon' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'suggestedActionButton' is assigned a value but never used.","'match' is assigned a value but never used.","'history' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'API' is defined but never used.","'useEffect' is defined but never used.","'Typography' is defined but never used.","'AdjustIcon' is defined but never used.","'apiServices' is defined but never used.","'notify' is defined but never used.","'AddIcon' is defined but never used.","'UserStateContext' is defined but never used.","'classNames' is defined but never used.","'NavLink' is defined but never used.","'TextField' is defined but never used.","'RadialBarChart' is defined but never used.","'RadialBar' is defined but never used.","'InputLabel' is defined but never used.","'manageInputSelectOptions' is assigned a value but never used.","'manageInputSecondSelectOptions' is assigned a value but never used.","'useState' is defined but never used.","'Stepper' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'Collapse' is defined but never used.","'makeStyles' is defined but never used.","'Widget' is defined but never used.","'useForm' is defined but never used.","'Controller' is defined but never used.","'useFormContext' is defined but never used.","'OpenAirInterface_logo' is defined but never used.","'free5GC_logo' is defined but never used.","'azure_logo_grey' is defined but never used.","'nokia_logo_grey' is defined but never used.","'UERANSIM_logo' is defined but never used.","'airspan_logo_grey' is defined but never used.","'baicells_logo_grey' is defined but never used.","'Link' is defined but never used.","'activeStep' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["859","860"],["861","862"],"'devices_info' is assigned a value but never used.","'name' is assigned a value but never used.","'company' is assigned a value but never used.","'verificationCode' is assigned a value but never used.","'displaySignUp' is assigned a value but never used.","'thisView' is assigned a value but never used.","'auth' is assigned a value but never used.","'CircularProgress' is defined but never used.","'Paper' is defined but never used.","'LinearProgressProps' is defined but never used.","'CheckCircleIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'loadingGif' is defined but never used.","'progress' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'validate_ap'. Either include it or remove the dependency array.",["863"],"'LinearProgressWithLabel' is defined but never used.","'uuidv4' is defined but never used.","'getAccordionDetailsUtilityClass' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"id1\"] found.","Property","unnecessarilyComputedProperty",{"range":"864","text":"865"},"Unnecessarily computed property [\"id2\"] found.",{"range":"866","text":"867"},"Unnecessarily computed property [\"id3\"] found.",{"range":"868","text":"869"},"Unnecessarily computed property [\"id4\"] found.",{"range":"870","text":"871"},"Unnecessarily computed property [\"id5\"] found.",{"range":"872","text":"873"},"'value' is assigned a value but never used.","'callUnderProgress' is assigned a value but never used.","'logsToken' is assigned a value but never used.","'setLogsToken' is assigned a value but never used.","'inspectList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getInspectList'. Either include it or remove the dependency array.",["874"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'forceUpdate' is assigned a value but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'handleNext' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'Select' is defined but never used.","'SelectChangeEvent' is defined but never used.","'NextBtn' is assigned a value but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"875","fix":"876"},{"desc":"877","fix":"878"},{"messageId":"879","fix":"880","desc":"881"},{"messageId":"882","fix":"883","desc":"884"},{"messageId":"879","fix":"885","desc":"881"},{"messageId":"882","fix":"886","desc":"884"},{"desc":"887","fix":"888"},[1550,1557],"\"id1\"",[1640,1647],"\"id2\"",[1711,1718],"\"id3\"",[1782,1789],"\"id4\"",[1853,1860],"\"id5\"",{"desc":"889","fix":"890"},"Update the dependencies array to be: [getConfig]",{"range":"891","text":"892"},"Update the dependencies array to be: [authState.currentUser, router]",{"range":"893","text":"894"},"removeEscape",{"range":"895","text":"896"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"897","text":"898"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"899","text":"896"},{"range":"900","text":"898"},"Update the dependencies array to be: [validate_ap]",{"range":"901","text":"902"},"Update the dependencies array to be: [getInspectList]",{"range":"903","text":"904"},[666,668],"[getConfig]",[1986,1988],"[authState.currentUser, router]",[22838,22839],"",[22838,22838],"\\",[22854,22855],[22854,22854],[4327,4329],"[validate_ap]",[3731,3733],"[getInspectList]"]